{"version":3,"names":["React","getNativeElementProps","useSkeletonContext","useSkeleton_unstable","props","ref","animation","contextAnimation","appearance","contextAppearance","root","role","components"],"sources":["../../../src/components/Skeleton/useSkeleton.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { SkeletonProps, SkeletonState } from './Skeleton.types';\nimport { useSkeletonContext } from '../../contexts/SkeletonContext';\n\n/**\n * Create the state required to render Skeleton.\n *\n * The returned state can be modified with hooks such as useSkeletonStyles_unstable,\n * before being passed to renderSkeleton_unstable.\n *\n * @param props - props from this instance of Skeleton\n * @param ref - reference to root HTMLElement of Skeleton\n */\nexport const useSkeleton_unstable = (props: SkeletonProps, ref: React.Ref<HTMLElement>): SkeletonState => {\n  const { animation: contextAnimation, appearance: contextAppearance } = useSkeletonContext();\n  const { animation = contextAnimation ?? 'wave', appearance = contextAppearance ?? 'opaque' } = props;\n\n  const root = getNativeElementProps('div', {\n    ref,\n    role: 'progressbar',\n    'aria-busy': true,\n    'aria-label': 'Loading Content',\n    ...props,\n  });\n\n  return {\n    animation,\n    appearance,\n    components: {\n      root: 'div',\n    },\n    root,\n  };\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,qBAAqB,QAAQ;AAEtC,SAASC,kBAAkB,QAAQ;AAEnC;;;;;;;;;AASA,OAAO,MAAMC,oBAAA,GAAuBA,CAACC,KAAA,EAAsBC,GAAA,KAA+C;EACxG,MAAM;IAAEC,SAAA,EAAWC,gBAAA;IAAkBC,UAAA,EAAYC;EAAiB,CAAE,GAAGP,kBAAA;EACvE,MAAM;IAAEI,SAAA,GAAYC,gBAAA,aAAAA,gBAAA,cAAAA,gBAAA,GAAoB,MAAM;IAAEC,UAAA,GAAaC,iBAAA,aAAAA,iBAAA,cAAAA,iBAAA,GAAqB;EAAQ,CAAE,GAAGL,KAAA;EAE/F,MAAMM,IAAA,GAAOT,qBAAA,CAAsB,OAAO;IACxCI,GAAA;IACAM,IAAA,EAAM;IACN,aAAa,IAAI;IACjB,cAAc;IACd,GAAGP;EACL;EAEA,OAAO;IACLE,SAAA;IACAE,UAAA;IACAI,UAAA,EAAY;MACVF,IAAA,EAAM;IACR;IACAA;EACF;AACF"}