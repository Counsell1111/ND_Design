{"version":3,"names":["_element","_disableScrollElementProp","useFluent_unstable","useCallback","disableScrollElementProp","useDisableBodyScroll","targetDocument","disableScroll","body","target","_target_ownerDocument_defaultView","clientWidth","ownerDocument","documentElement","_target_ownerDocument_defaultView_innerWidth","innerWidth","defaultView","assertIsDisableScrollElement","count","style","overflow","paddingRight","previousOverflowStyle","previousPaddingRightStyle","element","_"],"sources":["../../src/utils/useDisableBodyScroll.ts"],"sourcesContent":["import { useFluent_unstable } from '@fluentui/react-shared-contexts';\nimport { useCallback } from 'react';\n\nconst disableScrollElementProp = '__fluentDisableScrollElement' as const;\n\ntype FluentDisableScrollElement = HTMLElement & {\n  [disableScrollElementProp]: {\n    count: number;\n    previousOverflowStyle: string;\n    previousPaddingRightStyle: string;\n  };\n};\n\n/**\n * hook that disables body scrolling through `overflow: hidden` CSS property\n */\nexport function useDisableBodyScroll() {\n  const { targetDocument } = useFluent_unstable();\n  return useCallback(() => {\n    if (targetDocument) {\n      return disableScroll(targetDocument.body);\n    }\n  }, [targetDocument]);\n}\n\n/**\n * disables scrolling from a given element through `overflow: hidden` CSS property\n * @param target - element to disable scrolling from\n * @returns a method for enabling scrolling again\n */\nexport function disableScroll(target: HTMLElement) {\n  const { clientWidth } = target.ownerDocument.documentElement;\n  const innerWidth = target.ownerDocument.defaultView?.innerWidth ?? 0;\n  assertIsDisableScrollElement(target);\n  if (target[disableScrollElementProp].count === 0) {\n    target.style.overflow = 'hidden';\n    target.style.paddingRight = `${innerWidth - clientWidth}px`;\n  }\n  target[disableScrollElementProp].count++;\n  return () => {\n    target[disableScrollElementProp].count--;\n    if (target[disableScrollElementProp].count === 0) {\n      target.style.overflow = target[disableScrollElementProp].previousOverflowStyle;\n      target.style.paddingRight = target[disableScrollElementProp].previousPaddingRightStyle;\n    }\n  };\n}\n\nfunction assertIsDisableScrollElement(element: HTMLElement): asserts element is FluentDisableScrollElement {\n  (element as FluentDisableScrollElement)[disableScrollElementProp] ??= {\n    count: 0,\n    previousOverflowStyle: element.style.overflow,\n    previousPaddingRightStyle: element.style.paddingRight,\n  };\n}\n"],"mappings":"IAiDGA,QAAA,EAAuCC,yBAAA;AAjD1C,SAASC,kBAAkB,QAAQ;AACnC,SAASC,WAAW,QAAQ;AAE5B,MAAMC,wBAAA,GAA2B;AAUjC;;;AAGA,OAAO,SAASC,qBAAA,EAAuB;EACrC,MAAM;IAAEC;EAAc,CAAE,GAAGJ,kBAAA;EAC3B,OAAOC,WAAA,CAAY,MAAM;IACvB,IAAIG,cAAA,EAAgB;MAClB,OAAOC,aAAA,CAAcD,cAAA,CAAeE,IAAI;IAC1C;EACF,GAAG,CAACF,cAAA,CAAe;AACrB;AAEA;;;;;AAKA,OAAO,SAASC,cAAcE,MAAmB,EAAE;MAE9BC,iCAAA;EADnB,MAAM;IAAEC;EAAW,CAAE,GAAGF,MAAA,CAAOG,aAAa,CAACC,eAAe;MACzCC,4CAAA;EAAnB,MAAMC,UAAA,GAAa,CAAAD,4CAAA,IAAAJ,iCAAA,GAAAD,MAAA,CAAOG,aAAa,CAACI,WAAW,cAAhCN,iCAAA,uBAAAA,iCAAA,CAAkCK,UAAU,cAA5CD,4CAAA,cAAAA,4CAAA,GAAgD,CAAC;EACpEG,4BAAA,CAA6BR,MAAA;EAC7B,IAAIA,MAAM,CAACL,wBAAA,CAAyB,CAACc,KAAK,KAAK,GAAG;IAChDT,MAAA,CAAOU,KAAK,CAACC,QAAQ,GAAG;IACxBX,MAAA,CAAOU,KAAK,CAACE,YAAY,GAAI,GAAEN,UAAA,GAAaJ,WAAY,IAAG;EAC7D;EACAF,MAAM,CAACL,wBAAA,CAAyB,CAACc,KAAK;EACtC,OAAO,MAAM;IACXT,MAAM,CAACL,wBAAA,CAAyB,CAACc,KAAK;IACtC,IAAIT,MAAM,CAACL,wBAAA,CAAyB,CAACc,KAAK,KAAK,GAAG;MAChDT,MAAA,CAAOU,KAAK,CAACC,QAAQ,GAAGX,MAAM,CAACL,wBAAA,CAAyB,CAACkB,qBAAqB;MAC9Eb,MAAA,CAAOU,KAAK,CAACE,YAAY,GAAGZ,MAAM,CAACL,wBAAA,CAAyB,CAACmB,yBAAyB;IACxF;EACF;AACF;AAEA,SAASN,6BAA6BO,OAAoB,EAAiD;;EACzG,CAAAC,CAAA,IAACzB,QAAA,GAAAwB,OAAA,EAAuCvB,yBAAA,GAAAG,wBAAA,CAAyB,cAAAqB,CAAA,cAAAA,CAAA,GAAhEzB,QAAsC,CAACC,yBAAA,CAAyB,GAAK;IACpEiB,KAAA,EAAO;IACPI,qBAAA,EAAuBE,OAAA,CAAQL,KAAK,CAACC,QAAQ;IAC7CG,yBAAA,EAA2BC,OAAA,CAAQL,KAAK,CAACE;EAC3C,CAAC;AACH"}