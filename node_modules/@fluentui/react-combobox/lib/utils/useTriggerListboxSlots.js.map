{"version":3,"names":["React","mergeCallbacks","useId","useEventCallback","useMergedRefs","getDropdownActionFromKey","getIndexFromAction","useTriggerListboxSlots","props","state","ref","triggerSlot","listboxSlot","multiselect","activeOption","getCount","getIndexOfId","getOptionAtIndex","ignoreNextBlur","open","selectOption","setActiveOption","setFocusVisible","setHasFocus","setOpen","triggerRef","useRef","listboxId","id","listbox","tabIndex","undefined","trigger","role","listboxOnClick","event","_triggerRef_current","current","focus","onClick","listboxOnMouseOver","onMouseOver","listboxOnMouseDown","onMouseDown","onBlur","onFocus","onKeyDown","action","maxIndex","activeIndex","newIndex","preventDefault","stopPropagation","disabled"],"sources":["../../src/utils/useTriggerListboxSlots.ts"],"sourcesContent":["import * as React from 'react';\nimport { mergeCallbacks, useId, useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport type { ExtractSlotProps, Slot } from '@fluentui/react-utilities';\nimport { getDropdownActionFromKey, getIndexFromAction } from '../utils/dropdownKeyActions';\nimport { Listbox } from '../components/Listbox/Listbox';\nimport type { ComboboxBaseProps, ComboboxBaseState } from './ComboboxBase.types';\n\nexport function useTriggerListboxSlots(\n  props: ComboboxBaseProps,\n  state: ComboboxBaseState,\n  ref: React.Ref<HTMLButtonElement>,\n  triggerSlot?: ExtractSlotProps<Slot<'button'>>,\n  listboxSlot?: ExtractSlotProps<Slot<typeof Listbox>>,\n): [trigger: ExtractSlotProps<Slot<'button'>>, listbox?: ExtractSlotProps<Slot<typeof Listbox>>];\nexport function useTriggerListboxSlots(\n  props: ComboboxBaseProps,\n  state: ComboboxBaseState,\n  ref: React.Ref<HTMLInputElement>,\n  triggerSlot?: ExtractSlotProps<Slot<'input'>>,\n  listboxSlot?: ExtractSlotProps<Slot<typeof Listbox>>,\n): [trigger: ExtractSlotProps<Slot<'input'>>, listbox?: ExtractSlotProps<Slot<typeof Listbox>>];\n\n/*\n * useTriggerListboxSlots returns a tuple of trigger/listbox shorthand,\n * with the semantics and event handlers needed for the Combobox and Dropdown components.\n * The element type of the ref should always match the element type used in the trigger shorthand.\n */\nexport function useTriggerListboxSlots(\n  props: ComboboxBaseProps,\n  state: ComboboxBaseState,\n  ref: React.Ref<HTMLButtonElement | HTMLInputElement>,\n  triggerSlot?: ExtractSlotProps<Slot<'input'>> | ExtractSlotProps<Slot<'button'>>,\n  listboxSlot?: ExtractSlotProps<Slot<typeof Listbox>>,\n): [\n  trigger: ExtractSlotProps<Slot<'input'>> | ExtractSlotProps<Slot<'button'>>,\n  listbox?: ExtractSlotProps<Slot<typeof Listbox>>,\n] {\n  const { multiselect } = props;\n  const {\n    activeOption,\n    getCount,\n    getIndexOfId,\n    getOptionAtIndex,\n    ignoreNextBlur,\n    open,\n    selectOption,\n    setActiveOption,\n    setFocusVisible,\n    setHasFocus,\n    setOpen,\n  } = state;\n\n  // handle trigger focus/blur\n  const triggerRef: typeof ref = React.useRef(null);\n\n  // resolve listbox shorthand props\n  const listboxId = useId('fluent-listbox', listboxSlot?.id);\n  const listbox: typeof listboxSlot = listboxSlot && {\n    id: listboxId,\n    multiselect,\n    tabIndex: undefined,\n    ...listboxSlot,\n  };\n\n  // resolve trigger shorthand props\n  const trigger: typeof triggerSlot = {\n    'aria-expanded': open,\n    'aria-activedescendant': open ? activeOption?.id : undefined,\n    role: 'combobox',\n    ...triggerSlot,\n    // explicitly type the ref as an intersection here to prevent type errors\n    // since the `children` prop has mutually incompatible types between input/button\n    // functionally both ref and triggerRef will always be the same element type\n    ref: useMergedRefs(ref, triggerSlot?.ref, triggerRef) as React.Ref<HTMLButtonElement & HTMLInputElement>,\n  };\n\n  /*\n   * Handle focus when clicking the listbox popup:\n   * 1. Move focus back to the button/input when the listbox is clicked (otherwise it goes to body)\n   * 2. Do not close the listbox on button/input blur when clicking into the listbox\n   */\n  const listboxOnClick = useEventCallback(\n    mergeCallbacks((event: React.MouseEvent<HTMLDivElement>) => {\n      triggerRef.current?.focus();\n    }, listbox?.onClick),\n  );\n\n  const listboxOnMouseOver = useEventCallback(\n    mergeCallbacks((event: React.MouseEvent<HTMLDivElement>) => {\n      setFocusVisible(false);\n    }, listbox?.onMouseOver),\n  );\n\n  const listboxOnMouseDown = useEventCallback(\n    mergeCallbacks((event: React.MouseEvent<HTMLDivElement>) => {\n      ignoreNextBlur.current = true;\n    }, listbox?.onMouseDown),\n  );\n\n  // listbox is nullable, only add event handlers if it exists\n  if (listbox) {\n    listbox.onClick = listboxOnClick;\n    listbox.onMouseOver = listboxOnMouseOver;\n    listbox.onMouseDown = listboxOnMouseDown;\n  }\n\n  // the trigger should open/close the popup on click or blur\n  trigger.onBlur = mergeCallbacks((event: React.FocusEvent<HTMLButtonElement> & React.FocusEvent<HTMLInputElement>) => {\n    if (!ignoreNextBlur.current) {\n      setOpen(event, false);\n    }\n\n    ignoreNextBlur.current = false;\n\n    setHasFocus(false);\n  }, trigger.onBlur);\n\n  trigger.onClick = mergeCallbacks(\n    (event: React.MouseEvent<HTMLButtonElement> & React.MouseEvent<HTMLInputElement>) => {\n      setOpen(event, !open);\n    },\n    trigger.onClick,\n  );\n\n  trigger.onFocus = mergeCallbacks(\n    (event: React.FocusEvent<HTMLButtonElement> & React.FocusEvent<HTMLInputElement>) => {\n      setHasFocus(true);\n    },\n    trigger.onFocus,\n  );\n\n  // handle combobox keyboard interaction\n  trigger.onKeyDown = mergeCallbacks(\n    (event: React.KeyboardEvent<HTMLButtonElement> & React.KeyboardEvent<HTMLInputElement>) => {\n      const action = getDropdownActionFromKey(event, { open, multiselect });\n      const maxIndex = getCount() - 1;\n      const activeIndex = activeOption ? getIndexOfId(activeOption.id) : -1;\n      let newIndex = activeIndex;\n\n      switch (action) {\n        case 'Open':\n          event.preventDefault();\n          setFocusVisible(true);\n          setOpen(event, true);\n          break;\n        case 'Close':\n          // stop propagation for escape key to avoid dismissing any parent popups\n          event.stopPropagation();\n          event.preventDefault();\n          setOpen(event, false);\n          break;\n        case 'CloseSelect':\n          !multiselect && !activeOption?.disabled && setOpen(event, false);\n        // fallthrough\n        case 'Select':\n          activeOption && selectOption(event, activeOption);\n          event.preventDefault();\n          break;\n        case 'Tab':\n          !multiselect && activeOption && selectOption(event, activeOption);\n          break;\n        default:\n          newIndex = getIndexFromAction(action, activeIndex, maxIndex);\n      }\n      if (newIndex !== activeIndex) {\n        // prevent default page scroll/keyboard action if the index changed\n        event.preventDefault();\n        setActiveOption(getOptionAtIndex(newIndex));\n        setFocusVisible(true);\n      }\n    },\n    trigger.onKeyDown,\n  );\n\n  trigger.onMouseOver = mergeCallbacks(\n    (event: React.MouseEvent<HTMLButtonElement> & React.MouseEvent<HTMLInputElement>) => {\n      setFocusVisible(false);\n    },\n    trigger.onMouseOver,\n  );\n\n  return [trigger, listbox];\n}\n"],"mappings":"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"}