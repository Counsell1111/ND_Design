{"version":3,"names":["createContext","useContextSelector","AccordionContext","undefined","accordionContextDefaultValue","openItems","collapsible","requestToggle","AccordionProvider","Provider","useAccordionContext_unstable","selector","ctx"],"sources":["../../../src/components/Accordion/AccordionContext.ts"],"sourcesContent":["import { createContext, ContextSelector, useContextSelector } from '@fluentui/react-context-selector';\nimport type { Context } from '@fluentui/react-context-selector';\nimport type { AccordionContextValue } from './Accordion.types';\n\nexport const AccordionContext: Context<AccordionContextValue> = createContext<AccordionContextValue | undefined>(\n  undefined,\n) as Context<AccordionContextValue>;\n\nconst accordionContextDefaultValue: AccordionContextValue = {\n  openItems: [],\n  collapsible: false,\n  requestToggle() {\n    /* noop */\n  },\n};\n\nexport const AccordionProvider = AccordionContext.Provider;\nexport const useAccordionContext_unstable = <T>(selector: ContextSelector<AccordionContextValue, T>): T =>\n  useContextSelector(AccordionContext, (ctx = accordionContextDefaultValue) => selector(ctx));\n"],"mappings":"AAAA,SAASA,aAAa,EAAmBC,kBAAkB,QAAQ;AAInE,OAAO,MAAMC,gBAAA,gBAAmDF,aAAA,CAC9DG,SAAA;AAGF,MAAMC,4BAAA,GAAsD;EAC1DC,SAAA,EAAW,EAAE;EACbC,WAAA,EAAa,KAAK;EAClBC,cAAA,EAAgB;IACd;AAEJ;AAEA,OAAO,MAAMC,iBAAA,GAAoBN,gBAAA,CAAiBO,QAAQ;AAC1D,OAAO,MAAMC,4BAAA,GAAmCC,QAAA,IAC9CV,kBAAA,CAAmBC,gBAAA,EAAkB,CAACU,GAAA,GAAMR,4BAA4B,KAAKO,QAAA,CAASC,GAAA"}