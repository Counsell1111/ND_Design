{"version":3,"names":["createPriorityQueue","compare","arr","size","left","i","right","parent","Math","floor","swap","a","b","tmp","heapify","smallest","l","r","dequeue","Error","res","peek","enqueue","item","p","contains","index","indexOf","remove","clear","all","slice"],"sources":["../src/priorityQueue.ts"],"sourcesContent":["export type PriorityQueueCompareFn<T> = (a: T, b: T) => number;\n\nexport interface PriorityQueue<T> {\n  all: () => T[];\n  clear: () => void;\n  contains: (item: T) => boolean;\n  dequeue: () => T;\n  enqueue: (item: T) => void;\n  peek: () => T | null;\n  remove: (item: T) => void;\n  size: () => number;\n}\n\n/**\n * @param compare - comparison function for items\n * @returns Priority queue implemented with a min heap\n */\nexport function createPriorityQueue<T>(compare: PriorityQueueCompareFn<T>): PriorityQueue<T> {\n  const arr: T[] = [];\n  let size = 0;\n\n  const left = (i: number) => {\n    return 2 * i + 1;\n  };\n\n  const right = (i: number) => {\n    return 2 * i + 2;\n  };\n\n  const parent = (i: number) => {\n    return Math.floor((i - 1) / 2);\n  };\n\n  const swap = (a: number, b: number) => {\n    const tmp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = tmp;\n  };\n\n  const heapify = (i: number) => {\n    let smallest = i;\n    const l = left(i);\n    const r = right(i);\n\n    if (l < size && compare(arr[l], arr[smallest]) < 0) {\n      smallest = l;\n    }\n\n    if (r < size && compare(arr[r], arr[smallest]) < 0) {\n      smallest = r;\n    }\n\n    if (smallest !== i) {\n      swap(smallest, i);\n      heapify(smallest);\n    }\n  };\n\n  const dequeue = () => {\n    if (size === 0) {\n      throw new Error('Priority queue empty');\n    }\n\n    const res = arr[0];\n    arr[0] = arr[--size];\n    heapify(0);\n\n    return res;\n  };\n\n  const peek = () => {\n    if (size === 0) {\n      return null;\n    }\n\n    return arr[0];\n  };\n\n  const enqueue = (item: T) => {\n    arr[size++] = item;\n    let i = size - 1;\n    let p = parent(i);\n    while (i > 0 && compare(arr[p], arr[i]) > 0) {\n      swap(p, i);\n      i = p;\n      p = parent(i);\n    }\n  };\n\n  const contains = (item: T) => {\n    const index = arr.indexOf(item);\n    return index >= 0 && index < size;\n  };\n\n  const remove = (item: T) => {\n    const i = arr.indexOf(item);\n\n    if (i === -1 || i >= size) {\n      return;\n    }\n\n    arr[i] = arr[--size];\n    heapify(i);\n  };\n\n  const clear = () => {\n    size = 0;\n  };\n\n  const all = () => {\n    return arr.slice(0, size);\n  };\n\n  return {\n    all,\n    clear,\n    contains,\n    dequeue,\n    enqueue,\n    peek,\n    remove,\n    size: () => size,\n  };\n}\n"],"mappings":"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"}