{"version":3,"names":["React","useEventCallback","useDataGridContext_unstable","useTableRowIdContext","useIsInTableHeader","useTableSelectionCell_unstable","useDataGridSelectionCell_unstable","props","ref","isHeader","rowId","subtle","ctx","subtleSelection","checked","selection","selectionMode","allRowsSelected","someRowsSelected","isRowSelected","toggleAllRows","type","onClick","e","_props_onClick","call","as","role","hidden","undefined"],"sources":["../../../src/components/DataGridSelectionCell/useDataGridSelectionCell.ts"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { useTableRowIdContext } from '../../contexts/rowIdContext';\nimport { useIsInTableHeader } from '../../contexts/tableHeaderContext';\nimport { useTableSelectionCell_unstable } from '../TableSelectionCell/useTableSelectionCell';\nimport type { DataGridSelectionCellProps, DataGridSelectionCellState } from './DataGridSelectionCell.types';\n\n/**\n * Create the state required to render DataGridSelectionCell.\n *\n * The returned state can be modified with hooks such as useDataGridSelectionCellStyles_unstable,\n * before being passed to renderDataGridSelectionCell_unstable.\n *\n * @param props - props from this instance of DataGridSelectionCell\n * @param ref - reference to root HTMLElement of DataGridSelectionCell\n */\nexport const useDataGridSelectionCell_unstable = (\n  props: DataGridSelectionCellProps,\n  ref: React.Ref<HTMLElement>,\n): DataGridSelectionCellState => {\n  const isHeader = useIsInTableHeader();\n  const rowId = useTableRowIdContext();\n  const subtle = useDataGridContext_unstable(ctx => ctx.subtleSelection);\n  const checked = useDataGridContext_unstable(ctx => {\n    if (isHeader && ctx.selection.selectionMode === 'multiselect') {\n      return ctx.selection.allRowsSelected ? true : ctx.selection.someRowsSelected ? 'mixed' : false;\n    }\n\n    return ctx.selection.isRowSelected(rowId);\n  });\n\n  const toggleAllRows = useDataGridContext_unstable(ctx => ctx.selection.toggleAllRows);\n  const type = useDataGridContext_unstable(ctx =>\n    ctx.selection.selectionMode === 'multiselect' ? 'checkbox' : 'radio',\n  );\n\n  const onClick = useEventCallback((e: React.MouseEvent<HTMLTableCellElement>) => {\n    if (isHeader) {\n      toggleAllRows(e);\n    }\n\n    props.onClick?.(e);\n  });\n\n  return useTableSelectionCell_unstable(\n    {\n      as: 'div',\n      role: 'gridcell',\n      checked,\n      type,\n      hidden: isHeader && type === 'radio',\n      'aria-checked': isHeader ? checked : undefined,\n      'aria-selected': isHeader || checked === 'mixed' ? undefined : checked,\n      subtle,\n      ...props,\n      onClick,\n    },\n    ref,\n  );\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,gBAAgB,QAAQ;AACjC,SAASC,2BAA2B,QAAQ;AAC5C,SAASC,oBAAoB,QAAQ;AACrC,SAASC,kBAAkB,QAAQ;AACnC,SAASC,8BAA8B,QAAQ;AAG/C;;;;;;;;;AASA,OAAO,MAAMC,iCAAA,GAAoCA,CAC/CC,KAAA,EACAC,GAAA,KAC+B;EAC/B,MAAMC,QAAA,GAAWL,kBAAA;EACjB,MAAMM,KAAA,GAAQP,oBAAA;EACd,MAAMQ,MAAA,GAAST,2BAAA,CAA4BU,GAAA,IAAOA,GAAA,CAAIC,eAAe;EACrE,MAAMC,OAAA,GAAUZ,2BAAA,CAA4BU,GAAA,IAAO;IACjD,IAAIH,QAAA,IAAYG,GAAA,CAAIG,SAAS,CAACC,aAAa,KAAK,eAAe;MAC7D,OAAOJ,GAAA,CAAIG,SAAS,CAACE,eAAe,GAAG,IAAI,GAAGL,GAAA,CAAIG,SAAS,CAACG,gBAAgB,GAAG,UAAU,KAAK;IAChG;IAEA,OAAON,GAAA,CAAIG,SAAS,CAACI,aAAa,CAACT,KAAA;EACrC;EAEA,MAAMU,aAAA,GAAgBlB,2BAAA,CAA4BU,GAAA,IAAOA,GAAA,CAAIG,SAAS,CAACK,aAAa;EACpF,MAAMC,IAAA,GAAOnB,2BAAA,CAA4BU,GAAA,IACvCA,GAAA,CAAIG,SAAS,CAACC,aAAa,KAAK,gBAAgB,aAAa,OAAO;EAGtE,MAAMM,OAAA,GAAUrB,gBAAA,CAAkBsB,CAAA,IAA8C;QAK9EC,cAAA;IAJA,IAAIf,QAAA,EAAU;MACZW,aAAA,CAAcG,CAAA;IAChB;IAEA,CAAAC,cAAA,GAAAjB,KAAA,CAAMe,OAAO,cAAbE,cAAA,uBAAAA,cAAA,CAAAC,IAAA,CAAAlB,KAAA,EAAgBgB,CAAA;EAClB;EAEA,OAAOlB,8BAAA,CACL;IACEqB,EAAA,EAAI;IACJC,IAAA,EAAM;IACNb,OAAA;IACAO,IAAA;IACAO,MAAA,EAAQnB,QAAA,IAAYY,IAAA,KAAS;IAC7B,gBAAgBZ,QAAA,GAAWK,OAAA,GAAUe,SAAS;IAC9C,iBAAiBpB,QAAA,IAAYK,OAAA,KAAY,UAAUe,SAAA,GAAYf,OAAO;IACtEH,MAAA;IACA,GAAGJ,KAAK;IACRe;EACF,GACAd,GAAA;AAEJ"}