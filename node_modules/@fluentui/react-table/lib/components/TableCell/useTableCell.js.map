{"version":3,"names":["React","getNativeElementProps","useTableContext","useTableCell_unstable","props","ref","noNativeElements","size","_props_as","rootComponent","as","components","root","role","undefined"],"sources":["../../../src/components/TableCell/useTableCell.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { TableCellProps, TableCellState } from './TableCell.types';\nimport { useTableContext } from '../../contexts/tableContext';\n\n/**\n * Create the state required to render TableCell.\n *\n * The returned state can be modified with hooks such as useTableCellStyles_unstable,\n * before being passed to renderTableCell_unstable.\n *\n * @param props - props from this instance of TableCell\n * @param ref - reference to root HTMLElement of TableCell\n */\nexport const useTableCell_unstable = (props: TableCellProps, ref: React.Ref<HTMLElement>): TableCellState => {\n  const { noNativeElements, size } = useTableContext();\n\n  const rootComponent = props.as ?? noNativeElements ? 'div' : 'td';\n\n  return {\n    components: {\n      root: rootComponent,\n    },\n    root: getNativeElementProps(rootComponent, {\n      ref,\n      role: rootComponent === 'div' ? 'cell' : undefined,\n      ...props,\n    }),\n    noNativeElements,\n    size,\n  };\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,qBAAqB,QAAQ;AAEtC,SAASC,eAAe,QAAQ;AAEhC;;;;;;;;;AASA,OAAO,MAAMC,qBAAA,GAAwBA,CAACC,KAAA,EAAuBC,GAAA,KAAgD;EAC3G,MAAM;IAAEC,gBAAA;IAAkBC;EAAI,CAAE,GAAGL,eAAA;MAEbM,SAAA;EAAtB,MAAMC,aAAA,GAAgB,EAAAD,SAAA,GAAAJ,KAAA,CAAMM,EAAE,cAARF,SAAA,cAAAA,SAAA,GAAYF,gBAAgB,IAAG,QAAQ,IAAI;EAEjE,OAAO;IACLK,UAAA,EAAY;MACVC,IAAA,EAAMH;IACR;IACAG,IAAA,EAAMX,qBAAA,CAAsBQ,aAAA,EAAe;MACzCJ,GAAA;MACAQ,IAAA,EAAMJ,aAAA,KAAkB,QAAQ,SAASK,SAAS;MAClD,GAAGV;IACL;IACAE,gBAAA;IACAC;EACF;AACF"}