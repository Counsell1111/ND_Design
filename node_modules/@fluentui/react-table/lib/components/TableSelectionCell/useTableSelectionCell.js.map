{"version":3,"names":["React","resolveShorthand","useId","Checkbox","Radio","useTableCell_unstable","useTableContext","useTableSelectionCell_unstable","props","ref","tableCellState","noNativeElements","type","checked","subtle","hidden","components","checkboxIndicator","radioIndicator","required","defaultProps","input","name"],"sources":["../../../src/components/TableSelectionCell/useTableSelectionCell.tsx"],"sourcesContent":["import * as React from 'react';\nimport { resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { Checkbox } from '@fluentui/react-checkbox';\nimport { Radio } from '@fluentui/react-radio';\nimport type { TableSelectionCellProps, TableSelectionCellState } from './TableSelectionCell.types';\nimport { useTableCell_unstable } from '../TableCell/useTableCell';\nimport { useTableContext } from '../../contexts/tableContext';\n\n/**\n * Create the state required to render TableSelectionCell.\n *\n * The returned state can be modified with hooks such as useTableSelectionCellStyles_unstable,\n * before being passed to renderTableSelectionCell_unstable.\n *\n * @param props - props from this instance of TableSelectionCell\n * @param ref - reference to root HTMLElement of TableSelectionCell\n */\nexport const useTableSelectionCell_unstable = (\n  props: TableSelectionCellProps,\n  ref: React.Ref<HTMLElement>,\n): TableSelectionCellState => {\n  const tableCellState = useTableCell_unstable(props, ref);\n  const { noNativeElements } = useTableContext();\n  const { type = 'checkbox', checked = false, subtle = false, hidden = false } = props;\n\n  return {\n    ...tableCellState,\n    components: {\n      ...tableCellState.components,\n      checkboxIndicator: Checkbox,\n      radioIndicator: Radio,\n    },\n    checkboxIndicator: resolveShorthand(props.checkboxIndicator, {\n      required: type === 'checkbox',\n      defaultProps: { checked: props.checked },\n    }),\n    radioIndicator: resolveShorthand(props.radioIndicator, {\n      required: type === 'radio',\n      defaultProps: { checked: !!checked, input: { name: useId('table-selection-radio') } },\n    }),\n    type,\n    checked,\n    noNativeElements,\n    subtle,\n    hidden,\n  };\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,gBAAgB,EAAEC,KAAK,QAAQ;AACxC,SAASC,QAAQ,QAAQ;AACzB,SAASC,KAAK,QAAQ;AAEtB,SAASC,qBAAqB,QAAQ;AACtC,SAASC,eAAe,QAAQ;AAEhC;;;;;;;;;AASA,OAAO,MAAMC,8BAAA,GAAiCA,CAC5CC,KAAA,EACAC,GAAA,KAC4B;EAC5B,MAAMC,cAAA,GAAiBL,qBAAA,CAAsBG,KAAA,EAAOC,GAAA;EACpD,MAAM;IAAEE;EAAgB,CAAE,GAAGL,eAAA;EAC7B,MAAM;IAAEM,IAAA,GAAO;IAAYC,OAAA,GAAU,KAAK;IAAEC,MAAA,GAAS,KAAK;IAAEC,MAAA,GAAS;EAAK,CAAE,GAAGP,KAAA;EAE/E,OAAO;IACL,GAAGE,cAAc;IACjBM,UAAA,EAAY;MACV,GAAGN,cAAA,CAAeM,UAAU;MAC5BC,iBAAA,EAAmBd,QAAA;MACnBe,cAAA,EAAgBd;IAClB;IACAa,iBAAA,EAAmBhB,gBAAA,CAAiBO,KAAA,CAAMS,iBAAiB,EAAE;MAC3DE,QAAA,EAAUP,IAAA,KAAS;MACnBQ,YAAA,EAAc;QAAEP,OAAA,EAASL,KAAA,CAAMK;MAAQ;IACzC;IACAK,cAAA,EAAgBjB,gBAAA,CAAiBO,KAAA,CAAMU,cAAc,EAAE;MACrDC,QAAA,EAAUP,IAAA,KAAS;MACnBQ,YAAA,EAAc;QAAEP,OAAA,EAAS,CAAC,CAACA,OAAA;QAASQ,KAAA,EAAO;UAAEC,IAAA,EAAMpB,KAAA,CAAM;QAAyB;MAAE;IACtF;IACAU,IAAA;IACAC,OAAA;IACAF,gBAAA;IACAG,MAAA;IACAC;EACF;AACF"}