{"version":3,"names":["React","ArrowLeft","ArrowRight","Enter","Escape","Shift","Space","useEventCallback","useFluent_unstable","useFluent","STEP","PRECISION_MODIFIER","PRECISION_FACTOR","useKeyboardResizing","columnResizeState","columnId","useRef","onChangeRef","addListenerTimeout","columnResizeStateRef","useEffect","current","targetDocument","keyboardHandler","event","colId","width","getColumnWidth","precisionModifier","getModifierState","stopEvent","preventDefault","stopPropagation","key","setColumnWidth","disableInteractiveMode","_targetDocument_defaultView","_targetDocument_defaultView1","defaultView","clearTimeout","removeEventListener","enableInteractiveMode","useCallback","_onChangeRef_current","call","setTimeout","addEventListener","undefined","toggleInteractiveMode","onChange"],"sources":["../../src/hooks/useKeyboardResizing.ts"],"sourcesContent":["import * as React from 'react';\nimport { ArrowLeft, ArrowRight, Enter, Escape, Shift, Space } from '@fluentui/keyboard-keys';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { ColumnResizeState, EnableKeyboardModeOnChangeCallback, TableColumnId } from './types';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n\nconst STEP = 20;\nconst PRECISION_MODIFIER = Shift;\nconst PRECISION_FACTOR = 1 / 4;\n\nexport function useKeyboardResizing(columnResizeState: ColumnResizeState) {\n  const columnId = React.useRef<TableColumnId>();\n  const onChangeRef = React.useRef<EnableKeyboardModeOnChangeCallback>();\n  const addListenerTimeout = React.useRef<number>();\n\n  const columnResizeStateRef = React.useRef<ColumnResizeState>(columnResizeState);\n  React.useEffect(() => {\n    columnResizeStateRef.current = columnResizeState;\n  }, [columnResizeState]);\n\n  const { targetDocument } = useFluent();\n\n  const keyboardHandler = useEventCallback((event: KeyboardEvent) => {\n    const colId = columnId.current;\n\n    if (!colId) {\n      return;\n    }\n\n    const width = columnResizeStateRef.current.getColumnWidth(colId);\n    const precisionModifier = event.getModifierState(PRECISION_MODIFIER);\n\n    const stopEvent = () => {\n      event.preventDefault();\n      event.stopPropagation();\n    };\n\n    switch (event.key) {\n      case ArrowLeft:\n        stopEvent();\n        columnResizeStateRef.current.setColumnWidth(event, {\n          columnId: colId,\n          width: width - (precisionModifier ? STEP * PRECISION_FACTOR : STEP),\n        });\n        return;\n\n      case ArrowRight:\n        stopEvent();\n        columnResizeStateRef.current.setColumnWidth(event, {\n          columnId: colId,\n          width: width + (precisionModifier ? STEP * PRECISION_FACTOR : STEP),\n        });\n        return;\n\n      case Space:\n      case Enter:\n      case Escape:\n        stopEvent();\n        disableInteractiveMode();\n        break;\n    }\n  });\n\n  // On component unmout, cancel any timer for adding a listener (if it exists) and remove the listener\n  React.useEffect(\n    () => () => {\n      targetDocument?.defaultView?.clearTimeout(addListenerTimeout.current);\n      targetDocument?.defaultView?.removeEventListener('keydown', keyboardHandler);\n    },\n    [keyboardHandler, targetDocument?.defaultView],\n  );\n\n  const enableInteractiveMode = React.useCallback(\n    (colId: TableColumnId) => {\n      columnId.current = colId;\n      onChangeRef.current?.(colId, true);\n      // Create the listener in the next tick, because the event that triggered this is still propagating\n      // when Enter was pressed and would be caught in the keyboardHandler, disabling the keyboard mode immediately.\n      // No idea why this is happening, but this is a working workaround.\n      // Tracked here: https://github.com/microsoft/fluentui/issues/27177\n      addListenerTimeout.current = targetDocument?.defaultView?.setTimeout(() => {\n        targetDocument?.defaultView?.addEventListener('keydown', keyboardHandler);\n      }, 0);\n    },\n    [keyboardHandler, targetDocument?.defaultView],\n  );\n\n  const disableInteractiveMode = React.useCallback(() => {\n    if (columnId.current) {\n      onChangeRef.current?.(columnId.current, false);\n    }\n    columnId.current = undefined;\n    targetDocument?.defaultView?.removeEventListener('keydown', keyboardHandler);\n  }, [keyboardHandler, targetDocument?.defaultView]);\n\n  const toggleInteractiveMode = (colId: TableColumnId, onChange?: EnableKeyboardModeOnChangeCallback) => {\n    onChangeRef.current = onChange;\n    if (!columnId.current) {\n      enableInteractiveMode(colId);\n    } else if (colId && columnId.current !== colId) {\n      columnId.current = colId;\n      onChange?.(columnId.current, true);\n    } else {\n      disableInteractiveMode();\n    }\n  };\n\n  return {\n    toggleInteractiveMode,\n  };\n}\n"],"mappings":"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"}