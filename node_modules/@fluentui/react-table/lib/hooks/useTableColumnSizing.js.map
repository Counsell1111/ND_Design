{"version":3,"names":["React","TableResizeHandle","useMeasureElement","useTableColumnResizeMouseHandler","useTableColumnResizeState","useKeyboardResizing","defaultColumnSizingState","getColumnWidths","getOnMouseDown","setColumnWidth","getTableHeaderCellProps","style","columnId","getTableCellProps","enableKeyboardMode","useTableColumnSizing_unstable","params","tableState","useTableColumnSizingState","getColumnStyles","column","width","minWidth","maxWidth","columns","measureElementRef","columnResizeState","containerWidthOffset","mouseHandler","keyboardResizing","useCallback","onChange","e","preventDefault","nativeEvent","stopPropagation","toggleInteractiveMode","tableRef","columnSizing_unstable","w","undefined","getColumns","col","getColumnById","aside","createElement","onMouseDown","onTouchStart"],"sources":["../../src/hooks/useTableColumnSizing.tsx"],"sourcesContent":["import * as React from 'react';\nimport { TableResizeHandle } from '../TableResizeHandle';\nimport {\n  ColumnWidthState,\n  EnableKeyboardModeOnChangeCallback,\n  TableColumnId,\n  TableColumnSizingState,\n  TableFeaturesState,\n  UseTableColumnSizingParams,\n} from './types';\nimport { useMeasureElement } from './useMeasureElement';\nimport { useTableColumnResizeMouseHandler } from './useTableColumnResizeMouseHandler';\nimport { useTableColumnResizeState } from './useTableColumnResizeState';\nimport { useKeyboardResizing } from './useKeyboardResizing';\n\nexport const defaultColumnSizingState: TableColumnSizingState = {\n  getColumnWidths: () => [],\n  getOnMouseDown: () => () => null,\n  setColumnWidth: () => null,\n  getTableHeaderCellProps: () => ({ style: {}, columnId: '' }),\n  getTableCellProps: () => ({ style: {}, columnId: '' }),\n  enableKeyboardMode: () => () => null,\n};\n\nexport function useTableColumnSizing_unstable<TItem>(params?: UseTableColumnSizingParams) {\n  // False positive, these plugin hooks are intended to be run on every render\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return (tableState: TableFeaturesState<TItem>) => useTableColumnSizingState(tableState, params);\n}\n\nfunction getColumnStyles(column: ColumnWidthState): React.CSSProperties {\n  const width = column.width;\n\n  return {\n    // native styles\n    width,\n    // non-native element styles (flex layout)\n    minWidth: width,\n    maxWidth: width,\n  };\n}\n\nfunction useTableColumnSizingState<TItem>(\n  tableState: TableFeaturesState<TItem>,\n  params?: UseTableColumnSizingParams,\n): TableFeaturesState<TItem> {\n  const { columns } = tableState;\n\n  // Gets the container width\n  const { width, measureElementRef } = useMeasureElement();\n  // Creates the state based on columns and available containerWidth\n  const columnResizeState = useTableColumnResizeState(columns, width + (params?.containerWidthOffset || 0), params);\n  // Creates the mouse handler and attaches the state to it\n  const mouseHandler = useTableColumnResizeMouseHandler(columnResizeState);\n  // Creates the keyboard handler for resizing columns\n  const keyboardResizing = useKeyboardResizing(columnResizeState);\n\n  const enableKeyboardMode = React.useCallback(\n    (columnId: TableColumnId, onChange?: EnableKeyboardModeOnChangeCallback) =>\n      (e: React.MouseEvent | React.TouchEvent) => {\n        e.preventDefault();\n        e.nativeEvent.stopPropagation();\n        keyboardResizing.toggleInteractiveMode(columnId, onChange);\n      },\n    [keyboardResizing],\n  );\n\n  return {\n    ...tableState,\n    tableRef: measureElementRef,\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    columnSizing_unstable: {\n      getOnMouseDown: mouseHandler.getOnMouseDown,\n      setColumnWidth: (columnId: TableColumnId, w: number) =>\n        columnResizeState.setColumnWidth(undefined, { columnId, width: w }),\n      getColumnWidths: columnResizeState.getColumns,\n      getTableHeaderCellProps: (columnId: TableColumnId) => {\n        const col = columnResizeState.getColumnById(columnId);\n\n        const aside = (\n          <TableResizeHandle\n            onMouseDown={mouseHandler.getOnMouseDown(columnId)}\n            onTouchStart={mouseHandler.getOnMouseDown(columnId)}\n          />\n        );\n        return col ? { style: getColumnStyles(col), aside } : {};\n      },\n      getTableCellProps: (columnId: TableColumnId) => {\n        const col = columnResizeState.getColumnById(columnId);\n        return col ? { style: getColumnStyles(col) } : {};\n      },\n      enableKeyboardMode,\n    },\n  };\n}\n"],"mappings":"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"}