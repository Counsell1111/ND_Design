{"version":3,"names":["React","useControllableState","useEventCallback","createSelectionManager","noop","undefined","defaultTableSelectionState","allRowsSelected","clearRows","deselectRow","isRowSelected","selectRow","selectedRows","Set","someRowsSelected","toggleAllRows","toggleRow","selectionMode","useTableSelection","options","tableState","useTableSelectionState","items","getRowId","defaultSelectedItems","selectedItems","onSelectionChange","selected","setSelected","initialState","defaultState","useMemo","createSetFromIterable","state","selectionManager","e","newSelectedItems","_getRowId","toggleAllItems","map","item","i","rowId","toggleItem","deselectItem","selectItem","isSelected","selection","size","length","clearItems","iterable"],"sources":["../../src/hooks/useTableSelection.ts"],"sourcesContent":["import * as React from 'react';\nimport { useControllableState, useEventCallback } from '@fluentui/react-utilities';\nimport { createSelectionManager } from './selectionManager';\nimport type { TableRowId, TableSelectionState, TableFeaturesState, UseTableSelectionOptions } from './types';\n\nconst noop = () => undefined;\n\nexport const defaultTableSelectionState: TableSelectionState = {\n  allRowsSelected: false,\n  clearRows: noop,\n  deselectRow: noop,\n  isRowSelected: () => false,\n  selectRow: noop,\n  selectedRows: new Set(),\n  someRowsSelected: false,\n  toggleAllRows: noop,\n  toggleRow: noop,\n  selectionMode: 'multiselect',\n};\n\nexport function useTableSelection<TItem>(options: UseTableSelectionOptions) {\n  // False positive, these plugin hooks are intended to be run on every render\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return (tableState: TableFeaturesState<TItem>) => useTableSelectionState(tableState, options);\n}\n\nexport function useTableSelectionState<TItem>(\n  tableState: TableFeaturesState<TItem>,\n  options: UseTableSelectionOptions,\n): TableFeaturesState<TItem> {\n  const { items, getRowId } = tableState;\n  const { selectionMode, defaultSelectedItems, selectedItems, onSelectionChange } = options;\n\n  const [selected, setSelected] = useControllableState<Set<TableRowId>>({\n    initialState: new Set(),\n    defaultState: React.useMemo(\n      () => defaultSelectedItems && createSetFromIterable(defaultSelectedItems),\n      [defaultSelectedItems],\n    ),\n    state: React.useMemo(() => selectedItems && createSetFromIterable(selectedItems), [selectedItems]),\n  });\n\n  const selectionManager = React.useMemo(() => {\n    return createSelectionManager(selectionMode, (e, newSelectedItems) => {\n      setSelected(() => {\n        onSelectionChange?.(e as React.SyntheticEvent, { selectedItems: newSelectedItems });\n        return newSelectedItems;\n      });\n    });\n  }, [onSelectionChange, selectionMode, setSelected]);\n\n  const toggleAllRows: TableSelectionState['toggleAllRows'] = useEventCallback(e => {\n    selectionManager.toggleAllItems(\n      e,\n      items.map((item, i) => getRowId?.(item) ?? i),\n      selected,\n    );\n  });\n\n  const toggleRow: TableSelectionState['toggleRow'] = useEventCallback((e, rowId: TableRowId) =>\n    selectionManager.toggleItem(e, rowId, selected),\n  );\n\n  const deselectRow: TableSelectionState['deselectRow'] = useEventCallback((e, rowId: TableRowId) =>\n    selectionManager.deselectItem(e, rowId, selected),\n  );\n\n  const selectRow: TableSelectionState['selectRow'] = useEventCallback((e, rowId: TableRowId) =>\n    selectionManager.selectItem(e, rowId, selected),\n  );\n\n  const isRowSelected: TableSelectionState['isRowSelected'] = (rowId: TableRowId) =>\n    selectionManager.isSelected(rowId, selected);\n\n  return {\n    ...tableState,\n    selection: {\n      selectionMode,\n      someRowsSelected: selected.size > 0,\n      allRowsSelected: selectionMode === 'single' ? selected.size > 0 : selected.size === items.length,\n      selectedRows: selected,\n      toggleRow,\n      toggleAllRows,\n      clearRows: selectionManager.clearItems,\n      deselectRow,\n      selectRow,\n      isRowSelected,\n    },\n  };\n}\n\n/**\n * Creates a set from a given iterable, in case the iterable is a set itself, returns the given set instead.\n */\nfunction createSetFromIterable<V>(iterable: Iterable<V>): Set<V> {\n  return iterable instanceof Set ? iterable : new Set(iterable);\n}\n"],"mappings":"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"}