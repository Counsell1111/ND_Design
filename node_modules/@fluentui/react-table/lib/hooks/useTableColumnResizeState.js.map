{"version":3,"names":["useEventCallback","useIsomorphicLayoutEffect","React","columnDefinitionsToState","adjustColumnWidthsToFitContainer","getColumnById","setColumnProperty","getColumnWidth","createReducer","state","action","type","containerWidth","columnWidthState","newS","columns","columnSizingOptions","newState","columnId","width","column","newColumnWidthState","useTableColumnResizeState","params","onColumnResize","reducer","useMemo","dispatch","useReducer","undefined","setColumnWidth","event","data","col","Math","max","minWidth","colId","getColumns"],"sources":["../../src/hooks/useTableColumnResizeState.ts"],"sourcesContent":["import { useEventCallback, useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport {\n  TableColumnDefinition,\n  TableColumnId,\n  ColumnResizeState,\n  ColumnWidthState,\n  UseTableColumnSizingParams,\n  TableColumnSizingOptions,\n} from './types';\nimport {\n  columnDefinitionsToState,\n  adjustColumnWidthsToFitContainer,\n  getColumnById,\n  setColumnProperty,\n  getColumnWidth,\n} from '../utils/columnResizeUtils';\n\ntype ComponentState<T> = {\n  columns: TableColumnDefinition<T>[];\n  containerWidth: number;\n  columnWidthState: ColumnWidthState[];\n  columnSizingOptions: TableColumnSizingOptions | undefined;\n};\n\ntype ColumnResizeStateAction<T> =\n  | {\n      type: 'CONTAINER_WIDTH_UPDATED';\n      containerWidth: number;\n    }\n  | {\n      type: 'COLUMNS_UPDATED';\n      columns: TableColumnDefinition<T>[];\n    }\n  | {\n      type: 'COLUMN_SIZING_OPTIONS_UPDATED';\n      columnSizingOptions: TableColumnSizingOptions | undefined;\n    }\n  | {\n      type: 'SET_COLUMN_WIDTH';\n      columnId: TableColumnId;\n      width: number;\n    };\n\nconst createReducer =\n  <T>() =>\n  (state: ComponentState<T>, action: ColumnResizeStateAction<T>): ComponentState<T> => {\n    switch (action.type) {\n      case 'CONTAINER_WIDTH_UPDATED':\n        return {\n          ...state,\n          containerWidth: action.containerWidth,\n          columnWidthState: adjustColumnWidthsToFitContainer(state.columnWidthState, action.containerWidth),\n        };\n\n      case 'COLUMNS_UPDATED':\n        const newS = columnDefinitionsToState(action.columns, state.columnWidthState, state.columnSizingOptions);\n        return {\n          ...state,\n          columns: action.columns,\n          columnWidthState: adjustColumnWidthsToFitContainer(newS, state.containerWidth),\n        };\n\n      case 'COLUMN_SIZING_OPTIONS_UPDATED':\n        const newState = columnDefinitionsToState(state.columns, state.columnWidthState, action.columnSizingOptions);\n        return {\n          ...state,\n          columnSizingOptions: action.columnSizingOptions,\n          columnWidthState: adjustColumnWidthsToFitContainer(newState, state.containerWidth),\n        };\n\n      case 'SET_COLUMN_WIDTH':\n        const { columnId, width } = action;\n        const { containerWidth } = state;\n\n        const column = getColumnById(state.columnWidthState, columnId);\n        let newColumnWidthState = [...state.columnWidthState];\n\n        if (!column) {\n          return state;\n        }\n\n        // Adjust the column width and measure the new total width\n        newColumnWidthState = setColumnProperty(newColumnWidthState, columnId, 'width', width);\n        // Set this width as idealWidth, because its a deliberate change, not a recalculation because of container\n        newColumnWidthState = setColumnProperty(newColumnWidthState, columnId, 'idealWidth', width);\n        // Adjust the widths to the container size\n        newColumnWidthState = adjustColumnWidthsToFitContainer(newColumnWidthState, containerWidth);\n\n        return { ...state, columnWidthState: newColumnWidthState };\n    }\n  };\n\nexport function useTableColumnResizeState<T>(\n  columns: TableColumnDefinition<T>[],\n  containerWidth: number,\n  params: UseTableColumnSizingParams = {},\n): ColumnResizeState {\n  const { onColumnResize, columnSizingOptions } = params;\n\n  const reducer = React.useMemo(() => createReducer<T>(), []);\n\n  const [state, dispatch] = React.useReducer(reducer, {\n    columns,\n    containerWidth: 0,\n    columnWidthState: columnDefinitionsToState(columns, undefined, columnSizingOptions),\n    columnSizingOptions,\n  });\n\n  useIsomorphicLayoutEffect(() => {\n    dispatch({ type: 'CONTAINER_WIDTH_UPDATED', containerWidth });\n  }, [containerWidth]);\n\n  useIsomorphicLayoutEffect(() => {\n    dispatch({ type: 'COLUMNS_UPDATED', columns });\n  }, [columns]);\n\n  useIsomorphicLayoutEffect(() => {\n    dispatch({ type: 'COLUMN_SIZING_OPTIONS_UPDATED', columnSizingOptions });\n  }, [columnSizingOptions]);\n\n  const setColumnWidth = useEventCallback(\n    (event: KeyboardEvent | MouseEvent | TouchEvent | undefined, data: { columnId: TableColumnId; width: number }) => {\n      let { width } = data;\n      const { columnId } = data;\n      const col = getColumnById(state.columnWidthState, columnId);\n      if (!col) {\n        return;\n      }\n\n      width = Math.max(col.minWidth || 0, width);\n\n      if (onColumnResize) {\n        onColumnResize(event, { columnId, width });\n      }\n      dispatch({ type: 'SET_COLUMN_WIDTH', columnId, width });\n    },\n  );\n\n  return {\n    getColumnById: (colId: TableColumnId) => getColumnById(state.columnWidthState, colId),\n    getColumns: () => state.columnWidthState,\n    getColumnWidth: (colId: TableColumnId) => getColumnWidth(state.columnWidthState, colId),\n    setColumnWidth,\n  };\n}\n"],"mappings":"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"}