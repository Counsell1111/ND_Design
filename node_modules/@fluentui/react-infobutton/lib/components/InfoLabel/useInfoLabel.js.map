{"version":3,"names":["_infoButton","_arialabelledby","React","Label","resolveShorthand","useId","InfoButton","useInfoLabel_unstable","props","ref","root","rootShorthand","label","labelShorthand","infoButton","infoButtonShorthand","size","info","className","style","labelProps","required","defaultProps","id","_","components"],"sources":["../../../src/components/InfoLabel/useInfoLabel.ts"],"sourcesContent":["import * as React from 'react';\n\nimport { Label } from '@fluentui/react-label';\nimport { resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { InfoButton } from '../InfoButton/InfoButton';\nimport type { InfoLabelProps, InfoLabelState } from './InfoLabel.types';\n\n/**\n * Create the state required to render InfoLabel.\n *\n * The returned state can be modified with hooks such as useInfoLabelStyles_unstable,\n * before being passed to renderInfoLabel_unstable.\n *\n * @param props - props from this instance of InfoLabel\n * @param ref - reference to label element of InfoLabel\n */\nexport const useInfoLabel_unstable = (props: InfoLabelProps, ref: React.Ref<HTMLLabelElement>): InfoLabelState => {\n  const {\n    root: rootShorthand,\n    label: labelShorthand,\n    infoButton: infoButtonShorthand,\n    size,\n    info,\n    className,\n    style,\n    ...labelProps\n  } = props;\n\n  const root = resolveShorthand(rootShorthand, {\n    required: true,\n    defaultProps: {\n      className,\n      style,\n    },\n  });\n\n  const label = resolveShorthand(labelShorthand, {\n    required: true,\n    defaultProps: {\n      id: useId('infolabel-'),\n      ref,\n      size,\n      ...labelProps,\n    },\n  });\n\n  const infoButton = resolveShorthand(infoButtonShorthand, {\n    required: !!info,\n    defaultProps: {\n      id: useId('infobutton-'),\n      info,\n      size,\n    },\n  });\n\n  if (infoButton) {\n    infoButton['aria-labelledby'] ??= `${label.id} ${infoButton.id}`;\n  }\n\n  return {\n    size,\n    components: {\n      root: 'span',\n      label: Label,\n      infoButton: InfoButton,\n    },\n    root,\n    label,\n    infoButton,\n  };\n};\n"],"mappings":"IAwDIA,WAAA,EAAWC,eAAA;AAxDf,YAAYC,KAAA,MAAW;AAEvB,SAASC,KAAK,QAAQ;AACtB,SAASC,gBAAgB,EAAEC,KAAK,QAAQ;AACxC,SAASC,UAAU,QAAQ;AAG3B;;;;;;;;;AASA,OAAO,MAAMC,qBAAA,GAAwBA,CAACC,KAAA,EAAuBC,GAAA,KAAqD;EAChH,MAAM;IACJC,IAAA,EAAMC,aAAA;IACNC,KAAA,EAAOC,cAAA;IACPC,UAAA,EAAYC,mBAAA;IACZC,IAAA;IACAC,IAAA;IACAC,SAAA;IACAC,KAAA;IACA,GAAGC;EAAA,CACJ,GAAGZ,KAAA;EAEJ,MAAME,IAAA,GAAON,gBAAA,CAAiBO,aAAA,EAAe;IAC3CU,QAAA,EAAU,IAAI;IACdC,YAAA,EAAc;MACZJ,SAAA;MACAC;IACF;EACF;EAEA,MAAMP,KAAA,GAAQR,gBAAA,CAAiBS,cAAA,EAAgB;IAC7CQ,QAAA,EAAU,IAAI;IACdC,YAAA,EAAc;MACZC,EAAA,EAAIlB,KAAA,CAAM;MACVI,GAAA;MACAO,IAAA;MACA,GAAGI;IACL;EACF;EAEA,MAAMN,UAAA,GAAaV,gBAAA,CAAiBW,mBAAA,EAAqB;IACvDM,QAAA,EAAU,CAAC,CAACJ,IAAA;IACZK,YAAA,EAAc;MACZC,EAAA,EAAIlB,KAAA,CAAM;MACVY,IAAA;MACAD;IACF;EACF;EAEA,IAAIF,UAAA,EAAY;;IACd,CAAAU,CAAA,IAAAxB,WAAA,GAAAc,UAAA,EAAWb,eAAA,qBAAkB,cAAAuB,CAAA,cAAAA,CAAA,GAA7BxB,WAAU,CAACC,eAAA,CAAkB,GAAM,GAAEW,KAAA,CAAMW,EAAG,IAAGT,UAAA,CAAWS,EAAG,EAAC;EAClE;EAEA,OAAO;IACLP,IAAA;IACAS,UAAA,EAAY;MACVf,IAAA,EAAM;MACNE,KAAA,EAAOT,KAAA;MACPW,UAAA,EAAYR;IACd;IACAI,IAAA;IACAE,KAAA;IACAE;EACF;AACF"}