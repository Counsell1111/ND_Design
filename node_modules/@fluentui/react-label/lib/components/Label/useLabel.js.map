{"version":3,"names":["React","getNativeElementProps","resolveShorthand","useLabel_unstable","props","ref","disabled","required","weight","size","undefined","defaultProps","components","root"],"sources":["../../../src/components/Label/useLabel.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { LabelProps, LabelState } from './Label.types';\nimport { resolveShorthand } from '@fluentui/react-utilities';\n\n/**\n * Create the state required to render Label.\n *\n * The returned state can be modified with hooks such as useLabelStyles_unstable,\n * before being passed to renderLabel_unstable.\n *\n * @param props - props from this instance of Label\n * @param ref - reference to root HTMLElement of Label\n */\nexport const useLabel_unstable = (props: LabelProps, ref: React.Ref<HTMLElement>): LabelState => {\n  const { disabled = false, required = false, weight = 'regular', size = 'medium' } = props;\n  return {\n    disabled,\n    required: resolveShorthand(required === true ? '*' : required || undefined, {\n      defaultProps: { 'aria-hidden': 'true' },\n    }),\n    weight,\n    size,\n    components: { root: 'label', required: 'span' },\n    root: getNativeElementProps('label', { ref, ...props }),\n  };\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,qBAAqB,QAAQ;AAEtC,SAASC,gBAAgB,QAAQ;AAEjC;;;;;;;;;AASA,OAAO,MAAMC,iBAAA,GAAoBA,CAACC,KAAA,EAAmBC,GAAA,KAA4C;EAC/F,MAAM;IAAEC,QAAA,GAAW,KAAK;IAAEC,QAAA,GAAW,KAAK;IAAEC,MAAA,GAAS;IAAWC,IAAA,GAAO;EAAQ,CAAE,GAAGL,KAAA;EACpF,OAAO;IACLE,QAAA;IACAC,QAAA,EAAUL,gBAAA,CAAiBK,QAAA,KAAa,IAAI,GAAG,MAAMA,QAAA,IAAYG,SAAS,EAAE;MAC1EC,YAAA,EAAc;QAAE,eAAe;MAAO;IACxC;IACAH,MAAA;IACAC,IAAA;IACAG,UAAA,EAAY;MAAEC,IAAA,EAAM;MAASN,QAAA,EAAU;IAAO;IAC9CM,IAAA,EAAMZ,qBAAA,CAAsB,SAAS;MAAEI,GAAA;MAAK,GAAGD;IAAM;EACvD;AACF"}