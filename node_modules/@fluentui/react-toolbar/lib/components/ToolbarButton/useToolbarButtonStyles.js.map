{"version":3,"names":["__styles","mergeClasses","useButtonStyles_unstable","useBaseStyles","vertical","Beiy3e4","verticalIcon","Be2twd7","d","useToolbarButtonStyles_unstable","state","buttonStyles","root","className","icon"],"sources":["../../../src/components/ToolbarButton/useToolbarButtonStyles.ts"],"sourcesContent":["import { makeStyles, mergeClasses } from '@griffel/react';\nimport { useButtonStyles_unstable } from '@fluentui/react-button';\nimport { ToolbarButtonState } from './ToolbarButton.types';\n\nconst useBaseStyles = makeStyles({\n  vertical: {\n    flexDirection: 'column',\n  },\n  verticalIcon: {\n    fontSize: '24px',\n  },\n});\n\n/**\n * Apply styling to the ToolbarButton slots based on the state\n */\nexport const useToolbarButtonStyles_unstable = (state: ToolbarButtonState) => {\n  useButtonStyles_unstable(state);\n  const buttonStyles = useBaseStyles();\n\n  state.root.className = mergeClasses(state.root.className, state.vertical && buttonStyles.vertical);\n  if (state.icon) {\n    state.icon.className = mergeClasses(state.icon.className, state.vertical && buttonStyles.verticalIcon);\n  }\n};\n"],"mappings":"AAAA,SAAAA,QAAA,EAAqBC,YAAY,QAAQ;AACzC,SAASC,wBAAwB,QAAQ;AAGzC,MAAMC,aAAA,gBAAgBH,QAAA;EAAAI,QAAA;IAAAC,OAAA;EAAA;EAAAC,YAAA;IAAAC,OAAA;EAAA;AAAA;EAAAC,CAAA;AAAA,EAOtB;AAEA;;;AAGA,OAAO,MAAMC,+BAAA,GAAmCC,KAAA,IAA8B;EAC5ER,wBAAA,CAAyBQ,KAAA;EACzB,MAAMC,YAAA,GAAeR,aAAA;EAErBO,KAAA,CAAME,IAAI,CAACC,SAAS,GAAGZ,YAAA,CAAaS,KAAA,CAAME,IAAI,CAACC,SAAS,EAAEH,KAAA,CAAMN,QAAQ,IAAIO,YAAA,CAAaP,QAAQ;EACjG,IAAIM,KAAA,CAAMI,IAAI,EAAE;IACdJ,KAAA,CAAMI,IAAI,CAACD,SAAS,GAAGZ,YAAA,CAAaS,KAAA,CAAMI,IAAI,CAACD,SAAS,EAAEH,KAAA,CAAMN,QAAQ,IAAIO,YAAA,CAAaL,YAAY;EACvG;AACF"}