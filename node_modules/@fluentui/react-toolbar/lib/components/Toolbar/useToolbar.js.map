{"version":3,"names":["React","useEventCallback","useControllableState","getNativeElementProps","useArrowNavigationGroup","useToolbar_unstable","props","ref","size","vertical","arrowNavigationProps","circular","axis","initialState","components","root","role","checkedValues","onCheckedValueChange","useToolbarSelectableState","defaultCheckedValues","handleToggleButton","e","name","value","checked","checkedItems","newCheckedItems","splice","indexOf","push","handleRadio","state","setCheckedValues","defaultState","onCheckedValueChangeOriginal","s"],"sources":["../../../src/components/Toolbar/useToolbar.ts"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback, useControllableState } from '@fluentui/react-utilities';\nimport { getNativeElementProps } from '@fluentui/react-utilities';\nimport type { ToggableHandler, ToolbarProps, ToolbarState, UninitializedToolbarState } from './Toolbar.types';\nimport { useArrowNavigationGroup } from '@fluentui/react-tabster';\n\n/**\n * Create the state required to render Toolbar.\n *\n * The returned state can be modified with hooks such as useToolbarStyles_unstable,\n * before being passed to renderToolbar_unstable.\n *\n * @param props - props from this instance of Toolbar\n * @param ref - reference to root HTMLElement of Toolbar\n */\nexport const useToolbar_unstable = (props: ToolbarProps, ref: React.Ref<HTMLElement>): ToolbarState => {\n  const { size = 'medium', vertical = false } = props;\n\n  const arrowNavigationProps = useArrowNavigationGroup({\n    circular: true,\n    axis: 'both',\n  });\n\n  const initialState: UninitializedToolbarState = {\n    size,\n    vertical,\n    // TODO add appropriate props/defaults\n    components: {\n      // TODO add each slot's element type or component\n      root: 'div',\n    },\n    // TODO add appropriate slots, for example:\n    // mySlot: resolveShorthand(props.mySlot),\n    root: getNativeElementProps('div', {\n      role: 'toolbar',\n      ref,\n      ...(vertical && { 'aria-orientation': 'vertical' }),\n      ...arrowNavigationProps,\n      ...props,\n    }),\n  };\n\n  const [checkedValues, onCheckedValueChange] = useToolbarSelectableState({\n    checkedValues: props.checkedValues,\n    defaultCheckedValues: props.defaultCheckedValues,\n    onCheckedValueChange: props.onCheckedValueChange,\n  });\n\n  const handleToggleButton: ToggableHandler = useEventCallback(\n    (e: React.MouseEvent | React.KeyboardEvent, name: string, value: string, checked?: boolean) => {\n      if (name && value) {\n        const checkedItems = checkedValues?.[name] || [];\n        const newCheckedItems = [...checkedItems];\n        if (checked) {\n          newCheckedItems.splice(newCheckedItems.indexOf(value), 1);\n        } else {\n          newCheckedItems.push(value);\n        }\n        onCheckedValueChange?.(e, { name, checkedItems: newCheckedItems });\n      }\n    },\n  );\n\n  const handleRadio: ToggableHandler = useEventCallback(\n    (e: React.MouseEvent | React.KeyboardEvent, name: string, value: string, checked?: boolean) => {\n      if (name && value) {\n        onCheckedValueChange?.(e, {\n          name,\n          checkedItems: [value],\n        });\n      }\n    },\n  );\n\n  return {\n    ...initialState,\n    handleToggleButton,\n    handleRadio,\n    checkedValues: checkedValues ?? {},\n  };\n};\n\n/**\n * Adds appropriate state values and handlers for selectable items\n * i.e checkboxes and radios\n */\nconst useToolbarSelectableState = (\n  state: Pick<ToolbarProps, 'checkedValues' | 'defaultCheckedValues' | 'onCheckedValueChange'>,\n) => {\n  const [checkedValues, setCheckedValues] = useControllableState({\n    state: state.checkedValues,\n    defaultState: state.defaultCheckedValues,\n    initialState: {},\n  });\n  const { onCheckedValueChange: onCheckedValueChangeOriginal } = state;\n  const onCheckedValueChange: ToolbarState['onCheckedValueChange'] = useEventCallback((e, { name, checkedItems }) => {\n    if (onCheckedValueChangeOriginal) {\n      onCheckedValueChangeOriginal(e, { name, checkedItems });\n    }\n\n    setCheckedValues(s => {\n      return s ? { ...s, [name]: checkedItems } : { [name]: checkedItems };\n    });\n  });\n\n  return [checkedValues, onCheckedValueChange] as const;\n};\n"],"mappings":"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"}