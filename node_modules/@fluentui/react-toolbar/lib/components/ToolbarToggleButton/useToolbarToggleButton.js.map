{"version":3,"names":["React","useToggleButton_unstable","useToolbarContext_unstable","useToolbarToggleButton_unstable","props","ref","handleToggleButton","ctx","checked","_ctx_checkedValues_props_name","checkedValues","name","includes","value","size","onClick","onClickOriginal","toggleButtonState","state","handleOnClick","e","disabled","preventDefault","stopPropagation","root"],"sources":["../../../src/components/ToolbarToggleButton/useToolbarToggleButton.ts"],"sourcesContent":["import * as React from 'react';\nimport { useToggleButton_unstable } from '@fluentui/react-button';\nimport { useToolbarContext_unstable } from '../Toolbar/ToolbarContext';\nimport { ToolbarToggleButtonProps, ToolbarToggleButtonState } from './ToolbarToggleButton.types';\n\n/**\n * Given user props, defines default props for the ToggleButton, calls useButtonState and useChecked, and returns\n * processed state.\n * @param props - User provided props to the ToggleButton component.\n * @param ref - User provided ref to be passed to the ToggleButton component.\n */\nexport const useToolbarToggleButton_unstable = (\n  props: ToolbarToggleButtonProps,\n  ref: React.Ref<HTMLButtonElement | HTMLAnchorElement>,\n): ToolbarToggleButtonState => {\n  const handleToggleButton = useToolbarContext_unstable(ctx => ctx.handleToggleButton);\n  const checked = useToolbarContext_unstable(ctx => !!ctx.checkedValues[props.name]?.includes(props.value));\n  const size = useToolbarContext_unstable(ctx => ctx.size);\n\n  const { onClick: onClickOriginal } = props;\n  const toggleButtonState = useToggleButton_unstable({ size, checked, ...props }, ref);\n  const state: ToolbarToggleButtonState = {\n    ...toggleButtonState,\n    name: props.name,\n    value: props.value,\n  };\n\n  const handleOnClick = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent> & React.MouseEvent<HTMLAnchorElement, MouseEvent>,\n  ) => {\n    if (state.disabled) {\n      e.preventDefault();\n      e.stopPropagation();\n      return;\n    }\n\n    handleToggleButton?.(e, state.name, state.value, state.checked);\n    onClickOriginal?.(e);\n  };\n\n  state.root.onClick = handleOnClick;\n  return state;\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,wBAAwB,QAAQ;AACzC,SAASC,0BAA0B,QAAQ;AAG3C;;;;;;AAMA,OAAO,MAAMC,+BAAA,GAAkCA,CAC7CC,KAAA,EACAC,GAAA,KAC6B;EAC7B,MAAMC,kBAAA,GAAqBJ,0BAAA,CAA2BK,GAAA,IAAOA,GAAA,CAAID,kBAAkB;EACnF,MAAME,OAAA,GAAUN,0BAAA,CAA2BK,GAAA;QAASE,6BAAA;IAAF,QAAC,EAAC,CAAAA,6BAAA,GAAAF,GAAA,CAAIG,aAAa,CAACN,KAAA,CAAMO,IAAI,CAAC,cAA7BF,6BAAA,uBAAAA,6BAAA,CAA+BG,QAAA,CAASR,KAAA,CAAMS,KAAK;;EACvG,MAAMC,IAAA,GAAOZ,0BAAA,CAA2BK,GAAA,IAAOA,GAAA,CAAIO,IAAI;EAEvD,MAAM;IAAEC,OAAA,EAASC;EAAe,CAAE,GAAGZ,KAAA;EACrC,MAAMa,iBAAA,GAAoBhB,wBAAA,CAAyB;IAAEa,IAAA;IAAMN,OAAA;IAAS,GAAGJ;EAAM,GAAGC,GAAA;EAChF,MAAMa,KAAA,GAAkC;IACtC,GAAGD,iBAAiB;IACpBN,IAAA,EAAMP,KAAA,CAAMO,IAAI;IAChBE,KAAA,EAAOT,KAAA,CAAMS;EACf;EAEA,MAAMM,aAAA,GACJC,CAAA,IACG;IACH,IAAIF,KAAA,CAAMG,QAAQ,EAAE;MAClBD,CAAA,CAAEE,cAAc;MAChBF,CAAA,CAAEG,eAAe;MACjB;IACF;IAEAjB,kBAAA,aAAAA,kBAAA,uBAAAA,kBAAA,CAAqBc,CAAA,EAAGF,KAAA,CAAMP,IAAI,EAAEO,KAAA,CAAML,KAAK,EAAEK,KAAA,CAAMV,OAAO;IAC9DQ,eAAA,aAAAA,eAAA,uBAAAA,eAAA,CAAkBI,CAAA;EACpB;EAEAF,KAAA,CAAMM,IAAI,CAACT,OAAO,GAAGI,aAAA;EACrB,OAAOD,KAAA;AACT"}