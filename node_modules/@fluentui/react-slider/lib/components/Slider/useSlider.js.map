{"version":3,"names":["React","useFieldControlProps_unstable","getPartitionedNativeProps","resolveShorthand","useId","useMergedRefs","useSliderState_unstable","useFocusWithin","useSlider_unstable","props","ref","supportsLabelFor","nativeProps","primarySlotTagName","excludedPropNames","disabled","vertical","size","root","input","rail","thumb","state","components","required","defaultProps","id","primary","type","orient","undefined"],"sources":["../../../src/components/Slider/useSlider.ts"],"sourcesContent":["import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, resolveShorthand, useId, useMergedRefs } from '@fluentui/react-utilities';\nimport { useSliderState_unstable } from './useSliderState';\nimport { SliderProps, SliderState } from './Slider.types';\nimport { useFocusWithin } from '@fluentui/react-tabster';\n\nexport const useSlider_unstable = (props: SliderProps, ref: React.Ref<HTMLInputElement>): SliderState => {\n  // Merge props from surrounding <Field>, if any\n  props = useFieldControlProps_unstable(props, { supportsLabelFor: true });\n\n  const nativeProps = getPartitionedNativeProps({\n    props,\n    primarySlotTagName: 'input',\n    excludedPropNames: ['onChange', 'size'],\n  });\n\n  const {\n    disabled,\n    vertical,\n    size = 'medium',\n    // Slots\n    root,\n    input,\n    rail,\n    thumb,\n  } = props;\n\n  const state: SliderState = {\n    disabled,\n    size,\n    vertical,\n    components: {\n      input: 'input',\n      rail: 'div',\n      root: 'div',\n      thumb: 'div',\n    },\n    root: resolveShorthand(root, {\n      required: true,\n      defaultProps: nativeProps.root,\n    }),\n    input: resolveShorthand(input, {\n      required: true,\n      defaultProps: {\n        id: useId('slider-', props.id),\n        ref,\n        ...nativeProps.primary,\n        type: 'range',\n        orient: vertical ? 'vertical' : undefined,\n      },\n    }),\n    rail: resolveShorthand(rail, { required: true }),\n    thumb: resolveShorthand(thumb, { required: true }),\n  };\n\n  state.root.ref = useMergedRefs(state.root.ref, useFocusWithin<HTMLDivElement>());\n\n  useSliderState_unstable(state, props);\n\n  return state;\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,6BAA6B,QAAQ;AAC9C,SAASC,yBAAyB,EAAEC,gBAAgB,EAAEC,KAAK,EAAEC,aAAa,QAAQ;AAClF,SAASC,uBAAuB,QAAQ;AAExC,SAASC,cAAc,QAAQ;AAE/B,OAAO,MAAMC,kBAAA,GAAqBA,CAACC,KAAA,EAAoBC,GAAA,KAAkD;EACvG;EACAD,KAAA,GAAQR,6BAAA,CAA8BQ,KAAA,EAAO;IAAEE,gBAAA,EAAkB;EAAK;EAEtE,MAAMC,WAAA,GAAcV,yBAAA,CAA0B;IAC5CO,KAAA;IACAI,kBAAA,EAAoB;IACpBC,iBAAA,EAAmB,CAAC,YAAY;EAClC;EAEA,MAAM;IACJC,QAAA;IACAC,QAAA;IACAC,IAAA,GAAO;IACP;IACAC,IAAA;IACAC,KAAA;IACAC,IAAA;IACAC;EAAK,CACN,GAAGZ,KAAA;EAEJ,MAAMa,KAAA,GAAqB;IACzBP,QAAA;IACAE,IAAA;IACAD,QAAA;IACAO,UAAA,EAAY;MACVJ,KAAA,EAAO;MACPC,IAAA,EAAM;MACNF,IAAA,EAAM;MACNG,KAAA,EAAO;IACT;IACAH,IAAA,EAAMf,gBAAA,CAAiBe,IAAA,EAAM;MAC3BM,QAAA,EAAU,IAAI;MACdC,YAAA,EAAcb,WAAA,CAAYM;IAC5B;IACAC,KAAA,EAAOhB,gBAAA,CAAiBgB,KAAA,EAAO;MAC7BK,QAAA,EAAU,IAAI;MACdC,YAAA,EAAc;QACZC,EAAA,EAAItB,KAAA,CAAM,WAAWK,KAAA,CAAMiB,EAAE;QAC7BhB,GAAA;QACA,GAAGE,WAAA,CAAYe,OAAO;QACtBC,IAAA,EAAM;QACNC,MAAA,EAAQb,QAAA,GAAW,aAAac;MAClC;IACF;IACAV,IAAA,EAAMjB,gBAAA,CAAiBiB,IAAA,EAAM;MAAEI,QAAA,EAAU;IAAK;IAC9CH,KAAA,EAAOlB,gBAAA,CAAiBkB,KAAA,EAAO;MAAEG,QAAA,EAAU;IAAK;EAClD;EAEAF,KAAA,CAAMJ,IAAI,CAACR,GAAG,GAAGL,aAAA,CAAciB,KAAA,CAAMJ,IAAI,CAACR,GAAG,EAAEH,cAAA;EAE/CD,uBAAA,CAAwBgB,KAAA,EAAOb,KAAA;EAE/B,OAAOa,KAAA;AACT"}