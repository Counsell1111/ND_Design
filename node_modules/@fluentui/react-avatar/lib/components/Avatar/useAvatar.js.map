{"version":3,"names":["React","getNativeElementProps","mergeCallbacks","resolveShorthand","useId","getInitials","PersonRegular","PresenceBadge","useFluent_unstable","useFluent","useAvatarContext","DEFAULT_STRINGS","active","inactive","useAvatar_unstable","props","ref","dir","size","contextSize","name","shape","activeAppearance","idForColor","color","_ref","avatarColors","getHashCode","length","baseId","root","role","id","imageHidden","setImageHidden","useState","undefined","image","defaultProps","alt","hidden","onError","onLoad","initials","required","children","firstInitialOnly","icon","createElement","badge","getBadgeSize","activeAriaLabelElement","activeText","activeId","components","str","hashCode","len","ch","charCodeAt","shift"],"sources":["../../../src/components/Avatar/useAvatar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, mergeCallbacks, resolveShorthand, useId } from '@fluentui/react-utilities';\nimport { getInitials } from '../../utils/index';\nimport type { AvatarNamedColor, AvatarProps, AvatarState } from './Avatar.types';\nimport { PersonRegular } from '@fluentui/react-icons';\nimport { PresenceBadge } from '@fluentui/react-badge';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useAvatarContext } from '../../contexts/AvatarContext';\n\nexport const DEFAULT_STRINGS = {\n  active: 'active',\n  inactive: 'inactive',\n};\n\nexport const useAvatar_unstable = (props: AvatarProps, ref: React.Ref<HTMLElement>): AvatarState => {\n  const { dir } = useFluent();\n  const { size: contextSize } = useAvatarContext();\n  const {\n    name,\n    size = contextSize ?? (32 as const),\n    shape = 'circular',\n    active = 'unset',\n    activeAppearance = 'ring',\n    idForColor,\n  } = props;\n  let { color = 'neutral' } = props;\n\n  // Resolve 'colorful' to a specific color name\n  if (color === 'colorful') {\n    color = avatarColors[getHashCode(idForColor ?? name ?? '') % avatarColors.length];\n  }\n\n  const baseId = useId('avatar-');\n\n  const root: AvatarState['root'] = getNativeElementProps(\n    'span',\n    {\n      role: 'img',\n      id: baseId,\n      // aria-label and/or aria-labelledby are resolved below\n      ...props,\n      ref,\n    },\n    /* excludedPropNames: */ ['name'],\n  );\n\n  const [imageHidden, setImageHidden] = React.useState<true | undefined>(undefined);\n  const image: AvatarState['image'] = resolveShorthand(props.image, {\n    defaultProps: {\n      alt: '',\n      role: 'presentation',\n      'aria-hidden': true,\n      hidden: imageHidden,\n    },\n  });\n\n  // Hide the image if it fails to load and restore it on a successful load\n  if (image) {\n    image.onError = mergeCallbacks(image.onError, () => setImageHidden(true));\n    image.onLoad = mergeCallbacks(image.onLoad, () => setImageHidden(undefined));\n  }\n\n  // Resolve the initials slot, defaulted to getInitials.\n  let initials: AvatarState['initials'] = resolveShorthand(props.initials, {\n    required: true,\n    defaultProps: {\n      children: getInitials(name, dir === 'rtl', { firstInitialOnly: size <= 16 }),\n      id: baseId + '__initials',\n    },\n  });\n\n  // Don't render the initials slot if it's empty\n  if (!initials?.children) {\n    initials = undefined;\n  }\n\n  // Render the icon slot *only if* there aren't any initials or image to display\n  let icon: AvatarState['icon'] = undefined;\n  if (!initials && (!image || imageHidden)) {\n    icon = resolveShorthand(props.icon, {\n      required: true,\n      defaultProps: {\n        children: <PersonRegular />,\n        'aria-hidden': true,\n      },\n    });\n  }\n\n  const badge: AvatarState['badge'] = resolveShorthand(props.badge, {\n    defaultProps: {\n      size: getBadgeSize(size),\n      id: baseId + '__badge',\n    },\n  });\n\n  let activeAriaLabelElement: AvatarState['activeAriaLabelElement'];\n\n  // Resolve aria-label and/or aria-labelledby if not provided by the user\n  if (!root['aria-label'] && !root['aria-labelledby']) {\n    if (name) {\n      root['aria-label'] = name;\n\n      // Include the badge in labelledby if it exists\n      if (badge) {\n        root['aria-labelledby'] = root.id + ' ' + badge.id;\n      }\n    } else if (initials) {\n      // root's aria-label should be the name, but fall back to being labelledby the initials if name is missing\n      root['aria-labelledby'] = initials.id + (badge ? ' ' + badge.id : '');\n    }\n\n    // Add the active state to the aria label\n    if (active === 'active' || active === 'inactive') {\n      const activeText = DEFAULT_STRINGS[active];\n      if (root['aria-labelledby']) {\n        // If using aria-labelledby, render a hidden span and append it to the labelledby\n        const activeId = baseId + '__active';\n        root['aria-labelledby'] += ' ' + activeId;\n        activeAriaLabelElement = (\n          <span hidden id={activeId}>\n            {activeText}\n          </span>\n        );\n      } else if (root['aria-label']) {\n        // Otherwise, just append it to the aria-label\n        root['aria-label'] += ' ' + activeText;\n      }\n    }\n  }\n\n  return {\n    size,\n    shape,\n    active,\n    activeAppearance,\n    activeAriaLabelElement,\n    color,\n\n    components: {\n      root: 'span',\n      initials: 'span',\n      icon: 'span',\n      image: 'img',\n      badge: PresenceBadge,\n    },\n\n    root,\n    initials,\n    icon,\n    image,\n    badge,\n  };\n};\n\nconst getBadgeSize = (size: AvatarState['size']) => {\n  if (size >= 96) {\n    return 'extra-large';\n  } else if (size >= 64) {\n    return 'large';\n  } else if (size >= 56) {\n    return 'medium';\n  } else if (size >= 40) {\n    return 'small';\n  } else if (size >= 28) {\n    return 'extra-small';\n  } else {\n    return 'tiny';\n  }\n};\n\nconst avatarColors: AvatarNamedColor[] = [\n  'dark-red',\n  'cranberry',\n  'red',\n  'pumpkin',\n  'peach',\n  'marigold',\n  'gold',\n  'brass',\n  'brown',\n  'forest',\n  'seafoam',\n  'dark-green',\n  'light-teal',\n  'teal',\n  'steel',\n  'blue',\n  'royal-blue',\n  'cornflower',\n  'navy',\n  'lavender',\n  'purple',\n  'grape',\n  'lilac',\n  'pink',\n  'magenta',\n  'plum',\n  'beige',\n  'mink',\n  'platinum',\n  'anchor',\n];\n\nconst getHashCode = (str: string): number => {\n  let hashCode = 0;\n  for (let len: number = str.length - 1; len >= 0; len--) {\n    const ch = str.charCodeAt(len);\n    const shift = len % 8;\n    hashCode ^= (ch << shift) + (ch >> (8 - shift)); // eslint-disable-line no-bitwise\n  }\n\n  return hashCode;\n};\n"],"mappings":"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"}