{"version":3,"names":["React","useAvatarGroupContext_unstable","defaultAvatarGroupSize","resolveShorthand","useControllableState","MoreHorizontalRegular","Popover","PopoverSurface","Tooltip","useAvatarGroupPopover_unstable","props","_useAvatarGroupContext_unstable","size","ctx","layout","indicator","count","Children","children","restOfProps","popoverOpen","setPopoverOpen","state","open","defaultState","defaultOpen","initialState","handleOnPopoverChange","e","data","_restOfProps_onOpenChange","onOpenChange","call","triggerButtonChildren","createElement","components","root","triggerButton","content","popoverSurface","tooltip","Fragment","trapFocus","required","defaultProps","type","role","tabIndex","relationship"],"sources":["../../../src/components/AvatarGroupPopover/useAvatarGroupPopover.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useAvatarGroupContext_unstable } from '../../contexts/AvatarGroupContext';\nimport { defaultAvatarGroupSize } from '../AvatarGroup/useAvatarGroup';\nimport { resolveShorthand, useControllableState } from '@fluentui/react-utilities';\nimport { MoreHorizontalRegular } from '@fluentui/react-icons';\nimport { OnOpenChangeData, OpenPopoverEvents, Popover, PopoverSurface } from '@fluentui/react-popover';\nimport type { AvatarGroupPopoverProps, AvatarGroupPopoverState } from './AvatarGroupPopover.types';\nimport { Tooltip } from '@fluentui/react-tooltip';\n\n/**\n * Create the state required to render AvatarGroupPopover.\n *\n * The returned state can be modified with hooks such as useAvatarGroupPopoverStyles_unstable,\n * before being passed to renderAvatarGroupPopover_unstable.\n *\n * @param props - props from this instance of AvatarGroupPopover\n */\nexport const useAvatarGroupPopover_unstable = (props: AvatarGroupPopoverProps): AvatarGroupPopoverState => {\n  const size = useAvatarGroupContext_unstable(ctx => ctx.size) ?? defaultAvatarGroupSize;\n  const layout = useAvatarGroupContext_unstable(ctx => ctx.layout);\n  const {\n    indicator = size < 24 ? 'icon' : 'count',\n    count = React.Children.count(props.children),\n    children,\n    ...restOfProps\n  } = props;\n\n  const [popoverOpen, setPopoverOpen] = useControllableState({\n    state: props.open,\n    defaultState: props.defaultOpen,\n    initialState: false,\n  });\n\n  const handleOnPopoverChange = (e: OpenPopoverEvents, data: OnOpenChangeData) => {\n    restOfProps.onOpenChange?.(e, data);\n    setPopoverOpen(data.open);\n  };\n\n  let triggerButtonChildren;\n  if (layout === 'pie') {\n    triggerButtonChildren = null;\n  } else if (indicator === 'icon') {\n    triggerButtonChildren = <MoreHorizontalRegular />;\n  } else {\n    triggerButtonChildren = count > 99 ? '99+' : `+${count}`;\n  }\n\n  return {\n    count,\n    indicator,\n    layout,\n    popoverOpen,\n    size,\n\n    components: {\n      root: Popover,\n      triggerButton: 'button',\n      content: 'ul',\n      popoverSurface: PopoverSurface,\n      tooltip: Tooltip,\n    },\n    root: {\n      // Popover expects a child for its children. The children are added in the renderAvatarGroupPopover.\n      children: <></>,\n      size: 'small',\n      trapFocus: true,\n      ...restOfProps,\n      open: popoverOpen,\n      onOpenChange: handleOnPopoverChange,\n    },\n    triggerButton: resolveShorthand(props.triggerButton, {\n      required: true,\n      defaultProps: {\n        children: triggerButtonChildren,\n        type: 'button',\n      },\n    }),\n    content: resolveShorthand(props.content, {\n      required: true,\n      defaultProps: {\n        children,\n        role: 'list',\n      },\n    }),\n    popoverSurface: resolveShorthand(props.popoverSurface, {\n      required: true,\n      defaultProps: {\n        'aria-label': 'Overflow',\n        tabIndex: 0,\n      },\n    }),\n    tooltip: resolveShorthand(props.tooltip, {\n      required: true,\n      defaultProps: {\n        content: 'View more people.',\n        relationship: 'label',\n      },\n    }),\n  };\n};\n"],"mappings":"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"}