{"version":3,"names":["React","getNativeElementProps","resolveShorthand","useMergedRefs","useCardContext_unstable","cardPreviewClassNames","useCardPreview_unstable","props","ref","logo","selectableA11yProps","referenceLabel","referenceId","setReferenceLabel","setReferenceId","previewRef","useRef","useEffect","current","parentNode","img","querySelector","root","ariaLabel","getAttribute","ariaDescribedby","alt","components"],"sources":["../../../src/components/CardPreview/useCardPreview.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, resolveShorthand, useMergedRefs } from '@fluentui/react-utilities';\nimport type { CardPreviewProps, CardPreviewState } from './CardPreview.types';\nimport { useCardContext_unstable } from '../Card/CardContext';\nimport { cardPreviewClassNames } from './useCardPreviewStyles';\n\n/**\n * Create the state required to render CardPreview.\n *\n * The returned state can be modified with hooks such as useCardPreviewStyles_unstable,\n * before being passed to renderCardPreview_unstable.\n *\n * @param props - props from this instance of CardPreview\n * @param ref - reference to root HTMLElement of CardPreview\n */\nexport const useCardPreview_unstable = (props: CardPreviewProps, ref: React.Ref<HTMLElement>): CardPreviewState => {\n  const { logo } = props;\n\n  const {\n    selectableA11yProps: { referenceLabel, referenceId, setReferenceLabel, setReferenceId },\n  } = useCardContext_unstable();\n  const previewRef = useMergedRefs(ref, React.useRef<HTMLDivElement>(null));\n\n  React.useEffect(() => {\n    if (referenceLabel && referenceId) {\n      return;\n    }\n\n    if (previewRef.current && previewRef.current.parentNode) {\n      const img = previewRef.current.parentNode.querySelector<HTMLImageElement>(`.${cardPreviewClassNames.root} > img`);\n\n      if (img) {\n        const ariaLabel = img.getAttribute('aria-label');\n        const ariaDescribedby = img.getAttribute('aria-describedby');\n\n        if (ariaDescribedby) {\n          setReferenceId(ariaDescribedby);\n        } else if (img.alt) {\n          setReferenceLabel(img.alt);\n        } else if (ariaLabel) {\n          setReferenceLabel(ariaLabel);\n        }\n      }\n    }\n  }, [setReferenceLabel, referenceLabel, previewRef, referenceId, setReferenceId]);\n\n  return {\n    components: {\n      root: 'div',\n      logo: 'div',\n    },\n\n    root: getNativeElementProps('div', {\n      ref: previewRef,\n      ...props,\n    }),\n    logo: resolveShorthand(logo),\n  };\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,qBAAqB,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ;AAEvE,SAASC,uBAAuB,QAAQ;AACxC,SAASC,qBAAqB,QAAQ;AAEtC;;;;;;;;;AASA,OAAO,MAAMC,uBAAA,GAA0BA,CAACC,KAAA,EAAyBC,GAAA,KAAkD;EACjH,MAAM;IAAEC;EAAI,CAAE,GAAGF,KAAA;EAEjB,MAAM;IACJG,mBAAA,EAAqB;MAAEC,cAAA;MAAgBC,WAAA;MAAaC,iBAAA;MAAmBC;IAAc;EAAE,CACxF,GAAGV,uBAAA;EACJ,MAAMW,UAAA,GAAaZ,aAAA,CAAcK,GAAA,EAAKR,KAAA,CAAMgB,MAAM,CAAiB,IAAI;EAEvEhB,KAAA,CAAMiB,SAAS,CAAC,MAAM;IACpB,IAAIN,cAAA,IAAkBC,WAAA,EAAa;MACjC;IACF;IAEA,IAAIG,UAAA,CAAWG,OAAO,IAAIH,UAAA,CAAWG,OAAO,CAACC,UAAU,EAAE;MACvD,MAAMC,GAAA,GAAML,UAAA,CAAWG,OAAO,CAACC,UAAU,CAACE,aAAa,CAAoB,IAAGhB,qBAAA,CAAsBiB,IAAK,QAAO;MAEhH,IAAIF,GAAA,EAAK;QACP,MAAMG,SAAA,GAAYH,GAAA,CAAII,YAAY,CAAC;QACnC,MAAMC,eAAA,GAAkBL,GAAA,CAAII,YAAY,CAAC;QAEzC,IAAIC,eAAA,EAAiB;UACnBX,cAAA,CAAeW,eAAA;QACjB,OAAO,IAAIL,GAAA,CAAIM,GAAG,EAAE;UAClBb,iBAAA,CAAkBO,GAAA,CAAIM,GAAG;QAC3B,OAAO,IAAIH,SAAA,EAAW;UACpBV,iBAAA,CAAkBU,SAAA;QACpB;MACF;IACF;EACF,GAAG,CAACV,iBAAA,EAAmBF,cAAA,EAAgBI,UAAA,EAAYH,WAAA,EAAaE,cAAA,CAAe;EAE/E,OAAO;IACLa,UAAA,EAAY;MACVL,IAAA,EAAM;MACNb,IAAA,EAAM;IACR;IAEAa,IAAA,EAAMrB,qBAAA,CAAsB,OAAO;MACjCO,GAAA,EAAKO,UAAA;MACL,GAAGR;IACL;IACAE,IAAA,EAAMP,gBAAA,CAAiBO,IAAA;EACzB;AACF"}