{"version":3,"names":["React","getNativeElementProps","useMergedRefs","useFocusableGroup","useFocusWithin","useCardSelectable","cardContextDefaultValue","focusMap","off","undefined","useCardInteractive","focusMode","props","interactive","some","prop","groupperAttrs","tabBehavior","interactiveFocusAttributes","tabIndex","focusAttributes","useCard_unstable","ref","appearance","orientation","size","referenceId","setReferenceId","useState","selectableA11yProps","referenceLabel","setReferenceLabel","cardBaseRef","selectable","selected","selectableCardProps","selectFocused","checkboxSlot","floatingActionSlot","cardRef","components","root","floatingAction","checkbox","role"],"sources":["../../../src/components/Card/useCard.ts"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps, useMergedRefs } from '@fluentui/react-utilities';\nimport { useFocusableGroup, useFocusWithin } from '@fluentui/react-tabster';\n\nimport type { CardProps, CardState } from './Card.types';\nimport { useCardSelectable } from './useCardSelectable';\nimport { cardContextDefaultValue } from './CardContext';\n\nconst focusMap = {\n  off: undefined,\n  'no-tab': 'limited-trap-focus',\n  'tab-exit': 'limited',\n  'tab-only': 'unlimited',\n} as const;\n\n/**\n * Create the state for interactive cards.\n *\n * This internal hook defines if the card is interactive\n * and control focus properties based on that.\n *\n * @param props - props from this instance of Card\n */\nconst useCardInteractive = ({ focusMode = 'off', ...props }: CardProps) => {\n  const interactive = (\n    [\n      'onClick',\n      'onDoubleClick',\n      'onMouseUp',\n      'onMouseDown',\n      'onPointerUp',\n      'onPointerDown',\n      'onTouchStart',\n      'onTouchEnd',\n      'onDragStart',\n      'onDragEnd',\n    ] as (keyof React.HTMLAttributes<HTMLElement>)[]\n  ).some(prop => props[prop]);\n\n  const groupperAttrs = useFocusableGroup({\n    tabBehavior: focusMap[interactive ? 'no-tab' : focusMode],\n  });\n\n  const interactiveFocusAttributes = {\n    ...groupperAttrs,\n    tabIndex: 0,\n  };\n\n  return {\n    interactive,\n    focusAttributes: focusMode === 'off' ? null : interactiveFocusAttributes,\n  };\n};\n\n/**\n * Create the state required to render Card.\n *\n * The returned state can be modified with hooks such as useCardStyles_unstable,\n * before being passed to renderCard_unstable.\n *\n * @param props - props from this instance of Card\n * @param ref - reference to the root element of Card\n */\nexport const useCard_unstable = (props: CardProps, ref: React.Ref<HTMLDivElement>): CardState => {\n  const { appearance = 'filled', orientation = 'vertical', size = 'medium' } = props;\n\n  const [referenceId, setReferenceId] = React.useState(cardContextDefaultValue.selectableA11yProps.referenceId);\n  const [referenceLabel, setReferenceLabel] = React.useState(cardContextDefaultValue.selectableA11yProps.referenceId);\n\n  const cardBaseRef = useFocusWithin<HTMLDivElement>();\n  const { selectable, selected, selectableCardProps, selectFocused, checkboxSlot, floatingActionSlot } =\n    useCardSelectable(props, { referenceId, referenceLabel }, cardBaseRef);\n\n  const cardRef = useMergedRefs(cardBaseRef, ref);\n\n  const { interactive, focusAttributes } = useCardInteractive(props);\n\n  return {\n    appearance,\n    orientation,\n    size,\n    interactive,\n    selectable,\n    selectFocused,\n    selected,\n    selectableA11yProps: {\n      setReferenceId,\n      referenceId,\n      referenceLabel,\n      setReferenceLabel,\n    },\n\n    components: {\n      root: 'div',\n      floatingAction: 'div',\n      checkbox: 'input',\n    },\n\n    root: getNativeElementProps('div', {\n      ref: cardRef,\n      role: 'group',\n      ...focusAttributes,\n      ...props,\n      ...selectableCardProps,\n    }),\n\n    floatingAction: floatingActionSlot,\n    checkbox: checkboxSlot,\n  };\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,qBAAqB,EAAEC,aAAa,QAAQ;AACrD,SAASC,iBAAiB,EAAEC,cAAc,QAAQ;AAGlD,SAASC,iBAAiB,QAAQ;AAClC,SAASC,uBAAuB,QAAQ;AAExC,MAAMC,QAAA,GAAW;EACfC,GAAA,EAAKC,SAAA;EACL,UAAU;EACV,YAAY;EACZ,YAAY;AACd;AAEA;;;;;;;;AAQA,MAAMC,kBAAA,GAAqBA,CAAC;EAAEC,SAAA,GAAY;EAAO,GAAGC;AAAA,CAAkB,KAAK;EACzE,MAAMC,WAAA,GAAc,CAEhB,WACA,iBACA,aACA,eACA,eACA,iBACA,gBACA,cACA,eACA,YACD,CACDC,IAAI,CAACC,IAAA,IAAQH,KAAK,CAACG,IAAA,CAAK;EAE1B,MAAMC,aAAA,GAAgBb,iBAAA,CAAkB;IACtCc,WAAA,EAAaV,QAAQ,CAACM,WAAA,GAAc,WAAWF,SAAS;EAC1D;EAEA,MAAMO,0BAAA,GAA6B;IACjC,GAAGF,aAAa;IAChBG,QAAA,EAAU;EACZ;EAEA,OAAO;IACLN,WAAA;IACAO,eAAA,EAAiBT,SAAA,KAAc,QAAQ,IAAI,GAAGO;EAChD;AACF;AAEA;;;;;;;;;AASA,OAAO,MAAMG,gBAAA,GAAmBA,CAACT,KAAA,EAAkBU,GAAA,KAA8C;EAC/F,MAAM;IAAEC,UAAA,GAAa;IAAUC,WAAA,GAAc;IAAYC,IAAA,GAAO;EAAQ,CAAE,GAAGb,KAAA;EAE7E,MAAM,CAACc,WAAA,EAAaC,cAAA,CAAe,GAAG3B,KAAA,CAAM4B,QAAQ,CAACtB,uBAAA,CAAwBuB,mBAAmB,CAACH,WAAW;EAC5G,MAAM,CAACI,cAAA,EAAgBC,iBAAA,CAAkB,GAAG/B,KAAA,CAAM4B,QAAQ,CAACtB,uBAAA,CAAwBuB,mBAAmB,CAACH,WAAW;EAElH,MAAMM,WAAA,GAAc5B,cAAA;EACpB,MAAM;IAAE6B,UAAA;IAAYC,QAAA;IAAUC,mBAAA;IAAqBC,aAAA;IAAeC,YAAA;IAAcC;EAAkB,CAAE,GAClGjC,iBAAA,CAAkBO,KAAA,EAAO;IAAEc,WAAA;IAAaI;EAAe,GAAGE,WAAA;EAE5D,MAAMO,OAAA,GAAUrC,aAAA,CAAc8B,WAAA,EAAaV,GAAA;EAE3C,MAAM;IAAET,WAAA;IAAaO;EAAe,CAAE,GAAGV,kBAAA,CAAmBE,KAAA;EAE5D,OAAO;IACLW,UAAA;IACAC,WAAA;IACAC,IAAA;IACAZ,WAAA;IACAoB,UAAA;IACAG,aAAA;IACAF,QAAA;IACAL,mBAAA,EAAqB;MACnBF,cAAA;MACAD,WAAA;MACAI,cAAA;MACAC;IACF;IAEAS,UAAA,EAAY;MACVC,IAAA,EAAM;MACNC,cAAA,EAAgB;MAChBC,QAAA,EAAU;IACZ;IAEAF,IAAA,EAAMxC,qBAAA,CAAsB,OAAO;MACjCqB,GAAA,EAAKiB,OAAA;MACLK,IAAA,EAAM;MACN,GAAGxB,eAAe;MAClB,GAAGR,KAAK;MACR,GAAGuB;IACL;IAEAO,cAAA,EAAgBJ,kBAAA;IAChBK,QAAA,EAAUN;EACZ;AACF"}