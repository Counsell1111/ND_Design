import * as React from 'react';
import { resolveShorthand, useMergedRefs } from '@fluentui/react-utilities';
import { useVirtualizer_unstable } from '../Virtualizer/useVirtualizer';
import { useStaticVirtualizerMeasure } from '../../Hooks';
export function useVirtualizerScrollView_unstable(props) {
  var _props_axis;
  const {
    virtualizerLength,
    bufferItems,
    bufferSize,
    scrollRef
  } = useStaticVirtualizerMeasure({
    defaultItemSize: props.itemSize,
    direction: (_props_axis = props.axis) !== null && _props_axis !== void 0 ? _props_axis : 'vertical'
  });
  const iScrollRef = useMergedRefs(React.useRef(null), scrollRef);
  const virtualizerState = useVirtualizer_unstable({
    ...props,
    virtualizerLength,
    bufferItems,
    bufferSize,
    scrollViewRef: iScrollRef
  });
  return {
    ...virtualizerState,
    components: {
      ...virtualizerState.components,
      container: 'div'
    },
    container: resolveShorthand(props.container, {
      required: true,
      defaultProps: {
        ref: iScrollRef
      }
    })
  };
}
//# sourceMappingURL=useVirtualizerScrollView.js.map