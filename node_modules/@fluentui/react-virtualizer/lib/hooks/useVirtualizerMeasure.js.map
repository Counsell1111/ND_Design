{"version":3,"names":["React","canUseDOM","debounce","useStaticVirtualizerMeasure","virtualizerProps","defaultItemSize","direction","state","setState","useState","virtualizerLength","bufferSize","bufferItems","container","useRef","resizeCallback","current","containerSize","getBoundingClientRect","height","width","length","Math","ceil","newBufferItems","max","floor","newBufferSize","totalLength","handleResize","resizeObserver","ResizeObserver","undefined","useEffect","disconnect","scrollRef","useCallback","el","unobserve","observe"],"sources":["../../src/hooks/useVirtualizerMeasure.ts"],"sourcesContent":["import * as React from 'react';\nimport { canUseDOM } from '@fluentui/react-utilities';\nimport { VirtualizerMeasureProps } from './useVirtualizerMeasure.types';\nimport { debounce } from '../utilities/debounce';\n\n/**\n * React hook that measures virtualized space based on a static size to ensure optimized virtualization length.\n */\nexport const useStaticVirtualizerMeasure = (\n  virtualizerProps: VirtualizerMeasureProps,\n): {\n  virtualizerLength: number;\n  bufferItems: number;\n  bufferSize: number;\n  scrollRef: (instance: HTMLElement | HTMLDivElement | null) => void;\n} => {\n  const { defaultItemSize, direction = 'vertical' } = virtualizerProps;\n\n  const [state, setState] = React.useState({\n    virtualizerLength: 0,\n    bufferSize: 0,\n    bufferItems: 0,\n  });\n\n  const { virtualizerLength, bufferItems, bufferSize } = state;\n\n  // The ref the user sets on their scrollView - Defaults to document.body to ensure no null on init\n  const container = React.useRef<HTMLElement | null>(null);\n\n  const resizeCallback = () => {\n    if (!container.current) {\n      return;\n    }\n\n    const containerSize =\n      direction === 'vertical'\n        ? container.current.getBoundingClientRect().height\n        : container.current.getBoundingClientRect().width;\n\n    /*\n     * Number of items required to cover viewport.\n     */\n    const length = Math.ceil(containerSize / defaultItemSize + 1);\n\n    /*\n     * Number of items to append at each end, i.e. 'preload' each side before entering view.\n     */\n    const newBufferItems = Math.max(Math.floor(length / 4), 2);\n\n    /*\n     * This is how far we deviate into the bufferItems to detect a redraw.\n     */\n    const newBufferSize = Math.max(Math.floor((length / 8) * defaultItemSize), 1);\n\n    const totalLength = length + newBufferItems * 2 + 1;\n\n    setState({\n      virtualizerLength: totalLength,\n      bufferItems: newBufferItems,\n      bufferSize: newBufferSize,\n    });\n  };\n\n  // the handler for resize observer\n  const handleResize = debounce(resizeCallback);\n\n  // Keep the reference of ResizeObserver in the state, as it should live through renders\n  const [resizeObserver] = React.useState(canUseDOM() ? new ResizeObserver(handleResize) : undefined);\n\n  React.useEffect(() => {\n    return () => {\n      resizeObserver?.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const scrollRef = React.useCallback(\n    (el: HTMLElement | null) => {\n      if (container.current !== el) {\n        if (container.current) {\n          resizeObserver?.unobserve(container.current);\n        }\n\n        container.current = el;\n        if (container.current) {\n          resizeObserver?.observe(container.current);\n        }\n      }\n    },\n    [resizeObserver],\n  );\n\n  return {\n    virtualizerLength,\n    bufferItems,\n    bufferSize,\n    scrollRef,\n  };\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,SAAS,QAAQ;AAE1B,SAASC,QAAQ,QAAQ;AAEzB;;;AAGA,OAAO,MAAMC,2BAAA,GACXC,gBAAA,IAMG;EACH,MAAM;IAAEC,eAAA;IAAiBC,SAAA,GAAY;EAAU,CAAE,GAAGF,gBAAA;EAEpD,MAAM,CAACG,KAAA,EAAOC,QAAA,CAAS,GAAGR,KAAA,CAAMS,QAAQ,CAAC;IACvCC,iBAAA,EAAmB;IACnBC,UAAA,EAAY;IACZC,WAAA,EAAa;EACf;EAEA,MAAM;IAAEF,iBAAA;IAAmBE,WAAA;IAAaD;EAAU,CAAE,GAAGJ,KAAA;EAEvD;EACA,MAAMM,SAAA,GAAYb,KAAA,CAAMc,MAAM,CAAqB,IAAI;EAEvD,MAAMC,cAAA,GAAiBA,CAAA,KAAM;IAC3B,IAAI,CAACF,SAAA,CAAUG,OAAO,EAAE;MACtB;IACF;IAEA,MAAMC,aAAA,GACJX,SAAA,KAAc,aACVO,SAAA,CAAUG,OAAO,CAACE,qBAAqB,GAAGC,MAAM,GAChDN,SAAA,CAAUG,OAAO,CAACE,qBAAqB,GAAGE,KAAK;IAErD;;;IAGA,MAAMC,MAAA,GAASC,IAAA,CAAKC,IAAI,CAACN,aAAA,GAAgBZ,eAAA,GAAkB;IAE3D;;;IAGA,MAAMmB,cAAA,GAAiBF,IAAA,CAAKG,GAAG,CAACH,IAAA,CAAKI,KAAK,CAACL,MAAA,GAAS,IAAI;IAExD;;;IAGA,MAAMM,aAAA,GAAgBL,IAAA,CAAKG,GAAG,CAACH,IAAA,CAAKI,KAAK,CAACL,MAAC,GAAS,IAAKhB,eAAA,GAAkB;IAE3E,MAAMuB,WAAA,GAAcP,MAAA,GAASG,cAAA,GAAiB,IAAI;IAElDhB,QAAA,CAAS;MACPE,iBAAA,EAAmBkB,WAAA;MACnBhB,WAAA,EAAaY,cAAA;MACbb,UAAA,EAAYgB;IACd;EACF;EAEA;EACA,MAAME,YAAA,GAAe3B,QAAA,CAASa,cAAA;EAE9B;EACA,MAAM,CAACe,cAAA,CAAe,GAAG9B,KAAA,CAAMS,QAAQ,CAACR,SAAA,KAAc,IAAI8B,cAAA,CAAeF,YAAA,IAAgBG,SAAS;EAElGhC,KAAA,CAAMiC,SAAS,CAAC,MAAM;IACpB,OAAO,MAAM;MACXH,cAAA,aAAAA,cAAA,uBAAAA,cAAA,CAAgBI,UAAU;IAC5B;IACA;EACF,GAAG,EAAE;EAEL,MAAMC,SAAA,GAAYnC,KAAA,CAAMoC,WAAW,CAChCC,EAAA,IAA2B;IAC1B,IAAIxB,SAAA,CAAUG,OAAO,KAAKqB,EAAA,EAAI;MAC5B,IAAIxB,SAAA,CAAUG,OAAO,EAAE;QACrBc,cAAA,aAAAA,cAAA,uBAAAA,cAAA,CAAgBQ,SAAS,CAACzB,SAAA,CAAUG,OAAO;MAC7C;MAEAH,SAAA,CAAUG,OAAO,GAAGqB,EAAA;MACpB,IAAIxB,SAAA,CAAUG,OAAO,EAAE;QACrBc,cAAA,aAAAA,cAAA,uBAAAA,cAAA,CAAgBS,OAAO,CAAC1B,SAAA,CAAUG,OAAO;MAC3C;IACF;EACF,GACA,CAACc,cAAA,CAAe;EAGlB,OAAO;IACLpB,iBAAA;IACAE,WAAA;IACAD,UAAA;IACAwB;EACF;AACF"}