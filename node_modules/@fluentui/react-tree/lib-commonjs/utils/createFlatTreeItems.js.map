{"version":3,"sources":["../../lib/utils/createFlatTreeItems.js"],"sourcesContent":["import * as React from 'react';\n/**\n * creates a list of flat tree items\n * and provides a map to access each item by id\n */\nexport function createFlatTreeItems(flatTreeItemProps) {\n  const root = createFlatTreeRootItem();\n  const itemsPerValue = new Map([[flatTreeRootId, root]]);\n  const items = [];\n  for (let index = 0; index < flatTreeItemProps.length; index++) {\n    const {\n      parentValue = flatTreeRootId,\n      ...treeItemProps\n    } = flatTreeItemProps[index];\n    const nextItemProps = flatTreeItemProps[index + 1];\n    const currentParent = itemsPerValue.get(parentValue);\n    if (!currentParent) {\n      if (process.env.NODE_ENV === 'development') {\n        // eslint-disable-next-line no-console\n        console.error(`useFlatTree: item ${flatTreeItemProps[index].id} is wrongly positioned, did you properly ordered provided item props? make sure provided items are organized`);\n      }\n      break;\n    }\n    const isLeaf = (nextItemProps === null || nextItemProps === void 0 ? void 0 : nextItemProps.parentValue) !== treeItemProps.value;\n    var _currentParent_level;\n    const currentLevel = ((_currentParent_level = currentParent.level) !== null && _currentParent_level !== void 0 ? _currentParent_level : 0) + 1;\n    const currentChildrenSize = ++currentParent.childrenSize;\n    const ref = /*#__PURE__*/React.createRef();\n    const flatTreeItem = {\n      value: treeItemProps.value,\n      getTreeItemProps: () => ({\n        ...treeItemProps,\n        'aria-level': currentLevel,\n        'aria-posinset': currentChildrenSize,\n        'aria-setsize': currentParent.childrenSize,\n        leaf: isLeaf,\n        // a reference to every parent element is necessary to ensure navigation\n        ref: flatTreeItem.childrenSize > 0 ? ref : undefined\n      }),\n      ref,\n      level: currentLevel,\n      parentValue,\n      childrenSize: 0,\n      index: -1\n    };\n    itemsPerValue.set(flatTreeItem.value, flatTreeItem);\n    items.push(flatTreeItem);\n  }\n  return {\n    root,\n    size: items.length,\n    getByIndex: index => items[index],\n    get: id => itemsPerValue.get(id),\n    set: (id, value) => itemsPerValue.set(id, value)\n  };\n}\nexport const flatTreeRootId = '__fuiFlatTreeRoot';\nfunction createFlatTreeRootItem() {\n  return {\n    ref: {\n      current: null\n    },\n    value: flatTreeRootId,\n    getTreeItemProps: () => {\n      if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line no-console\n        console.error('useFlatTree: internal error, trying to access treeitem props from invalid root element');\n      }\n      return {\n        value: flatTreeRootId,\n        'aria-setsize': -1,\n        'aria-level': -1,\n        'aria-posinset': -1,\n        leaf: true\n      };\n    },\n    childrenSize: 0,\n    get index() {\n      if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line no-console\n        console.error('useFlatTree: internal error, trying to access treeitem props from invalid root element');\n      }\n      return -1;\n    },\n    level: 0\n  };\n}\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport function* VisibleFlatTreeItemGenerator(openItems, flatTreeItems) {\n  for (let index = 0, visibleIndex = 0; index < flatTreeItems.size; index++) {\n    const item = flatTreeItems.getByIndex(index);\n    var _flatTreeItems_get;\n    const parent = item.parentValue ? (_flatTreeItems_get = flatTreeItems.get(item.parentValue)) !== null && _flatTreeItems_get !== void 0 ? _flatTreeItems_get : flatTreeItems.root : flatTreeItems.root;\n    if (isItemVisible(item, openItems, flatTreeItems)) {\n      item.index = visibleIndex++;\n      yield item;\n    } else {\n      index += parent.childrenSize - 1 + item.childrenSize;\n    }\n  }\n}\nfunction isItemVisible(item, openItems, flatTreeItems) {\n  if (item.level === 1) {\n    return true;\n  }\n  while (item.parentValue && item.parentValue !== flatTreeItems.root.value) {\n    if (!openItems.has(item.parentValue)) {\n      return false;\n    }\n    const parent = flatTreeItems.get(item.parentValue);\n    if (!parent) {\n      return false;\n    }\n    item = parent;\n  }\n  return true;\n}\n//# sourceMappingURL=createFlatTreeItems.js.map"],"names":["createFlatTreeItems","flatTreeRootId","VisibleFlatTreeItemGenerator","flatTreeItemProps","root","createFlatTreeRootItem","itemsPerValue","Map","items","index","length","parentValue","treeItemProps","nextItemProps","currentParent","get","process","env","NODE_ENV","console","error","id","isLeaf","value","_currentParent_level","currentLevel","level","currentChildrenSize","childrenSize","ref","React","createRef","flatTreeItem","getTreeItemProps","leaf","undefined","set","push","size","getByIndex","current","openItems","flatTreeItems","visibleIndex","item","_flatTreeItems_get","parent","isItemVisible","has"],"mappings":"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"}