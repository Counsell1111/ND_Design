{"version":3,"names":["__styles","mergeClasses","shorthands","tokens","createFocusOutlineStyle","useTreeContext_unstable","treeItemLevelToken","treeItemClassNames","root","content","subtree","expandIcon","actions","useRootStyles","level1","iytv0q","level2","level3","level4","level5","level6","level7","level8","level9","level10","d","useContentStyles","base","qhf8xq","Bceei9c","mc9l5x","De3pzq","sj55zd","z189sj","uwmqm3","Bbmb7ep","Beyfa6y","B7oj6ja","Btl43ni","lj723h","ecr2s2","Ixpawx","Bi91k9c","Jwef8y","B0t702g","focusIndicator","Brovlpu","B486eqv","B8q5s1w","Bci5o5g","n8qw10","Bdrgwmp","Bm4h7ae","B7ys5i9","Busjfv9","Bhk32uz","Bf4ptjt","kclons","Bhdgwq3","Blkhhs4","Bqtpl0w","clg4pj","hgwjuy","Bonggc9","B1tsrr9","Dah5zi","Bkh64rk","qqdqy8","B6dhp37","i03rao","Boxcth7","Bsom6fd","J0r882","Bjwuhne","Ghsupd","Bule8hv","subtle","transparent","leaf","a","h","f","i","useExpandIconStyles","Bt984gj","Brf1p80","Bf4jedk","B7ck84d","z8tnut","Byoj8tv","useActionsStyles","Frg6f3","open","expandIconInlineStyles","transform","useTreeItemStyles_unstable","state","rootStyles","contentStyles","expandIconStyles","actionsStyles","appearance","ctx","isActionsVisible","showActions","level","className","isStaticallyDefinedLevel","isLeaf"],"sources":["../../../src/components/TreeItem/useTreeItemStyles.ts"],"sourcesContent":["import { GriffelStyle, makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport type { TreeItemCSSProperties, TreeItemSlots, TreeItemState } from './TreeItem.types';\nimport type { SlotClassNames } from '@fluentui/react-utilities';\nimport { tokens } from '@fluentui/react-theme';\nimport { createFocusOutlineStyle } from '@fluentui/react-tabster';\nimport { useTreeContext_unstable } from '../../contexts/index';\nimport { treeItemLevelToken } from '../../utils/tokens';\n\nexport const treeItemClassNames: SlotClassNames<TreeItemSlots> = {\n  root: 'fui-TreeItem',\n  content: 'fui-TreeItem__content',\n  subtree: 'fui-TreeItem__subtree',\n  expandIcon: 'fui-TreeItem__expandIcon',\n  actions: 'fui-TreeItem__actions',\n};\n\ntype StaticLevel = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10;\ntype StaticLevelProperty = `level${StaticLevel}`;\n\nconst useRootStyles = makeStyles({\n  ...(Object.fromEntries(\n    Array.from<never, [StaticLevelProperty, TreeItemCSSProperties]>({ length: 10 }, (_, index) => [\n      `level${(index + 1) as StaticLevel}`,\n      { [treeItemLevelToken]: index + 1 },\n    ]),\n  ) as Record<StaticLevelProperty, GriffelStyle>),\n});\n\n/**\n * Styles for the content slot\n */\nconst useContentStyles = makeStyles({\n  base: {\n    position: 'relative',\n    cursor: 'pointer',\n    display: 'flex',\n    backgroundColor: tokens.colorSubtleBackground,\n    color: tokens.colorNeutralForeground2,\n    paddingRight: tokens.spacingHorizontalNone,\n    paddingLeft: `calc((var(${treeItemLevelToken}, 1) - 1) * ${tokens.spacingHorizontalXXL})`,\n    ...shorthands.borderRadius(tokens.borderRadiusMedium),\n    ':active': {\n      color: tokens.colorNeutralForeground2Pressed,\n      backgroundColor: tokens.colorSubtleBackgroundPressed,\n      // TODO: stop using treeItemClassNames.expandIcon for styling\n      [`& .${treeItemClassNames.expandIcon}`]: {\n        color: tokens.colorNeutralForeground3Pressed,\n      },\n    },\n    ':hover': {\n      color: tokens.colorNeutralForeground2Hover,\n      backgroundColor: tokens.colorSubtleBackgroundHover,\n      // TODO: stop using treeItemClassNames.expandIcon  for styling\n      [`& .${treeItemClassNames.expandIcon}`]: {\n        color: tokens.colorNeutralForeground3Hover,\n      },\n    },\n  },\n  focusIndicator: createFocusOutlineStyle(),\n  // Appearance variations\n  subtle: {},\n  'subtle-alpha': {\n    ':hover': {\n      backgroundColor: tokens.colorSubtleBackgroundLightAlphaHover,\n    },\n    ':active': {\n      backgroundColor: tokens.colorSubtleBackgroundLightAlphaPressed,\n    },\n  },\n  transparent: {\n    backgroundColor: tokens.colorTransparentBackground,\n    ':hover': {\n      backgroundColor: tokens.colorTransparentBackgroundHover,\n    },\n    ':active': {\n      backgroundColor: tokens.colorTransparentBackgroundPressed,\n    },\n  },\n  leaf: {\n    paddingLeft: `calc(var(${treeItemLevelToken}, 1) * ${tokens.spacingHorizontalXXL})`,\n  },\n});\n\n/**\n * Styles for the expand icon slot\n */\nconst useExpandIconStyles = makeStyles({\n  base: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    minWidth: '24px',\n    boxSizing: 'border-box',\n    color: tokens.colorNeutralForeground3,\n    ...shorthands.padding(tokens.spacingVerticalXS, 0),\n  },\n});\n\n/**\n * Styles for the action icon slot\n */\nconst useActionsStyles = makeStyles({\n  base: {\n    display: 'none',\n    marginLeft: 'auto',\n    ...shorthands.padding(0, tokens.spacingHorizontalS),\n  },\n  open: {\n    display: 'flex',\n    position: 'relative',\n  },\n});\n\nexport const expandIconInlineStyles = {\n  90: { transform: `rotate(90deg)` },\n  0: { transform: `rotate(0deg)` },\n  180: { transform: `rotate(180deg)` },\n} as const;\n\n/**\n * Apply styling to the TreeItem slots based on the state\n */\nexport const useTreeItemStyles_unstable = (state: TreeItemState): TreeItemState => {\n  const rootStyles = useRootStyles();\n  const contentStyles = useContentStyles();\n  const expandIconStyles = useExpandIconStyles();\n  const actionsStyles = useActionsStyles();\n\n  const appearance = useTreeContext_unstable(ctx => ctx.appearance);\n\n  const { actions, subtree, expandIcon, isActionsVisible: showActions, level } = state;\n\n  state.root.className = mergeClasses(\n    treeItemClassNames.root,\n    isStaticallyDefinedLevel(level) && rootStyles[`level${level}` as StaticLevelProperty],\n    state.root.className,\n  );\n\n  state.content.className = mergeClasses(\n    treeItemClassNames.content,\n    contentStyles.base,\n    contentStyles[appearance],\n    contentStyles.focusIndicator,\n    state.isLeaf && contentStyles.leaf,\n    state.content.className,\n  );\n\n  if (expandIcon) {\n    expandIcon.className = mergeClasses(treeItemClassNames.expandIcon, expandIconStyles.base, expandIcon.className);\n  }\n  if (actions) {\n    actions.className = mergeClasses(\n      treeItemClassNames.actions,\n      actionsStyles.base,\n      showActions && actionsStyles.open,\n      actions.className,\n    );\n  }\n  if (subtree) {\n    subtree.className = mergeClasses(treeItemClassNames.subtree, subtree.className);\n  }\n\n  return state;\n};\n\nfunction isStaticallyDefinedLevel(level: number): level is StaticLevel {\n  return level >= 1 && level <= 10;\n}\n"],"mappings":"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"}