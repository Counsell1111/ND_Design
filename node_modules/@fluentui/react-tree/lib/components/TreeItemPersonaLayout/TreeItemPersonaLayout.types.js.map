{"version":3,"names":[],"sources":["../../../src/components/TreeItemPersonaLayout/TreeItemPersonaLayout.types.ts"],"sourcesContent":["import type { ComponentProps, ComponentState, Slot } from '@fluentui/react-utilities';\nimport type { AvatarContextValue, AvatarSize } from '@fluentui/react-avatar';\nimport type { TreeItemContextValue } from '../../contexts/treeItemContext';\n\nexport type TreeItemPersonaLayoutContextValues = {\n  avatar: AvatarContextValue;\n};\n\nexport type TreeItemPersonaLayoutSlots = {\n  root: Slot<'span'>;\n  /**\n   * Avatar to display.\n   */\n  media: NonNullable<Slot<'span'>>;\n  /**\n   * Main text. Children of the root slot are automatically rendered here\n   */\n  main: Slot<'span'>;\n  /**\n   * Secondary text that describes or complements the main text\n   */\n  description?: Slot<'span'>;\n  /**\n   * aside text that works as extra textual information\n   */\n  aside?: Slot<'span'>;\n  /**\n   * A layout wrapper for the main and description slots\n   */\n  content: Slot<'div'>;\n};\n\n/**\n * TreeItemPersonaLayout Props\n */\nexport type TreeItemPersonaLayoutProps = ComponentProps<Partial<TreeItemPersonaLayoutSlots>>;\n\n/**\n * State used in rendering TreeItemPersonaLayout\n */\nexport type TreeItemPersonaLayoutState = ComponentState<TreeItemPersonaLayoutSlots> &\n  TreeItemContextValue & {\n    avatarSize: AvatarSize;\n  };\n"],"mappings":"AAAA"}