{"version":3,"names":["React","mergeArrowOffset","resolvePositioningShorthand","usePositioning","useTooltipVisibility_unstable","useTooltipVisibility","useFluent_unstable","useFluent","applyTriggerPropsToChildren","resolveShorthand","useControllableState","useId","useIsomorphicLayoutEffect","useIsSSR","useMergedRefs","useTimeout","getTriggerChild","mergeCallbacks","useEventCallback","arrowHeight","tooltipBorderRadius","Escape","useTooltip_unstable","props","_child_props","_child_props1","_child_props2","_child_props3","context","isServerSideRender","targetDocument","setDelayTimeout","clearDelayTimeout","appearance","children","content","withArrow","positioning","onVisibleChange","relationship","showDelay","hideDelay","mountNode","visible","setVisibleInternal","state","initialState","setVisible","useCallback","newVisible","ev","oldVisible","shouldRenderTooltip","components","defaultProps","role","required","id","positioningOptions","enabled","arrowPadding","position","align","offset","targetRef","containerRef","arrowRef","ref","_context_visibleTooltip","thisTooltip","hide","visibleTooltip","onDocumentKeyDown","key","stopPropagation","addEventListener","capture","undefined","removeEventListener","ignoreNextFocusEventRef","useRef","onEnterTrigger","type","current","delay","persist","onLeaveTrigger","activeElement","target","onPointerEnter","onPointerLeave","onFocus","onBlur","child","triggerAriaProps","childTargetRef"],"sources":["../../../src/components/Tooltip/useTooltip.tsx"],"sourcesContent":["import * as React from 'react';\nimport { mergeArrowOffset, resolvePositioningShorthand, usePositioning } from '@fluentui/react-positioning';\nimport {\n  useTooltipVisibility_unstable as useTooltipVisibility,\n  useFluent_unstable as useFluent,\n} from '@fluentui/react-shared-contexts';\nimport {\n  applyTriggerPropsToChildren,\n  resolveShorthand,\n  useControllableState,\n  useId,\n  useIsomorphicLayoutEffect,\n  useIsSSR,\n  useMergedRefs,\n  useTimeout,\n  getTriggerChild,\n  mergeCallbacks,\n  useEventCallback,\n} from '@fluentui/react-utilities';\nimport type { TooltipProps, TooltipState, TooltipChildProps } from './Tooltip.types';\nimport { arrowHeight, tooltipBorderRadius } from './private/constants';\nimport { Escape } from '@fluentui/keyboard-keys';\n\n/**\n * Create the state required to render Tooltip.\n *\n * The returned state can be modified with hooks such as useTooltipStyles_unstable,\n * before being passed to renderTooltip_unstable.\n *\n * @param props - props from this instance of Tooltip\n */\nexport const useTooltip_unstable = (props: TooltipProps): TooltipState => {\n  const context = useTooltipVisibility();\n  const isServerSideRender = useIsSSR();\n  const { targetDocument } = useFluent();\n  const [setDelayTimeout, clearDelayTimeout] = useTimeout();\n\n  const {\n    appearance = 'normal',\n    children,\n    content,\n    withArrow = false,\n    positioning = 'above',\n    onVisibleChange,\n    relationship,\n    showDelay = 250,\n    hideDelay = 250,\n    mountNode,\n  } = props;\n\n  const [visible, setVisibleInternal] = useControllableState({ state: props.visible, initialState: false });\n  const setVisible = React.useCallback(\n    (newVisible: boolean, ev?: React.PointerEvent<HTMLElement> | React.FocusEvent<HTMLElement>) => {\n      clearDelayTimeout();\n      setVisibleInternal(oldVisible => {\n        if (newVisible !== oldVisible) {\n          onVisibleChange?.(ev, { visible: newVisible });\n        }\n        return newVisible;\n      });\n    },\n    [clearDelayTimeout, setVisibleInternal, onVisibleChange],\n  );\n\n  const state: TooltipState = {\n    withArrow,\n    positioning,\n    showDelay,\n    hideDelay,\n    relationship,\n    visible,\n    shouldRenderTooltip: visible,\n    appearance,\n    mountNode,\n    // Slots\n    components: {\n      content: 'div',\n    },\n    content: resolveShorthand(content, {\n      defaultProps: {\n        role: 'tooltip',\n      },\n      required: true,\n    }),\n  };\n\n  state.content.id = useId('tooltip-', state.content.id);\n\n  const positioningOptions = {\n    enabled: state.visible,\n    arrowPadding: 2 * tooltipBorderRadius,\n    position: 'above' as const,\n    align: 'center' as const,\n    offset: 4,\n    ...resolvePositioningShorthand(state.positioning),\n  };\n\n  if (state.withArrow) {\n    positioningOptions.offset = mergeArrowOffset(positioningOptions.offset, arrowHeight);\n  }\n\n  const {\n    targetRef,\n    containerRef,\n    arrowRef,\n  }: {\n    targetRef: React.MutableRefObject<unknown>;\n    containerRef: React.MutableRefObject<HTMLDivElement>;\n    arrowRef: React.MutableRefObject<HTMLDivElement>;\n  } = usePositioning(positioningOptions);\n\n  state.content.ref = useMergedRefs(state.content.ref, containerRef);\n  state.arrowRef = arrowRef;\n\n  // When this tooltip is visible, hide any other tooltips, and register it\n  // as the visibleTooltip with the TooltipContext.\n  // Also add a listener on document to hide the tooltip if Escape is pressed\n  useIsomorphicLayoutEffect(() => {\n    if (visible) {\n      const thisTooltip = { hide: () => setVisible(false) };\n\n      context.visibleTooltip?.hide();\n      context.visibleTooltip = thisTooltip;\n\n      const onDocumentKeyDown = (ev: KeyboardEvent) => {\n        if (ev.key === Escape) {\n          thisTooltip.hide();\n          // stop propagation to avoid conflicting with other elements that listen for `Escape`\n          // e,g: Dialog, Popover, Menu\n          ev.stopPropagation();\n        }\n      };\n\n      targetDocument?.addEventListener('keydown', onDocumentKeyDown, {\n        // As this event is added at targeted document,\n        // we need to capture the event to be sure keydown handling from tooltip happens first\n        capture: true,\n      });\n\n      return () => {\n        if (context.visibleTooltip === thisTooltip) {\n          context.visibleTooltip = undefined;\n        }\n\n        targetDocument?.removeEventListener('keydown', onDocumentKeyDown, { capture: true });\n      };\n    }\n  }, [context, targetDocument, visible, setVisible]);\n\n  // The focused element gets a blur event when the document loses focus\n  // (e.g. switching tabs in the browser), but we don't want to show the\n  // tooltip again when the document gets focus back. Handle this case by\n  // checking if the blurred element is still the document's activeElement.\n  // See https://github.com/microsoft/fluentui/issues/13541\n  const ignoreNextFocusEventRef = React.useRef(false);\n\n  // Listener for onPointerEnter and onFocus on the trigger element\n  const onEnterTrigger = React.useCallback(\n    (ev: React.PointerEvent<HTMLElement> | React.FocusEvent<HTMLElement>) => {\n      if (ev.type === 'focus' && ignoreNextFocusEventRef.current) {\n        ignoreNextFocusEventRef.current = false;\n        return;\n      }\n\n      // Show immediately if another tooltip is already visible\n      const delay = context.visibleTooltip ? 0 : state.showDelay;\n\n      setDelayTimeout(() => {\n        setVisible(true, ev);\n      }, delay);\n\n      ev.persist(); // Persist the event since the setVisible call will happen asynchronously\n    },\n    [setDelayTimeout, setVisible, state.showDelay, context],\n  );\n\n  // Listener for onPointerLeave and onBlur on the trigger element\n  const onLeaveTrigger = React.useCallback(\n    (ev: React.PointerEvent<HTMLElement> | React.FocusEvent<HTMLElement>) => {\n      let delay = state.hideDelay;\n\n      if (ev.type === 'blur') {\n        // Hide immediately when losing focus\n        delay = 0;\n\n        ignoreNextFocusEventRef.current = targetDocument?.activeElement === ev.target;\n      }\n\n      setDelayTimeout(() => {\n        setVisible(false, ev);\n      }, delay);\n\n      ev.persist(); // Persist the event since the setVisible call will happen asynchronously\n    },\n    [setDelayTimeout, setVisible, state.hideDelay, targetDocument],\n  );\n\n  // Cancel the hide timer when the mouse or focus enters the tooltip, and restart it when the mouse or focus leaves.\n  // This keeps the tooltip visible when the mouse is moved over it, or it has focus within.\n  state.content.onPointerEnter = mergeCallbacks(state.content.onPointerEnter, clearDelayTimeout);\n  state.content.onPointerLeave = mergeCallbacks(state.content.onPointerLeave, onLeaveTrigger);\n  state.content.onFocus = mergeCallbacks(state.content.onFocus, clearDelayTimeout);\n  state.content.onBlur = mergeCallbacks(state.content.onBlur, onLeaveTrigger);\n\n  const child = getTriggerChild(children);\n\n  const triggerAriaProps: Pick<TooltipChildProps, 'aria-label' | 'aria-labelledby' | 'aria-describedby'> = {};\n\n  if (relationship === 'label') {\n    // aria-label only works if the content is a string. Otherwise, need to use aria-labelledby.\n    if (typeof state.content.children === 'string') {\n      triggerAriaProps['aria-label'] = state.content.children;\n    } else {\n      triggerAriaProps['aria-labelledby'] = state.content.id;\n      // Always render the tooltip even if hidden, so that aria-labelledby refers to a valid element\n      state.shouldRenderTooltip = true;\n    }\n  } else if (relationship === 'description') {\n    triggerAriaProps['aria-describedby'] = state.content.id;\n    // Always render the tooltip even if hidden, so that aria-describedby refers to a valid element\n    state.shouldRenderTooltip = true;\n  }\n\n  // Don't render the Tooltip in SSR to avoid hydration errors\n  if (isServerSideRender) {\n    state.shouldRenderTooltip = false;\n  }\n\n  const childTargetRef = useMergedRefs(child?.ref, targetRef);\n\n  // Apply the trigger props to the child, either by calling the render function, or cloning with the new props\n  state.children = applyTriggerPropsToChildren(children, {\n    ...triggerAriaProps,\n    ...child?.props,\n    // If the target prop is not provided, attach targetRef to the trigger element's ref prop\n    ref: positioningOptions.target === undefined ? childTargetRef : child?.ref,\n    onPointerEnter: useEventCallback(mergeCallbacks(child?.props?.onPointerEnter, onEnterTrigger)),\n    onPointerLeave: useEventCallback(mergeCallbacks(child?.props?.onPointerLeave, onLeaveTrigger)),\n    onFocus: useEventCallback(mergeCallbacks(child?.props?.onFocus, onEnterTrigger)),\n    onBlur: useEventCallback(mergeCallbacks(child?.props?.onBlur, onLeaveTrigger)),\n  });\n\n  return state;\n};\n"],"mappings":"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"}