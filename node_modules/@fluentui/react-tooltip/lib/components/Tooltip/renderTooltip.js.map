{"version":3,"names":["React","Portal","createElement","getSlotsNext","renderTooltip_unstable","state","slots","slotProps","Fragment","children","shouldRenderTooltip","mountNode","content","withArrow","ref","arrowRef","className","arrowClassName"],"sources":["../../../src/components/Tooltip/renderTooltip.tsx"],"sourcesContent":["/** @jsxRuntime classic */\n/** @jsxFrag React.Fragment */\n/** @jsx createElement */\n\nimport * as React from 'react';\nimport { Portal } from '@fluentui/react-portal';\n\nimport { createElement } from '@fluentui/react-jsx-runtime';\n\nimport { getSlotsNext } from '@fluentui/react-utilities';\nimport type { TooltipSlots, TooltipState } from './Tooltip.types';\n\n/**\n * Render the final JSX of Tooltip\n */\nexport const renderTooltip_unstable = (state: TooltipState) => {\n  const { slots, slotProps } = getSlotsNext<TooltipSlots>(state);\n\n  return (\n    <>\n      {state.children}\n      {state.shouldRenderTooltip && (\n        <Portal mountNode={state.mountNode}>\n          <slots.content {...slotProps.content}>\n            {state.withArrow && <div ref={state.arrowRef} className={state.arrowClassName} />}\n            {state.content.children}\n          </slots.content>\n        </Portal>\n      )}\n    </>\n  );\n};\n"],"mappings":"AAAA,2BACA,+BACA,yBAEA,YAAYA,KAAA,MAAW;AACvB,SAASC,MAAM,QAAQ;AAEvB,SAASC,aAAa,QAAQ;AAE9B,SAASC,YAAY,QAAQ;AAG7B;;;AAGA,OAAO,MAAMC,sBAAA,GAA0BC,KAAA,IAAwB;EAC7D,MAAM;IAAEC,KAAA;IAAOC;EAAS,CAAE,GAAGJ,YAAA,CAA2BE,KAAA;EAExD,oBACEH,aAjBJ,CADAF,KAAA,CAAAQ,QAA8B,QAmBvBH,KAAA,CAAMI,QAAQ,EACdJ,KAAA,CAAMK,mBAAmB,iBACxBR,aApBR,CAoBSD,MAAA;IAAOU,SAAA,EAAWN,KAAA,CAAMM;kBACvBT,aArBV,CAqBWI,KAAA,CAAMM,OAAO,EAAKL,SAAA,CAAUK,OAAO,EACjCP,KAAA,CAAMQ,SAAS,iBAAIX,aAtBhC,CAsBiC;IAAIY,GAAA,EAAKT,KAAA,CAAMU,QAAQ;IAAEC,SAAA,EAAWX,KAAA,CAAMY;MAC9DZ,KAAA,CAAMO,OAAO,CAACH,QAAQ;AAMnC"}