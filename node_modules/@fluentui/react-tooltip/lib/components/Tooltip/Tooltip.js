import * as React from 'react';
import { useTooltip_unstable } from './useTooltip';
import { renderTooltip_unstable } from './renderTooltip';
import { useCustomStyleHooks_unstable } from '@fluentui/react-shared-contexts';
import { useTooltipStyles_unstable } from './useTooltipStyles';
/**
 * A tooltip provides light weight contextual information on top of its target element.
 */
export const Tooltip = props => {
  const state = useTooltip_unstable(props);
  useTooltipStyles_unstable(state);
  const {
    useTooltipStyles_unstable: useCustomStyles
  } = useCustomStyleHooks_unstable();
  useCustomStyles(state);
  return renderTooltip_unstable(state);
};
Tooltip.displayName = 'Tooltip';
// type casting here is required to ensure internal type FluentTriggerComponent is not leaked
Tooltip.isFluentTriggerComponent = true;
//# sourceMappingURL=Tooltip.js.map