{"version":3,"names":["React","useTimeout","timeout","useState","id","undefined","set","fn","delay","clear","setTimeout","clearTimeout","useEffect"],"sources":["../../src/hooks/useTimeout.ts"],"sourcesContent":["import * as React from 'react';\n\n/**\n * @internal\n * Helper to manage a browser timeout.\n * Ensures that the timeout isn't set multiple times at once,\n * and is cleaned up when the component is unloaded.\n *\n * @returns A pair of [setTimeout, clearTimeout] that are stable between renders.\n */\nexport function useTimeout() {\n  const [timeout] = React.useState(() => ({\n    id: undefined as ReturnType<typeof setTimeout> | undefined,\n    set: (fn: () => void, delay: number) => {\n      timeout.clear();\n      timeout.id = setTimeout(fn, delay);\n    },\n    clear: () => {\n      if (timeout.id !== undefined) {\n        clearTimeout(timeout.id);\n        timeout.id = undefined;\n      }\n    },\n  }));\n\n  // Clean up the timeout when the component is unloaded\n  React.useEffect(() => timeout.clear, [timeout]);\n\n  return [timeout.set, timeout.clear] as const;\n}\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AAEvB;;;;;;;;AAQA,OAAO,SAASC,WAAA,EAAa;EAC3B,MAAM,CAACC,OAAA,CAAQ,GAAGF,KAAA,CAAMG,QAAQ,CAAC,OAAO;IACtCC,EAAA,EAAIC,SAAA;IACJC,GAAA,EAAKA,CAACC,EAAA,EAAgBC,KAAA,KAAkB;MACtCN,OAAA,CAAQO,KAAK;MACbP,OAAA,CAAQE,EAAE,GAAGM,UAAA,CAAWH,EAAA,EAAIC,KAAA;IAC9B;IACAC,KAAA,EAAOA,CAAA,KAAM;MACX,IAAIP,OAAA,CAAQE,EAAE,KAAKC,SAAA,EAAW;QAC5BM,YAAA,CAAaT,OAAA,CAAQE,EAAE;QACvBF,OAAA,CAAQE,EAAE,GAAGC,SAAA;MACf;IACF;EACF;EAEA;EACAL,KAAA,CAAMY,SAAS,CAAC,MAAMV,OAAA,CAAQO,KAAK,EAAE,CAACP,OAAA,CAAQ;EAE9C,OAAO,CAACA,OAAA,CAAQI,GAAG,EAAEJ,OAAA,CAAQO,KAAK,CAAC;AACrC"}