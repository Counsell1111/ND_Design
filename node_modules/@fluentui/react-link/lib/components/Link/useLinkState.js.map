{"version":3,"names":["React","Enter","Space","useLinkState_unstable","state","disabled","disabledFocusable","onClick","onKeyDown","role","tabIndex","type","root","as","href","undefined","ev","preventDefault","key","stopPropagation"],"sources":["../../../src/components/Link/useLinkState.ts"],"sourcesContent":["import * as React from 'react';\nimport { Enter, Space } from '@fluentui/keyboard-keys';\nimport type { LinkState } from './Link.types';\n\n/**\n * The useLinkState_unstable hook processes the Link state.\n * @param state - Link state to mutate.\n */\nexport const useLinkState_unstable = (state: LinkState): LinkState => {\n  const { disabled, disabledFocusable } = state;\n  const { onClick, onKeyDown, role, tabIndex, type } = state.root;\n\n  // Add href and tabIndex=0 for anchor elements.\n  if (state.root.as === 'a') {\n    state.root.href = disabled ? undefined : state.root.href;\n    state.root.tabIndex = tabIndex ?? (disabled && !disabledFocusable ? undefined : 0);\n\n    // Add role=\"link\" for disabled and disabledFocusable links.\n    if (disabled || disabledFocusable) {\n      state.root.role = role || 'link';\n    }\n  }\n  // Add type=\"button\" for button elements.\n  else {\n    state.root.type = type || 'button';\n  }\n\n  // Disallow click event when component is disabled and eat events when disabledFocusable is set to true.\n  state.root.onClick = (ev: React.MouseEvent<HTMLAnchorElement & HTMLButtonElement>) => {\n    if (disabled || disabledFocusable) {\n      ev.preventDefault();\n    } else {\n      onClick?.(ev);\n    }\n  };\n\n  // Disallow keydown event when component is disabled and eat events when disabledFocusable is set to true.\n  state.root.onKeyDown = (ev: React.KeyboardEvent<HTMLAnchorElement & HTMLButtonElement>) => {\n    if ((disabled || disabledFocusable) && (ev.key === Enter || ev.key === Space)) {\n      ev.preventDefault();\n      ev.stopPropagation();\n    } else {\n      onKeyDown?.(ev);\n    }\n  };\n\n  // Set the aria-disabled and disabled props correctly.\n  state.disabled = disabled || disabledFocusable;\n  state.root['aria-disabled'] = disabled || disabledFocusable || undefined;\n  if (state.root.as === 'button') {\n    state.root.disabled = disabled && !disabledFocusable;\n  }\n\n  return state;\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,KAAK,EAAEC,KAAK,QAAQ;AAG7B;;;;AAIA,OAAO,MAAMC,qBAAA,GAAyBC,KAAA,IAAgC;EACpE,MAAM;IAAEC,QAAA;IAAUC;EAAiB,CAAE,GAAGF,KAAA;EACxC,MAAM;IAAEG,OAAA;IAASC,SAAA;IAAWC,IAAA;IAAMC,QAAA;IAAUC;EAAI,CAAE,GAAGP,KAAA,CAAMQ,IAAI;EAE/D;EACA,IAAIR,KAAA,CAAMQ,IAAI,CAACC,EAAE,KAAK,KAAK;IACzBT,KAAA,CAAMQ,IAAI,CAACE,IAAI,GAAGT,QAAA,GAAWU,SAAA,GAAYX,KAAA,CAAMQ,IAAI,CAACE,IAAI;IACxDV,KAAA,CAAMQ,IAAI,CAACF,QAAQ,GAAGA,QAAA,aAAAA,QAAA,cAAAA,QAAA,GAAaL,QAAA,IAAY,CAACC,iBAAA,GAAoBS,SAAA,GAAY,CAAC;IAEjF;IACA,IAAIV,QAAA,IAAYC,iBAAA,EAAmB;MACjCF,KAAA,CAAMQ,IAAI,CAACH,IAAI,GAAGA,IAAA,IAAQ;IAC5B;EACF,OAEK;IACHL,KAAA,CAAMQ,IAAI,CAACD,IAAI,GAAGA,IAAA,IAAQ;EAC5B;EAEA;EACAP,KAAA,CAAMQ,IAAI,CAACL,OAAO,GAAIS,EAAA,IAAgE;IACpF,IAAIX,QAAA,IAAYC,iBAAA,EAAmB;MACjCU,EAAA,CAAGC,cAAc;IACnB,OAAO;MACLV,OAAA,aAAAA,OAAA,uBAAAA,OAAA,CAAUS,EAAA;IACZ;EACF;EAEA;EACAZ,KAAA,CAAMQ,IAAI,CAACJ,SAAS,GAAIQ,EAAA,IAAmE;IACzF,IAAI,CAACX,QAAA,IAAYC,iBAAgB,MAAOU,EAAA,CAAGE,GAAG,KAAKjB,KAAA,IAASe,EAAA,CAAGE,GAAG,KAAKhB,KAAI,GAAI;MAC7Ec,EAAA,CAAGC,cAAc;MACjBD,EAAA,CAAGG,eAAe;IACpB,OAAO;MACLX,SAAA,aAAAA,SAAA,uBAAAA,SAAA,CAAYQ,EAAA;IACd;EACF;EAEA;EACAZ,KAAA,CAAMC,QAAQ,GAAGA,QAAA,IAAYC,iBAAA;EAC7BF,KAAA,CAAMQ,IAAI,CAAC,gBAAgB,GAAGP,QAAA,IAAYC,iBAAA,IAAqBS,SAAA;EAC/D,IAAIX,KAAA,CAAMQ,IAAI,CAACC,EAAE,KAAK,UAAU;IAC9BT,KAAA,CAAMQ,IAAI,CAACP,QAAQ,GAAGA,QAAA,IAAY,CAACC,iBAAA;EACrC;EAEA,OAAOF,KAAA;AACT"}