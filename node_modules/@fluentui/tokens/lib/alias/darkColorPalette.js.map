{"version":3,"names":["statusSharedColors","personaSharedColors","statusSharedColorNames","personaSharedColorNames","statusColorPaletteTokens","reduce","acc","sharedColor","color","slice","toUpperCase","sharedColorTokens","shade40","shade30","primary","tint30","tint40","tint20","Object","assign","colorPaletteRedForeground3","red","colorPaletteRedBorder2","colorPaletteGreenForeground3","green","colorPaletteGreenBorder2","colorPaletteDarkOrangeForeground3","darkOrange","colorPaletteDarkOrangeBorder2","colorPaletteRedForegroundInverted","colorPaletteGreenForegroundInverted","colorPaletteYellowForegroundInverted","yellow","personaColorPaletteTokens","colorPaletteDarkRedBackground2","darkRed","shade20","colorPalettePlumBackground2","plum","colorPaletteTokens"],"sources":["../../src/alias/darkColorPalette.ts"],"sourcesContent":["/* color palette used in both darkTheme and teamsDarkTheme */\n\nimport { statusSharedColors, personaSharedColors } from '../global/colorPalette';\nimport { statusSharedColorNames, personaSharedColorNames } from '../sharedColorNames';\nimport { ColorPaletteTokens, PersonaColorPaletteTokens, StatusColorPaletteTokens } from '../types';\n\nconst statusColorPaletteTokens = statusSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background1`]: statusSharedColors[sharedColor].shade40,\n    [`colorPalette${color}Background2`]: statusSharedColors[sharedColor].shade30,\n    [`colorPalette${color}Background3`]: statusSharedColors[sharedColor].primary,\n    [`colorPalette${color}Foreground1`]: statusSharedColors[sharedColor].tint30,\n    [`colorPalette${color}Foreground2`]: statusSharedColors[sharedColor].tint40,\n    [`colorPalette${color}Foreground3`]: statusSharedColors[sharedColor].tint20,\n    [`colorPalette${color}BorderActive`]: statusSharedColors[sharedColor].tint30,\n    [`colorPalette${color}Border1`]: statusSharedColors[sharedColor].primary,\n    [`colorPalette${color}Border2`]: statusSharedColors[sharedColor].tint20,\n  };\n\n  return Object.assign(acc, sharedColorTokens);\n}, {} as StatusColorPaletteTokens);\n\n// one-off patches\nstatusColorPaletteTokens.colorPaletteRedForeground3 = statusSharedColors.red.tint30;\nstatusColorPaletteTokens.colorPaletteRedBorder2 = statusSharedColors.red.tint30;\nstatusColorPaletteTokens.colorPaletteGreenForeground3 = statusSharedColors.green.tint40;\nstatusColorPaletteTokens.colorPaletteGreenBorder2 = statusSharedColors.green.tint40;\nstatusColorPaletteTokens.colorPaletteDarkOrangeForeground3 = statusSharedColors.darkOrange.tint30;\nstatusColorPaletteTokens.colorPaletteDarkOrangeBorder2 = statusSharedColors.darkOrange.tint30;\n\nstatusColorPaletteTokens.colorPaletteRedForegroundInverted = statusSharedColors.red.primary;\nstatusColorPaletteTokens.colorPaletteGreenForegroundInverted = statusSharedColors.green.primary;\nstatusColorPaletteTokens.colorPaletteYellowForegroundInverted = statusSharedColors.yellow.shade30;\n\nconst personaColorPaletteTokens = personaSharedColorNames.reduce((acc, sharedColor) => {\n  const color = sharedColor.slice(0, 1).toUpperCase() + sharedColor.slice(1);\n  const sharedColorTokens = {\n    [`colorPalette${color}Background2`]: personaSharedColors[sharedColor].shade30,\n    [`colorPalette${color}Foreground2`]: personaSharedColors[sharedColor].tint40,\n    [`colorPalette${color}BorderActive`]: personaSharedColors[sharedColor].tint30,\n  };\n\n  return Object.assign(acc, sharedColorTokens);\n}, {} as PersonaColorPaletteTokens);\n\n// one-off patches\npersonaColorPaletteTokens.colorPaletteDarkRedBackground2 = personaSharedColors.darkRed.shade20;\npersonaColorPaletteTokens.colorPalettePlumBackground2 = personaSharedColors.plum.shade20;\n\nexport const colorPaletteTokens: ColorPaletteTokens = { ...statusColorPaletteTokens, ...personaColorPaletteTokens };\n"],"mappings":"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"}