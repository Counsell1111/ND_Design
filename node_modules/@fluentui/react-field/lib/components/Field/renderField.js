import * as React from 'react';
import { getSlots } from '@fluentui/react-utilities';
import { FieldContextProvider, getFieldControlProps } from '../../contexts/index';
/**
 * Render the final JSX of Field
 */
export const renderField_unstable = (state, contextValues) => {
  const {
    slots,
    slotProps
  } = getSlots(state);
  let {
    children
  } = state;
  if (typeof children === 'function') {
    children = children(getFieldControlProps(contextValues.field) || {});
  }
  return /*#__PURE__*/React.createElement(FieldContextProvider, {
    value: contextValues === null || contextValues === void 0 ? void 0 : contextValues.field
  }, /*#__PURE__*/React.createElement(slots.root, slotProps.root, slots.label && /*#__PURE__*/React.createElement(slots.label, slotProps.label), children, slots.validationMessage && /*#__PURE__*/React.createElement(slots.validationMessage, slotProps.validationMessage, slots.validationMessageIcon && /*#__PURE__*/React.createElement(slots.validationMessageIcon, slotProps.validationMessageIcon), slotProps.validationMessage.children), slots.hint && /*#__PURE__*/React.createElement(slots.hint, slotProps.hint)));
};
//# sourceMappingURL=renderField.js.map