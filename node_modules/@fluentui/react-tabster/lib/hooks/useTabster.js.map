{"version":3,"names":["React","useFluent_unstable","useFluent","createTabster","disposeTabster","useIsomorphicLayoutEffect","useTabster","targetDocument","defaultView","undefined","tabster","useMemo","autoRoot","controlTab"],"sources":["../../src/hooks/useTabster.ts"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { createTabster, disposeTabster, Types as TabsterTypes } from 'tabster';\nimport { useIsomorphicLayoutEffect } from '@fluentui/react-utilities';\n\n/**\n * Tries to get a tabster instance on the current window or creates a new one\n * Since Tabster is single instance only, feel free to call this hook to ensure Tabster exists if necessary\n *\n * @internal\n * @returns Tabster core instance\n */\nexport const useTabster = (): TabsterTypes.TabsterCore | null => {\n  const { targetDocument } = useFluent();\n\n  const defaultView = targetDocument?.defaultView || undefined;\n  const tabster = React.useMemo(() => {\n    if (!defaultView) {\n      return null;\n    }\n\n    return createTabster(defaultView, { autoRoot: {}, controlTab: false });\n  }, [defaultView]);\n\n  useIsomorphicLayoutEffect(() => {\n    return () => {\n      if (tabster) {\n        disposeTabster(tabster);\n      }\n    };\n  }, [tabster]);\n\n  return tabster;\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,kBAAA,IAAsBC,SAAS,QAAQ;AAChD,SAASC,aAAa,EAAEC,cAAc,QAA+B;AACrE,SAASC,yBAAyB,QAAQ;AAE1C;;;;;;;AAOA,OAAO,MAAMC,UAAA,GAAaA,CAAA,KAAuC;EAC/D,MAAM;IAAEC;EAAc,CAAE,GAAGL,SAAA;EAE3B,MAAMM,WAAA,GAAc,CAAAD,cAAA,aAAAA,cAAA,uBAAAA,cAAA,CAAgBC,WAAW,KAAIC,SAAA;EACnD,MAAMC,OAAA,GAAUV,KAAA,CAAMW,OAAO,CAAC,MAAM;IAClC,IAAI,CAACH,WAAA,EAAa;MAChB,OAAO,IAAI;IACb;IAEA,OAAOL,aAAA,CAAcK,WAAA,EAAa;MAAEI,QAAA,EAAU,CAAC;MAAGC,UAAA,EAAY;IAAM;EACtE,GAAG,CAACL,WAAA,CAAY;EAEhBH,yBAAA,CAA0B,MAAM;IAC9B,OAAO,MAAM;MACX,IAAIK,OAAA,EAAS;QACXN,cAAA,CAAeM,OAAA;MACjB;IACF;EACF,GAAG,CAACA,OAAA,CAAQ;EAEZ,OAAOA,OAAA;AACT"}