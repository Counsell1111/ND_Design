{"version":3,"names":["React","useFieldContext_unstable","getNativeElementProps","resolveShorthand","clampValue","clampMax","useProgressBar_unstable","props","ref","field","fieldState","validationState","color","shape","thickness","_props_max","max","value","root","role","undefined","labelId","validationMessageId","hintId","filter","Boolean","join","bar","required","state","components"],"sources":["../../../src/components/ProgressBar/useProgressBar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useFieldContext_unstable } from '@fluentui/react-field';\nimport { getNativeElementProps, resolveShorthand } from '@fluentui/react-utilities';\nimport { clampValue, clampMax } from '../../utils/index';\nimport type { ProgressBarProps, ProgressBarState } from './ProgressBar.types';\n\n/**\n * Create the state required to render ProgressBar.\n *\n * The returned state can be modified with hooks such as useProgressBarStyles_unstable,\n * before being passed to renderProgressBar_unstable.\n *\n * @param props - props from this instance of ProgressBar\n * @param ref - reference to root HTMLElement of ProgressBar\n */\nexport const useProgressBar_unstable = (props: ProgressBarProps, ref: React.Ref<HTMLElement>): ProgressBarState => {\n  const field = useFieldContext_unstable();\n  const fieldState = field?.validationState;\n\n  const {\n    color = fieldState === 'error' || fieldState === 'warning' || fieldState === 'success' ? fieldState : 'brand',\n    shape = 'rounded',\n    thickness = 'medium',\n  } = props;\n  const max = clampMax(props.max ?? 1);\n  const value = clampValue(props.value, max);\n\n  const root = getNativeElementProps('div', {\n    ref,\n    role: 'progressbar',\n    'aria-valuemin': value !== undefined ? 0 : undefined,\n    'aria-valuemax': value !== undefined ? max : undefined,\n    'aria-valuenow': value,\n    'aria-labelledby': field?.labelId,\n    ...props,\n  });\n\n  if (field && (field.validationMessageId || field.hintId)) {\n    // Prepend the field's validation message and/or hint to the user's aria-describedby\n    root['aria-describedby'] = [field?.validationMessageId, field?.hintId, root['aria-describedby']]\n      .filter(Boolean)\n      .join(' ');\n  }\n\n  const bar = resolveShorthand(props.bar, {\n    required: true,\n  });\n\n  const state: ProgressBarState = {\n    color,\n    max,\n    shape,\n    thickness,\n    value,\n    components: {\n      root: 'div',\n      bar: 'div',\n    },\n    root,\n    bar,\n  };\n\n  return state;\n};\n"],"mappings":"AAAA,YAAYA,KAAA,MAAW;AACvB,SAASC,wBAAwB,QAAQ;AACzC,SAASC,qBAAqB,EAAEC,gBAAgB,QAAQ;AACxD,SAASC,UAAU,EAAEC,QAAQ,QAAQ;AAGrC;;;;;;;;;AASA,OAAO,MAAMC,uBAAA,GAA0BA,CAACC,KAAA,EAAyBC,GAAA,KAAkD;EACjH,MAAMC,KAAA,GAAQR,wBAAA;EACd,MAAMS,UAAA,GAAaD,KAAA,aAAAA,KAAA,uBAAAA,KAAA,CAAOE,eAAe;EAEzC,MAAM;IACJC,KAAA,GAAQF,UAAA,KAAe,WAAWA,UAAA,KAAe,aAAaA,UAAA,KAAe,YAAYA,UAAA,GAAa,OAAO;IAC7GG,KAAA,GAAQ;IACRC,SAAA,GAAY;EAAQ,CACrB,GAAGP,KAAA;MACiBQ,UAAA;EAArB,MAAMC,GAAA,GAAMX,QAAA,CAAS,CAAAU,UAAA,GAAAR,KAAA,CAAMS,GAAG,cAATD,UAAA,cAAAA,UAAA,GAAa,CAAC;EACnC,MAAME,KAAA,GAAQb,UAAA,CAAWG,KAAA,CAAMU,KAAK,EAAED,GAAA;EAEtC,MAAME,IAAA,GAAOhB,qBAAA,CAAsB,OAAO;IACxCM,GAAA;IACAW,IAAA,EAAM;IACN,iBAAiBF,KAAA,KAAUG,SAAA,GAAY,IAAIA,SAAS;IACpD,iBAAiBH,KAAA,KAAUG,SAAA,GAAYJ,GAAA,GAAMI,SAAS;IACtD,iBAAiBH,KAAA;IACjB,mBAAmBR,KAAA,aAAAA,KAAA,uBAAAA,KAAA,CAAOY,OAAO;IACjC,GAAGd;EACL;EAEA,IAAIE,KAAA,KAAUA,KAAA,CAAMa,mBAAmB,IAAIb,KAAA,CAAMc,MAAM,CAAD,EAAI;IACxD;IACAL,IAAI,CAAC,mBAAmB,GAAG,CAACT,KAAA,aAAAA,KAAA,uBAAAA,KAAA,CAAOa,mBAAmB,EAAEb,KAAA,aAAAA,KAAA,uBAAAA,KAAA,CAAOc,MAAM,EAAEL,IAAI,CAAC,mBAAmB,CAAC,CAC7FM,MAAM,CAACC,OAAA,EACPC,IAAI,CAAC;EACV;EAEA,MAAMC,GAAA,GAAMxB,gBAAA,CAAiBI,KAAA,CAAMoB,GAAG,EAAE;IACtCC,QAAA,EAAU;EACZ;EAEA,MAAMC,KAAA,GAA0B;IAC9BjB,KAAA;IACAI,GAAA;IACAH,KAAA;IACAC,SAAA;IACAG,KAAA;IACAa,UAAA,EAAY;MACVZ,IAAA,EAAM;MACNS,GAAA,EAAK;IACP;IACAT,IAAA;IACAS;EACF;EAEA,OAAOE,KAAA;AACT"}