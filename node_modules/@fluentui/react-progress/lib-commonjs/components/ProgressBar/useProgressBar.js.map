{"version":3,"sources":["../../../lib/components/ProgressBar/useProgressBar.js"],"sourcesContent":["import * as React from 'react';\nimport { useFieldContext_unstable } from '@fluentui/react-field';\nimport { getNativeElementProps, resolveShorthand } from '@fluentui/react-utilities';\nimport { clampValue, clampMax } from '../../utils/index';\n/**\n * Create the state required to render ProgressBar.\n *\n * The returned state can be modified with hooks such as useProgressBarStyles_unstable,\n * before being passed to renderProgressBar_unstable.\n *\n * @param props - props from this instance of ProgressBar\n * @param ref - reference to root HTMLElement of ProgressBar\n */\nexport const useProgressBar_unstable = (props, ref) => {\n  const field = useFieldContext_unstable();\n  const fieldState = field === null || field === void 0 ? void 0 : field.validationState;\n  const {\n    color = fieldState === 'error' || fieldState === 'warning' || fieldState === 'success' ? fieldState : 'brand',\n    shape = 'rounded',\n    thickness = 'medium'\n  } = props;\n  var _props_max;\n  const max = clampMax((_props_max = props.max) !== null && _props_max !== void 0 ? _props_max : 1);\n  const value = clampValue(props.value, max);\n  const root = getNativeElementProps('div', {\n    ref,\n    role: 'progressbar',\n    'aria-valuemin': value !== undefined ? 0 : undefined,\n    'aria-valuemax': value !== undefined ? max : undefined,\n    'aria-valuenow': value,\n    'aria-labelledby': field === null || field === void 0 ? void 0 : field.labelId,\n    ...props\n  });\n  if (field && (field.validationMessageId || field.hintId)) {\n    // Prepend the field's validation message and/or hint to the user's aria-describedby\n    root['aria-describedby'] = [field === null || field === void 0 ? void 0 : field.validationMessageId, field === null || field === void 0 ? void 0 : field.hintId, root['aria-describedby']].filter(Boolean).join(' ');\n  }\n  const bar = resolveShorthand(props.bar, {\n    required: true\n  });\n  const state = {\n    color,\n    max,\n    shape,\n    thickness,\n    value,\n    components: {\n      root: 'div',\n      bar: 'div'\n    },\n    root,\n    bar\n  };\n  return state;\n};\n//# sourceMappingURL=useProgressBar.js.map"],"names":["useProgressBar_unstable","props","ref","field","useFieldContext_unstable","fieldState","validationState","color","shape","thickness","_props_max","max","clampMax","value","clampValue","root","getNativeElementProps","role","undefined","labelId","validationMessageId","hintId","filter","Boolean","join","bar","resolveShorthand","required","state","components"],"mappings":";;;;+BAaaA;;aAAAA;;;6DAbU;4BACkB;gCACe;uBACnB;AAU9B,MAAMA,0BAA0B,CAACC,OAAOC,MAAQ;IACrD,MAAMC,QAAQC,IAAAA,oCAAwB;IACtC,MAAMC,aAAaF,UAAU,IAAI,IAAIA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMG,eAAe;IACtF,MAAM,EACJC,OAAQF,eAAe,WAAWA,eAAe,aAAaA,eAAe,YAAYA,aAAa,OAAO,CAAA,EAC7GG,OAAQ,UAAS,EACjBC,WAAY,SAAQ,EACrB,GAAGR;IACJ,IAAIS;IACJ,MAAMC,MAAMC,IAAAA,eAAQ,EAAC,AAACF,CAAAA,aAAaT,MAAMU,GAAG,AAAD,MAAO,IAAI,IAAID,eAAe,KAAK,IAAIA,aAAa,CAAC;IAChG,MAAMG,QAAQC,IAAAA,iBAAU,EAACb,MAAMY,KAAK,EAAEF;IACtC,MAAMI,OAAOC,IAAAA,qCAAqB,EAAC,OAAO;QACxCd;QACAe,MAAM;QACN,iBAAiBJ,UAAUK,YAAY,IAAIA,SAAS;QACpD,iBAAiBL,UAAUK,YAAYP,MAAMO,SAAS;QACtD,iBAAiBL;QACjB,mBAAmBV,UAAU,IAAI,IAAIA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMgB,OAAO;QAC9E,GAAGlB,KAAK;IACV;IACA,IAAIE,SAAUA,CAAAA,MAAMiB,mBAAmB,IAAIjB,MAAMkB,MAAM,AAAD,GAAI;QACxD,oFAAoF;QACpFN,IAAI,CAAC,mBAAmB,GAAG;YAACZ,UAAU,IAAI,IAAIA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMiB,mBAAmB;YAAEjB,UAAU,IAAI,IAAIA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMkB,MAAM;YAAEN,IAAI,CAAC,mBAAmB;SAAC,CAACO,MAAM,CAACC,SAASC,IAAI,CAAC;IAClN,CAAC;IACD,MAAMC,MAAMC,IAAAA,gCAAgB,EAACzB,MAAMwB,GAAG,EAAE;QACtCE,UAAU,IAAI;IAChB;IACA,MAAMC,QAAQ;QACZrB;QACAI;QACAH;QACAC;QACAI;QACAgB,YAAY;YACVd,MAAM;YACNU,KAAK;QACP;QACAV;QACAU;IACF;IACA,OAAOG;AACT,GACA,0CAA0C"}