{"version":3,"names":["fromFloatingUIPlacement","getFloatingUIOffset","rawOffset","rects","floating","reference","placement","position","alignment","positionedRect","targetRect"],"sources":["../../src/utils/getFloatingUIOffset.ts"],"sourcesContent":["import type { Offset } from '../types';\nimport type { MiddlewareArguments } from '@floating-ui/dom';\nimport { fromFloatingUIPlacement } from './fromFloatingUIPlacement';\n/**\n * Type taken from Floating UI since they are not exported\n */\nexport type FloatingUIOffsetValue =\n  | number\n  | {\n      /**\n       * The axis that runs along the side of the floating element.\n       * @default 0\n       */\n      mainAxis?: number;\n      /**\n       * The axis that runs along the alignment of the floating element.\n       * @default 0\n       */\n      crossAxis?: number;\n      /**\n       * When set to a number, overrides the `crossAxis` value for aligned\n       * (non-centered/base) placements and works logically. A positive number\n       * will move the floating element in the direction of the opposite edge\n       * to the one that is aligned, while a negative number the reverse.\n       * @default null\n       */\n      alignmentAxis?: number | null;\n    };\n\n/**\n * Type taken from Floating UI since they are not exported\n */\nexport type FloatingUIOffsetFunction = (args: MiddlewareArguments) => FloatingUIOffsetValue;\n\n/**\n * Shim to transform offset values from this library to Floating UI\n * @param rawOffset Offset from this library\n * @returns An offset value compatible with Floating UI\n */\nexport function getFloatingUIOffset(\n  rawOffset: Offset | undefined,\n): FloatingUIOffsetValue | FloatingUIOffsetFunction | undefined {\n  if (!rawOffset) {\n    return rawOffset;\n  }\n\n  if (typeof rawOffset === 'number' || typeof rawOffset === 'object') {\n    return rawOffset;\n  }\n\n  return ({ rects: { floating, reference }, placement }) => {\n    const { position, alignment } = fromFloatingUIPlacement(placement);\n    return rawOffset({ positionedRect: floating, targetRect: reference, position, alignment });\n  };\n}\n"],"mappings":"AAEA,SAASA,uBAAuB,QAAQ;AAgCxC;;;;;AAKA,OAAO,SAASC,oBACdC,SAA6B,EACiC;EAC9D,IAAI,CAACA,SAAA,EAAW;IACd,OAAOA,SAAA;EACT;EAEA,IAAI,OAAOA,SAAA,KAAc,YAAY,OAAOA,SAAA,KAAc,UAAU;IAClE,OAAOA,SAAA;EACT;EAEA,OAAO,CAAC;IAAEC,KAAA,EAAO;MAAEC,QAAA;MAAUC;IAAS,CAAE;IAAEC;EAAS,CAAE,KAAK;IACxD,MAAM;MAAEC,QAAA;MAAUC;IAAS,CAAE,GAAGR,uBAAA,CAAwBM,SAAA;IACxD,OAAOJ,SAAA,CAAU;MAAEO,cAAA,EAAgBL,QAAA;MAAUM,UAAA,EAAYL,SAAA;MAAWE,QAAA;MAAUC;IAAU;EAC1F;AACF"}