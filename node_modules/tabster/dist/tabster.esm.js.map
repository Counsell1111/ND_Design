{"version":3,"file":"tabster.esm.js","sources":["../src/Types.ts","../src/Instance.ts","../src/EventTarget.ts","../src/Utils.ts","../src/AttributeHelpers.ts","../src/Root.ts","../src/Deloser.ts","../src/State/Subscribable.ts","../src/CrossOrigin.ts","../src/Focusable.ts","../src/Keys.ts","../src/State/FocusedElement.ts","../src/Groupper.ts","../src/State/KeyboardNavigation.ts","../src/Modalizer.ts","../src/Mover.ts","../src/MutationEvent.ts","../src/State/ObservedElement.ts","../src/Outline.ts","../src/Uncontrolled.ts","../src/Tabster.ts"],"sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const TabsterAttributeName = \"data-tabster\";\nexport const TabsterDummyInputAttributeName = \"data-tabster-dummy\";\nexport const DeloserEventName = \"tabster:deloser\";\nexport const ModalizerActiveEventName = \"tabster:modalizer:active\";\nexport const ModalizerInactiveEventName = \"tabster:modalizer:inactive\";\nexport const ModalizerFocusInEventName = \"tabster:modalizer:focusin\";\nexport const ModalizerFocusOutEventName = \"tabster:modalizer:focusout\";\nexport const ModalizerBeforeFocusOutEventName =\n    \"tabster:modalizer:beforefocusout\";\nexport const MoverEventName = \"tabster:mover\";\nexport const FocusInEventName = \"tabster:focusin\";\nexport const FocusOutEventName = \"tabster:focusout\";\n\nexport interface TabsterEventWithDetails<D> extends Event {\n    details: D;\n}\n\nexport interface TabsterDOMAttribute {\n    [TabsterAttributeName]: string | undefined;\n}\n\nexport interface TabsterCoreProps {\n    autoRoot?: RootProps;\n    /**\n     * Allows all tab key presses under the tabster root to be controlled by tabster\n     * @default true\n     */\n    controlTab?: boolean;\n    /**\n     * When controlTab is false, Root doesn't have dummy inputs by default.\n     * This option allows to enable dummy inputs on Root.\n     */\n    rootDummyInputs?: boolean;\n}\n\nexport type GetTabster = () => TabsterCore;\nexport type GetWindow = () => Window;\n\nexport type SubscribableCallback<A, B = undefined> = (\n    val: A,\n    details: B\n) => void;\n\nexport interface Disposable {\n    /** @internal */\n    dispose(): void;\n}\n\nexport interface Subscribable<A, B = undefined> {\n    subscribe(callback: SubscribableCallback<A, B>): void;\n    /** @internal */\n    subscribeFirst(callback: SubscribableCallback<A, B>): void;\n    unsubscribe(callback: SubscribableCallback<A, B>): void;\n}\n\nexport interface KeyboardNavigationState\n    extends Subscribable<boolean>,\n        Disposable {\n    isNavigatingWithKeyboard(): boolean;\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void;\n}\n\nexport interface FocusedElementDetails {\n    relatedTarget?: HTMLElement;\n    isFocusedProgrammatically?: boolean;\n    modalizerId?: string;\n}\n\nexport interface FocusedElementState\n    extends Subscribable<HTMLElement | undefined, FocusedElementDetails>,\n        Disposable {\n    getFocusedElement(): HTMLElement | undefined;\n    getLastFocusedElement(): HTMLElement | undefined;\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    focusDefault(container: HTMLElement): boolean;\n    /** @internal */\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<FindFocusableProps, \"container\" | \"ignoreAccessibility\">\n    ): HTMLElement | undefined;\n    focusFirst(props: FindFirstProps): boolean;\n    focusLast(props: FindFirstProps): boolean;\n    resetFocus(container: HTMLElement): boolean;\n}\n\nexport interface WeakHTMLElement<D = undefined> {\n    get(): HTMLElement | undefined;\n    getData(): D | undefined;\n}\n\nexport interface TabsterPart<P> {\n    readonly id: string;\n    getElement(): HTMLElement | undefined;\n    getProps(): P;\n    setProps(props: P): void;\n}\n\nexport interface TabsterPartWithFindNextTabbable {\n    findNextTabbable(\n        current?: HTMLElement,\n        isBackward?: boolean,\n        ignoreUncontrolled?: boolean,\n        ignoreAccessibility?: boolean\n    ): NextTabbable | null;\n}\n\nexport interface TabsterPartWithAcceptElement {\n    acceptElement(\n        element: HTMLElement,\n        state: FocusableAcceptElementState\n    ): number | undefined;\n}\n\nexport interface ObservedElementProps {\n    names: string[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    details?: any;\n}\n\nexport interface ObservedElementDetails extends ObservedElementProps {\n    accessibility?: ObservedElementAccesibility;\n}\n\nexport interface ObservedElementAccesibilities {\n    Any: 0;\n    Accessible: 1;\n    Focusable: 2;\n}\nexport type ObservedElementAccesibility =\n    ObservedElementAccesibilities[keyof ObservedElementAccesibilities];\nexport const ObservedElementAccesibilities: ObservedElementAccesibilities = {\n    Any: 0,\n    Accessible: 1,\n    Focusable: 2,\n};\n\nexport interface ObservedElementAsyncRequest<T> {\n    result: Promise<T>;\n    cancel(): void;\n}\n\ninterface ObservedElementAPIInternal {\n    /** @internal */\n    onObservedElementUpdate(element: HTMLElement): void;\n}\n\nexport interface ObservedElementAPI\n    extends Subscribable<HTMLElement, ObservedElementDetails>,\n        Disposable,\n        ObservedElementAPIInternal {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccesibility\n    ): HTMLElement | null;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccesibility\n    ): ObservedElementAsyncRequest<HTMLElement | null>;\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): ObservedElementAsyncRequest<boolean>;\n}\n\nexport interface CrossOriginElement {\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginSentTo {\n    [id: string]: true;\n}\n\nexport interface CrossOriginTransactionTypes {\n    Bootstrap: 1;\n    FocusElement: 2;\n    State: 3;\n    GetElement: 4;\n    RestoreFocusInDeloser: 5;\n    Ping: 6;\n}\nexport type CrossOriginTransactionType =\n    CrossOriginTransactionTypes[keyof CrossOriginTransactionTypes];\n\nexport interface CrossOriginTransactionData<I, O> {\n    transaction: string;\n    type: CrossOriginTransactionType;\n    isResponse: boolean;\n    timestamp: number;\n    owner: string;\n    sentto: CrossOriginSentTo;\n    timeout?: number;\n    target?: string;\n    beginData?: I;\n    endData?: O;\n}\n\nexport type CrossOriginTransactionSend = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>\n) => void;\n\nexport interface CrossOriginMessage {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>;\n    send: CrossOriginTransactionSend;\n}\n\nexport interface CrossOriginFocusedElementState\n    extends Subscribable<CrossOriginElement | undefined, FocusedElementDetails>,\n        Disposable {\n    focus(\n        element: CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, ObservedElementProps>,\n        Disposable {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null>;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null>;\n    requestFocus(observedName: string, timeout: number): Promise<boolean>;\n}\n\nexport interface CrossOriginAPI {\n    focusedElement: CrossOriginFocusedElementState;\n    observedElement: CrossOriginObservedElementState;\n\n    setup(\n        sendUp?: CrossOriginTransactionSend | null\n    ): (msg: CrossOriginMessage) => void;\n    isSetUp(): boolean;\n    dispose(): void;\n}\n\nexport interface OutlineProps {\n    areaClass: string;\n    outlineClass: string;\n    outlineColor: string;\n    outlineWidth: number;\n    zIndex: number;\n}\n\nexport interface OutlinedElementProps {\n    isIgnored?: boolean;\n}\n\nexport interface OutlineAPI extends Disposable {\n    setup(props?: Partial<OutlineProps>): void;\n}\n\nexport interface DeloserElementActions {\n    focusDefault: () => boolean;\n    focusFirst: () => boolean;\n    resetFocus: () => boolean;\n    clearHistory: (preserveExisting?: boolean) => void;\n    setSnapshot: (index: number) => void;\n    isActive: () => boolean;\n}\n\nexport interface RestoreFocusOrders {\n    History: 0;\n    DeloserDefault: 1;\n    RootDefault: 2;\n    DeloserFirst: 3;\n    RootFirst: 4;\n}\nexport type RestoreFocusOrder = RestoreFocusOrders[keyof RestoreFocusOrders];\nexport const RestoreFocusOrders: RestoreFocusOrders = {\n    History: 0,\n    DeloserDefault: 1,\n    RootDefault: 2,\n    DeloserFirst: 3,\n    RootFirst: 4,\n};\n\nexport interface DeloserProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n    noSelectorCheck?: boolean;\n}\n\nexport interface Deloser extends TabsterPart<DeloserProps> {\n    readonly uid: string;\n    dispose(): void;\n    isActive(): boolean;\n    setActive(active: boolean): void;\n    getActions(): DeloserElementActions;\n    setSnapshot(index: number): void;\n    focusFirst(): boolean;\n    unshift(element: HTMLElement): void;\n    focusDefault(): boolean;\n    resetFocus(): boolean;\n    findAvailable(): HTMLElement | null;\n    clearHistory(preserveExisting?: boolean): void;\n    customFocusLostHandler(element: HTMLElement): boolean;\n}\n\nexport type DeloserConstructor = (\n    element: HTMLElement,\n    props: DeloserProps\n) => Deloser;\n\ninterface DeloserInterfaceInternal {\n    /** @internal */\n    createDeloser(element: HTMLElement, props: DeloserProps): Deloser;\n}\n\nexport interface DeloserAPI extends DeloserInterfaceInternal, Disposable {\n    getActions(element: HTMLElement): DeloserElementActions | undefined;\n    pause(): void;\n    resume(restore?: boolean): void;\n}\n\nexport interface FocusableProps {\n    isDefault?: boolean;\n    isIgnored?: boolean;\n    /**\n     * Do not determine an element's focusability based on aria-disabled.\n     */\n    ignoreAriaDisabled?: boolean;\n    /**\n     * Exclude element (and all subelements) from Mover navigation.\n     */\n    excludeFromMover?: boolean;\n    /**\n     * Prevents tabster from handling the keydown event\n     */\n    ignoreKeydown?: {\n        Tab?: boolean;\n        Escape?: boolean;\n        Enter?: boolean;\n        ArrowUp?: boolean;\n        ArrowDown?: boolean;\n        ArrowLeft?: boolean;\n        ArrowRight?: boolean;\n        PageUp?: boolean;\n        PageDown?: boolean;\n        Home?: boolean;\n        End?: boolean;\n    };\n}\n\nexport interface FocusableAcceptElementState {\n    container: HTMLElement;\n    modalizerUserId?: string;\n    currentCtx?: TabsterContext;\n    from: HTMLElement;\n    fromCtx?: TabsterContext;\n    isBackward?: boolean;\n    found?: boolean;\n    foundElement?: HTMLElement;\n    lastToIgnore?: HTMLElement;\n    uncontrolled?: HTMLElement;\n    nextUncontrolled?: HTMLElement;\n    acceptCondition: (el: HTMLElement) => boolean;\n    includeProgrammaticallyFocusable?: boolean;\n    ignoreUncontrolled?: boolean;\n    ignoreAccessibility?: boolean;\n    cachedGrouppers: {\n        [id: string]: {\n            isActive: boolean | undefined;\n            first?: HTMLElement | null;\n        };\n    };\n    isFindAll?: boolean;\n}\n\nexport interface FindFocusableProps {\n    /**\n     * The container used for the search.\n     */\n    container: HTMLElement;\n    /**\n     * The elemet to start from.\n     */\n    currentElement?: HTMLElement;\n    /**\n     * Includes elements that can be focused programmatically.\n     */\n    includeProgrammaticallyFocusable?: boolean;\n    /**\n     * Ignore uncontrolled areas.\n     */\n    ignoreUncontrolled?: boolean;\n    /**\n     * Ignore accessibility check.\n     */\n    ignoreAccessibility?: boolean;\n    /**\n     * Take active modalizer into account when searching for elements\n     * (the elements out of active modalizer will not be returned).\n     */\n    useActiveModalizer?: boolean;\n    /**\n     * Search withing the specified modality, null for everything outside of modalizers, string within\n     * a specific id, undefined for search within the current application state.\n     */\n    modalizerId?: string | null;\n    /**\n     * If true, find previous element instead of the next one.\n     */\n    isBackward?: boolean;\n    /**\n     * @param el element visited.\n     * @returns if an element should be accepted.\n     */\n    acceptCondition?(el: HTMLElement): boolean;\n    /**\n     * A callback that will be called if an uncontrolled area is met.\n     * @param el uncontrolled element.\n     */\n    onUncontrolled?(el: HTMLElement): void;\n    /**\n     * A callback that will be called for every focusable element found during findAll().\n     * If false is returned from this callback, the search will stop.\n     */\n    onElement?: FindElementCallback;\n}\n\nexport type FindFirstProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindNextProps = Pick<\n    FindFocusableProps,\n    | \"currentElement\"\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibility\"\n    | \"onUncontrolled\"\n>;\n\nexport type FindDefaultProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindAllProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"currentElement\"\n    | \"isBackward\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"acceptCondition\"\n    | \"ignoreUncontrolled\"\n    | \"ignoreAccessibility\"\n    | \"onElement\"\n>;\n\n/**\n * A callback that is called for every found element during search. Returning false stops search.\n */\nexport type FindElementCallback = (element: HTMLElement) => boolean;\n\nexport interface FocusableAPI extends Disposable {\n    getProps(element: HTMLElement): FocusableProps;\n\n    isFocusable(\n        element: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    isVisible(element: HTMLElement): boolean;\n    isAccessible(element: HTMLElement): boolean;\n    // find* return null when there is no element and undefined when there is an uncontrolled area.\n    findFirst(options: FindFirstProps): HTMLElement | null | undefined;\n    findLast(options: FindFirstProps): HTMLElement | null | undefined;\n    findNext(options: FindNextProps): HTMLElement | null | undefined;\n    findPrev(options: FindNextProps): HTMLElement | null | undefined;\n    findDefault(options: FindDefaultProps): HTMLElement | null;\n    /**\n     * @returns All focusables in a given context that satisfy an given condition\n     */\n    findAll(options: FindAllProps): HTMLElement[];\n    findElement(options: FindFocusableProps): HTMLElement | null | undefined;\n}\n\nexport interface DummyInputManager {\n    moveOut: (backwards: boolean) => void;\n    moveOutWithDefaultAction: (backwards: boolean) => void;\n}\n\nexport interface Visibilities {\n    Invisible: 0;\n    PartiallyVisible: 1;\n    Visible: 2;\n}\nexport const Visibilities: Visibilities = {\n    Invisible: 0,\n    PartiallyVisible: 1,\n    Visible: 2,\n};\nexport type Visibility = Visibilities[keyof Visibilities];\n\nexport interface MoverElementState {\n    isCurrent: boolean | undefined; // Tri-state bool. Undefined when there is no current in the container.\n    visibility: Visibility;\n}\n\nexport interface MoverDirections {\n    Both: 0; // Default, both left/up keys move to the previous, right/down move to the next.\n    Vertical: 1; // Only up/down arrows move to the next/previous.\n    Horizontal: 2; // Only left/right arrows move to the next/previous.\n    Grid: 3; // Two-dimentional movement depending on the visual placement.\n}\nexport const MoverDirections: MoverDirections = {\n    Both: 0,\n    Vertical: 1,\n    Horizontal: 2,\n    Grid: 3,\n};\nexport type MoverDirection = MoverDirections[keyof MoverDirections];\n\nexport type NextTabbable = {\n    element: HTMLElement | null | undefined;\n    uncontrolled?: HTMLElement;\n    lastMoverOrGroupper?: Mover | Groupper;\n    outOfDOMOrder?: boolean;\n};\n\nexport interface MoverProps {\n    direction?: MoverDirection;\n    memorizeCurrent?: boolean;\n    tabbable?: boolean;\n    /**\n     * Whether to allow cyclic navigation in the mover\n     * Can only be applied if navigationType is MoverKeys.Arrows\n     *\n     * @defaultValue false\n     */\n    cyclic?: boolean;\n    /**\n     * In case we need a rich state of the elements inside a Mover,\n     * we can track it. It takes extra resourses and might affect\n     * performance when a Mover has many elements inside, so make sure\n     * you use this prop when it is really needed.\n     */\n    trackState?: boolean;\n    /**\n     * When set to Visibility.Visible or Visibility.PartiallyVisible,\n     * uses the visibility part of the trackState prop to be able to\n     * go to first/last visible element (instead of first/last focusable\n     * element in DOM) when tabbing from outside of the mover.\n     */\n    visibilityAware?: Visibility;\n    /**\n     * When true, Mover will try to locate a focusable with Focusable.isDefault\n     * property as a prioritized element to focus.\n     */\n    hasDefault?: boolean;\n    /**\n     * A value between 0 and 1 that specifies the tolerance allowed\n     * when testing for visibility.\n     *\n     * @example\n     * an element of height 100px has 10px that are above the viewport\n     * hidden by scroll. This element is a valid visible element to focus.\n     *\n     * @default 0.8\n     */\n    visibilityTolerance?: number;\n}\n\nexport type MoverEvent = TabsterEventWithDetails<MoverElementState>;\n\nexport interface Mover\n    extends TabsterPart<MoverProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    readonly visibilityTolerance: NonNullable<\n        MoverProps[\"visibilityTolerance\"]\n    >;\n    dispose(): void;\n    setCurrent(element: HTMLElement | undefined): void;\n    getCurrent(): HTMLElement | null;\n    getState(element: HTMLElement): MoverElementState | undefined;\n}\n\nexport type MoverConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: MoverProps\n) => Mover;\n\ninterface MoverAPIInternal {\n    /** @internal */\n    createMover(\n        element: HTMLElement,\n        props: MoverProps,\n        sys: SysProps | undefined\n    ): Mover;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MoverAPI extends MoverAPIInternal, Disposable {}\n\nexport interface GroupperTabbabilities {\n    Unlimited: 0;\n    Limited: 1; // The tabbability is limited to the container and explicit Enter is needed to go inside.\n    LimitedTrapFocus: 2; // The focus is limited as above, plus trapped when inside.\n}\nexport const GroupperTabbabilities: GroupperTabbabilities = {\n    Unlimited: 0,\n    Limited: 1,\n    LimitedTrapFocus: 2,\n};\nexport type GroupperTabbability =\n    GroupperTabbabilities[keyof GroupperTabbabilities];\n\nexport interface GroupperProps {\n    tabbability?: GroupperTabbability;\n    delegated?: boolean; // This allows to tweak the groupper behaviour for the cases when\n    // the groupper container is not focusable and groupper has Limited or LimitedTrapFocus\n    // tabbability. By default, the groupper will automatically become active once the focus\n    // goes to first focusable element inside the groupper during tabbing. When true, the\n    // groupper will become active only after Enter is pressed on first focusable element\n    // inside the groupper.\n}\n\nexport interface Groupper\n    extends TabsterPart<GroupperProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    dispose(): void;\n    makeTabbable(isUnlimited: boolean): void;\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined; // Tri-state boolean, undefined when parent is not active, false when parent is active.\n    setFirst(element: HTMLElement | undefined): void;\n    getFirst(orContainer: boolean): HTMLElement | undefined;\n}\n\nexport type GroupperConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: GroupperProps\n) => Groupper;\n\nexport interface GroupperAPIInternal {\n    /** @internal */\n    createGroupper(\n        element: HTMLElement,\n        props: GroupperProps,\n        sys: SysProps | undefined\n    ): Groupper;\n    /** @internal */\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        noGoUp?: boolean\n    ): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface GroupperAPI extends GroupperAPIInternal, Disposable {}\n\nexport interface GroupperAPIInternal {\n    forgetCurrentGrouppers(): void;\n}\n\nexport interface ModalizerProps {\n    id: string;\n    isOthersAccessible?: boolean;\n    isAlwaysAccessible?: boolean;\n    isNoFocusFirst?: boolean;\n    isNoFocusDefault?: boolean;\n    /** A focus trap variant, keeps focus inside the modal when tabbing */\n    isTrapped?: boolean;\n}\n\nexport type ModalizerEventName =\n    | typeof ModalizerActiveEventName\n    | typeof ModalizerInactiveEventName\n    | typeof ModalizerBeforeFocusOutEventName\n    | typeof ModalizerFocusInEventName\n    | typeof ModalizerFocusOutEventName;\n\nexport type ModalizerEventDetails = {\n    id: string;\n    element: HTMLElement;\n    eventName: ModalizerEventName;\n};\n\nexport type ModalizerEvent = TabsterEventWithDetails<ModalizerEventDetails>;\n\nexport interface Modalizer\n    extends TabsterPart<ModalizerProps>,\n        TabsterPartWithFindNextTabbable {\n    readonly userId: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    /**\n     * @returns - Whether the element is inside the modalizer\n     */\n    contains(element: HTMLElement): boolean;\n    dispose(): void;\n    isActive(): boolean;\n    makeActive(isActive: boolean): void;\n    focused(noIncrement?: boolean): number;\n    triggerFocusEvent(\n        eventName: ModalizerEventName,\n        allElements: boolean\n    ): boolean;\n}\n\nexport type ModalizerConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: ModalizerProps\n) => Modalizer;\n\nexport interface RootProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n}\n\nexport interface Root extends TabsterPart<RootProps> {\n    /**@internal*/\n    addDummyInputs(): void;\n\n    readonly uid: string;\n    dispose(): void;\n    moveOutWithDefaultAction(backwards: boolean): void;\n}\n\nexport type RootConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: RootProps\n) => Root;\n\nexport interface SysDummyInputsPositions {\n    Auto: 0; // Tabster will place dummy inputs depending on the container tag name and on the default behaviour.\n    Inside: 1; // Tabster will always place dummy inputs inside the container.\n    Outside: 2; // Tabster will always place dummy inputs outside of the container.\n}\nexport const SysDummyInputsPositions: SysDummyInputsPositions = {\n    Auto: 0,\n    Inside: 1,\n    Outside: 2,\n};\nexport type SysDummyInputsPosition =\n    SysDummyInputsPositions[keyof SysDummyInputsPositions];\n/**\n * Ability to fine-tune Tabster internal behaviour in rare cases of need.\n * Normally, should not be used. A deep understanding of the intention and the effect\n * is required.\n */\nexport interface SysProps {\n    /**\n     * Force dummy input position outside or inside of the element.\n     * By default (when undefined), the position is determined dynamically\n     * (for example inside for <li> elements and outside for <table> elements,\n     * plus a default Groupper/Mover/Modalizer implementation position).\n     * Setting to true will force the dummy inputs to be always outside of the element,\n     * setting to false will force the dummy inputs to be always inside.\n     */\n    dummyInputsPosition?: SysDummyInputsPosition;\n}\n\nexport interface GetTabsterContextOptions {\n    /**\n     * Should visit **all** element ancestors to verify if `dir='rtl'` is set\n     */\n    checkRtl?: boolean;\n}\n\nexport type TabsterContextMoverGroupper =\n    | { isMover: true; mover: Mover }\n    | { isMover: false; groupper: Groupper };\n\nexport interface TabsterContext {\n    root: Root;\n    modalizer?: Modalizer;\n    groupper?: Groupper;\n    mover?: Mover;\n    isGroupperFirst?: boolean;\n    modalizerInGroupper?: Groupper;\n    /**\n     * Whether `dir='rtl'` is set on an ancestor\n     */\n    isRtl?: boolean;\n    /**\n     * The uncontrolled container of this element (if any).\n     */\n    uncontrolled?: HTMLElement;\n    isExcludedFromMover?: boolean;\n    ignoreKeydown: (e: KeyboardEvent) => boolean;\n}\n\nexport interface RootFocusEventDetails {\n    element: HTMLElement;\n    fromAdjacent?: boolean;\n}\n\ninterface RootAPIInternal {\n    /**@internal*/\n    createRoot(\n        element: HTMLElement,\n        props: RootProps,\n        sys: SysProps | undefined\n    ): Root;\n    /**@internal*/\n    onRoot(root: Root, removed?: boolean): void;\n    /**@internal*/\n    addDummyInputs(): void;\n}\n\nexport interface RootAPI extends Disposable, RootAPIInternal {\n    eventTarget: EventTarget;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface UncontrolledAPI {}\n\ninterface ModalizerAPIInternal extends TabsterPartWithAcceptElement {\n    /** @internal */\n    activeId: string | undefined; // currently active Modalizer user id.\n    /** @internal */\n    currentIsOthersAccessible: boolean | undefined; // isOthersAccessible value of the currently active Modalizer.\n    /** @internal */\n    activeElements: WeakRef<HTMLElement>[];\n    /** @internal */\n    createModalizer(\n        element: HTMLElement,\n        props: ModalizerProps,\n        sys: SysProps | undefined\n    ): Modalizer;\n    /**\n     * Sets active modalizers.\n     * When active, everything outside of the modalizers with the specific user\n     * defined id gets `aria-hidden`.\n     *\n     * @param userId user defined identifier or undefined (if nothing is modal).\n     */\n    /** @internal */\n    setActive(modalizer: Modalizer | undefined): void;\n    /** @internal */\n    hiddenUpdate(): void;\n    /** @internal */\n    isAugmented(element: HTMLElement): boolean;\n}\n\nexport interface ModalizerAPI extends ModalizerAPIInternal, Disposable {\n    /**\n     * Activates a Modalizer and focuses the first or default element within\n     *\n     * @param elementFromModalizer An element that belongs to a Modalizer\n     * @param noFocusFirst Do not focus on the first element in the Modalizer\n     * @param noFocusDefault Do not focus the default element in the Modalizre\n     */\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean;\n}\n\nexport interface DeloserOnElement {\n    deloser: Deloser;\n}\n\nexport interface RootOnElement {\n    root: Root;\n}\n\nexport interface ModalizerOnElement {\n    modalizer: Modalizer;\n}\n\nexport interface FocusableOnElement {\n    focusable: FocusableProps;\n}\n\nexport interface MoverOnElement {\n    mover: Mover;\n}\n\nexport interface GroupperOnElement {\n    groupper: Groupper;\n}\n\nexport interface UncontrolledOnElement {\n    uncontrolled: Record<string, never>;\n}\n\nexport interface ObservedOnElement {\n    observed: ObservedElementProps;\n}\n\nexport interface OutlineOnElement {\n    outline: OutlinedElementProps;\n}\n\nexport interface SysOnElement {\n    sys: SysProps;\n}\n\nexport type TabsterAttributeProps = Partial<{\n    deloser: DeloserProps;\n    root: RootProps;\n    uncontrolled: UncontrolledOnElement[\"uncontrolled\"];\n    modalizer: ModalizerProps;\n    focusable: FocusableProps;\n    groupper: GroupperProps;\n    mover: MoverProps;\n    observed: ObservedElementProps;\n    outline: OutlinedElementProps;\n    sys: SysProps;\n}>;\n\nexport interface TabsterAttributeOnElement {\n    string: string;\n    object: TabsterAttributeProps;\n}\n\nexport interface TabsterAugmentedAttributes {\n    [name: string]: string | null;\n}\n\nexport type TabsterOnElement = Partial<\n    RootOnElement &\n        DeloserOnElement &\n        ModalizerOnElement &\n        FocusableOnElement &\n        MoverOnElement &\n        GroupperOnElement &\n        ObservedOnElement &\n        OutlineOnElement &\n        UncontrolledOnElement &\n        SysOnElement\n>;\n\nexport interface OutlineElements {\n    container: HTMLDivElement;\n    left: HTMLDivElement;\n    top: HTMLDivElement;\n    right: HTMLDivElement;\n    bottom: HTMLDivElement;\n}\n\nexport interface TabsterElementStorageEntry {\n    tabster?: TabsterOnElement;\n    attr?: TabsterAttributeOnElement;\n    aug?: TabsterAugmentedAttributes;\n}\n\nexport interface TabsterElementStorage {\n    [uid: string]: TabsterElementStorageEntry;\n}\n\nexport type DisposeFunc = () => void;\n\nexport interface InternalAPI {\n    stopObserver(): void;\n    resumeObserver(syncState: boolean): void;\n}\n\nexport interface DummyInputObserver {\n    add(dummy: HTMLElement, callback: () => void): void;\n    remove(dummy: HTMLElement): void;\n    dispose(): void;\n    domChanged?(parent: HTMLElement): void;\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void;\n}\n\ninterface TabsterCoreInternal {\n    /** @internal */\n    groupper?: GroupperAPI;\n    /** @internal */\n    mover?: MoverAPI;\n    /** @internal */\n    outline?: OutlineAPI;\n    /** @internal */\n    deloser?: DeloserAPI;\n    /** @internal */\n    modalizer?: ModalizerAPI;\n    /** @internal */\n    observedElement?: ObservedElementAPI;\n    /** @internal */\n    crossOrigin?: CrossOriginAPI;\n    /** @internal */\n    internal: InternalAPI;\n\n    /** @internal */\n    _dummyObserver: DummyInputObserver;\n\n    // The version of the tabster package this instance is on\n    /** @internal */\n    _version: string;\n\n    // No operation flag for the debugging purposes\n    /** @internal */\n    _noop: boolean;\n\n    /** @internal */\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): TabsterElementStorageEntry | undefined;\n    /** @internal */\n    getWindow: GetWindow;\n\n    /** @internal */\n    createTabster(noRefCount?: boolean): Tabster;\n    /** @internal */\n    disposeTabster(wrapper: Tabster, allInstances?: boolean): void;\n    /** @internal */\n    forceCleanup(): void;\n\n    /** @internal */\n    queueInit(callback: () => void): void;\n    /** @internal */\n    drainInitQueue(): void;\n}\n\nexport interface Tabster {\n    keyboardNavigation: KeyboardNavigationState;\n    focusedElement: FocusedElementState;\n    focusable: FocusableAPI;\n    root: RootAPI;\n    uncontrolled: UncontrolledAPI;\n\n    /** @internal */\n    core: TabsterCore;\n}\n\nexport interface TabsterCore\n    extends Pick<TabsterCoreProps, \"controlTab\" | \"rootDummyInputs\">,\n        Disposable,\n        TabsterCoreInternal,\n        Omit<Tabster, \"core\"> {}\n\nexport interface TabsterCompat {\n    attributeTransform?: <P>(old: P) => TabsterAttributeProps;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport function getTabsterOnElement(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): Types.TabsterOnElement | undefined {\n    return tabster.storageEntry(element)?.tabster;\n}\n\nexport function updateTabsterByAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    dispose?: boolean\n): void {\n    const newAttrValue =\n        dispose || tabster._noop\n            ? undefined\n            : element.getAttribute(Types.TabsterAttributeName);\n\n    let entry = tabster.storageEntry(element);\n    let newAttr: Types.TabsterAttributeOnElement | undefined;\n\n    if (newAttrValue) {\n        if (newAttrValue !== entry?.attr?.string) {\n            try {\n                const newValue = JSON.parse(\n                    newAttrValue\n                ) as Types.TabsterAttributeProps;\n\n                if (typeof newValue !== \"object\") {\n                    throw new Error(\n                        `Value is not a JSON object, got '${newAttrValue}'.`\n                    );\n                }\n\n                newAttr = {\n                    string: newAttrValue,\n                    object: newValue,\n                };\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        } else {\n            return;\n        }\n    } else if (!entry) {\n        return;\n    }\n\n    if (!entry) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        entry = tabster.storageEntry(element, true)!;\n    }\n\n    if (!entry.tabster) {\n        entry.tabster = {};\n    }\n\n    const tabsterOnElement = entry.tabster || {};\n    const oldTabsterProps = entry.attr?.object || {};\n    const newTabsterProps = newAttr?.object || {};\n\n    for (const key of Object.keys(\n        oldTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        if (!newTabsterProps[key]) {\n            if (key === \"root\") {\n                const root = tabsterOnElement[key];\n\n                if (root) {\n                    tabster.root.onRoot(root, true);\n                }\n            }\n\n            switch (key) {\n                case \"deloser\":\n                case \"root\":\n                case \"groupper\":\n                case \"modalizer\":\n                case \"mover\":\n                    // eslint-disable-next-line no-case-declarations\n                    const part = tabsterOnElement[key];\n                    if (part) {\n                        part.dispose();\n                        delete tabsterOnElement[key];\n                    }\n                    break;\n\n                case \"observed\":\n                    delete tabsterOnElement[key];\n                    if (tabster.observedElement) {\n                        tabster.observedElement.onObservedElementUpdate(\n                            element\n                        );\n                    }\n                    break;\n\n                case \"focusable\":\n                case \"outline\":\n                case \"uncontrolled\":\n                case \"sys\":\n                    delete tabsterOnElement[key];\n                    break;\n            }\n        }\n    }\n\n    for (const key of Object.keys(\n        newTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const sys = newTabsterProps.sys;\n\n        switch (key) {\n            case \"deloser\":\n                if (tabsterOnElement.deloser) {\n                    tabsterOnElement.deloser.setProps(\n                        newTabsterProps.deloser as Types.DeloserProps\n                    );\n                } else {\n                    if (tabster.deloser) {\n                        tabsterOnElement.deloser =\n                            tabster.deloser.createDeloser(\n                                element,\n                                newTabsterProps.deloser as Types.DeloserProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Deloser API used before initialization, please call `getDeloser()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"root\":\n                if (tabsterOnElement.root) {\n                    tabsterOnElement.root.setProps(\n                        newTabsterProps.root as Types.RootProps\n                    );\n                } else {\n                    tabsterOnElement.root = tabster.root.createRoot(\n                        element,\n                        newTabsterProps.root as Types.RootProps,\n                        sys\n                    );\n                }\n                tabster.root.onRoot(tabsterOnElement.root);\n                break;\n\n            case \"modalizer\":\n                if (tabsterOnElement.modalizer) {\n                    tabsterOnElement.modalizer.setProps(\n                        newTabsterProps.modalizer as Types.ModalizerProps\n                    );\n                } else {\n                    if (tabster.modalizer) {\n                        tabsterOnElement.modalizer =\n                            tabster.modalizer.createModalizer(\n                                element,\n                                newTabsterProps.modalizer as Types.ModalizerProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Modalizer API used before initialization, please call `getModalizer()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"focusable\":\n                tabsterOnElement.focusable = newTabsterProps.focusable;\n                break;\n\n            case \"groupper\":\n                if (tabsterOnElement.groupper) {\n                    tabsterOnElement.groupper.setProps(\n                        newTabsterProps.groupper as Types.GroupperProps\n                    );\n                } else {\n                    if (tabster.groupper) {\n                        tabsterOnElement.groupper =\n                            tabster.groupper.createGroupper(\n                                element,\n                                newTabsterProps.groupper as Types.GroupperProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Groupper API used before initialization, please call `getGroupper()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"mover\":\n                if (tabsterOnElement.mover) {\n                    tabsterOnElement.mover.setProps(\n                        newTabsterProps.mover as Types.MoverProps\n                    );\n                } else {\n                    if (tabster.mover) {\n                        tabsterOnElement.mover = tabster.mover.createMover(\n                            element,\n                            newTabsterProps.mover as Types.MoverProps,\n                            sys\n                        );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Mover API used before initialization, please call `getMover()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"observed\":\n                if (tabster.observedElement) {\n                    tabsterOnElement.observed = newTabsterProps.observed;\n                    tabster.observedElement.onObservedElementUpdate(element);\n                } else if (__DEV__) {\n                    console.error(\n                        \"ObservedElement API used before initialization, please call `getObservedElement()`\"\n                    );\n                }\n                break;\n\n            case \"uncontrolled\":\n                tabsterOnElement.uncontrolled = newTabsterProps.uncontrolled;\n                break;\n\n            case \"outline\":\n                if (tabster.outline) {\n                    tabsterOnElement.outline = newTabsterProps.outline;\n                } else if (__DEV__) {\n                    console.error(\n                        \"Outline API used before initialization, please call `getOutline()`\"\n                    );\n                }\n                break;\n\n            case \"sys\":\n                tabsterOnElement.sys = newTabsterProps.sys;\n                break;\n\n            default:\n                console.error(\n                    `Unknown key '${key}' in data-tabster attribute value.`\n                );\n        }\n    }\n\n    if (newAttr) {\n        entry.attr = newAttr;\n    } else {\n        if (Object.keys(tabsterOnElement).length === 0) {\n            delete entry.tabster;\n            delete entry.attr;\n        }\n        tabster.storageEntry(element, false);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { GetWindow } from \"./Types\";\n\nexport function createEventTarget(getWindow: GetWindow): EventTarget {\n    const global = getWindow() as unknown as typeof globalThis;\n\n    try {\n        if (global.EventTarget) {\n            return new global.EventTarget();\n        }\n    } catch (error) {\n        // thrown if EventTarget is not constructable or doesn't exit\n        if (!(error instanceof TypeError)) {\n            throw error;\n        }\n    }\n\n    return global.document.createElement(\"div\");\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport * as Types from \"./Types\";\nimport { GetWindow, Visibilities, Visibility } from \"./Types\";\n\ninterface HTMLElementWithBoundingRectCacheId extends HTMLElement {\n    __tabsterCacheId?: string;\n}\n\ninterface FocusedElementWithIgnoreFlag extends HTMLElement {\n    __shouldIgnoreFocus: boolean;\n}\n\nexport interface WindowWithUID extends Window {\n    __tabsterCrossOriginWindowUID?: string;\n}\n\nexport interface HTMLElementWithUID extends HTMLElement {\n    __tabsterElementUID?: string;\n}\n\nexport interface HTMLElementWithDummyContainer extends HTMLElement {\n    __tabsterDummyContainer?: WeakHTMLElement;\n}\n\nexport interface TabsterDOMRect {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\nexport interface InstanceContext {\n    elementByUId: { [uid: string]: WeakHTMLElement<HTMLElementWithUID> };\n    basics: InternalBasics;\n    WeakRef?: WeakRefConstructor;\n    containerBoundingRectCache: {\n        [id: string]: {\n            rect: TabsterDOMRect;\n            element: HTMLElementWithBoundingRectCacheId;\n        };\n    };\n    lastContainerBoundingRectCacheId: number;\n    containerBoundingRectCacheTimer?: number;\n    fakeWeakRefs: TabsterWeakRef<unknown>[];\n    fakeWeakRefsTimer?: number;\n    fakeWeakRefsStarted: boolean;\n}\n\nlet _isBrokenIE11: boolean;\n\nconst _DOMRect =\n    typeof DOMRect !== \"undefined\"\n        ? DOMRect\n        : class {\n              readonly bottom: number;\n              readonly left: number;\n              readonly right: number;\n              readonly top: number;\n\n              constructor(\n                  x?: number,\n                  y?: number,\n                  width?: number,\n                  height?: number\n              ) {\n                  this.left = x || 0;\n                  this.top = y || 0;\n                  this.right = (x || 0) + (width || 0);\n                  this.bottom = (y || 0) + (height || 0);\n              }\n          };\n\nlet _uidCounter = 0;\n\ntry {\n    // IE11 only accepts `filter` argument as a function (not object with the `acceptNode`\n    // property as the docs define). Also `entityReferenceExpansion` argument is not\n    // optional. And it throws exception when the above arguments aren't there.\n    document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT);\n    _isBrokenIE11 = false;\n} catch (e) {\n    _isBrokenIE11 = true;\n}\n\nconst _updateDummyInputsTimeout = 100;\n\ninterface WindowWithUtilsConext extends Window {\n    __tabsterInstanceContext?: InstanceContext;\n    Promise: PromiseConstructor;\n    WeakRef: WeakRefConstructor;\n}\n\nexport function getInstanceContext(getWindow: GetWindow): InstanceContext {\n    const win = getWindow() as WindowWithUtilsConext;\n\n    let ctx = win.__tabsterInstanceContext;\n\n    if (!ctx) {\n        ctx = {\n            elementByUId: {},\n            basics: {\n                Promise: win.Promise || undefined,\n                WeakRef: win.WeakRef || undefined,\n            },\n            containerBoundingRectCache: {},\n            lastContainerBoundingRectCacheId: 0,\n            fakeWeakRefs: [],\n            fakeWeakRefsStarted: false,\n        };\n\n        win.__tabsterInstanceContext = ctx;\n    }\n\n    return ctx;\n}\n\nexport function disposeInstanceContext(win: Window): void {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n\n    if (ctx) {\n        ctx.elementByUId = {};\n\n        delete ctx.WeakRef;\n\n        ctx.containerBoundingRectCache = {};\n\n        if (ctx.containerBoundingRectCacheTimer) {\n            win.clearTimeout(ctx.containerBoundingRectCacheTimer);\n        }\n\n        if (ctx.fakeWeakRefsTimer) {\n            win.clearTimeout(ctx.fakeWeakRefsTimer);\n        }\n\n        ctx.fakeWeakRefs = [];\n\n        delete (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    }\n}\n\nexport function createWeakMap<K extends object, V>(win: Window): WeakMap<K, V> {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    return new (ctx?.basics.WeakMap || WeakMap)();\n}\n\ninterface TabsterWeakRef<T> {\n    deref(): T | undefined;\n}\n\nclass FakeWeakRef<T extends HTMLElement = HTMLElement>\n    implements TabsterWeakRef<T>\n{\n    private _target: T | undefined;\n\n    constructor(target: T) {\n        this._target = target;\n    }\n\n    deref(): T | undefined {\n        return this._target;\n    }\n\n    static cleanup(fwr: FakeWeakRef, forceRemove?: boolean): boolean {\n        if (!fwr._target) {\n            return true;\n        }\n\n        if (\n            forceRemove ||\n            !documentContains(fwr._target.ownerDocument, fwr._target)\n        ) {\n            delete fwr._target;\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class WeakHTMLElement<T extends HTMLElement = HTMLElement, D = undefined>\n    implements Types.WeakHTMLElement<D>\n{\n    private _ref: TabsterWeakRef<T> | undefined;\n    private _data: D | undefined;\n\n    constructor(getWindow: GetWindow, element: T, data?: D) {\n        const context = getInstanceContext(getWindow);\n\n        let ref: TabsterWeakRef<T>;\n        if (context.WeakRef) {\n            ref = new context.WeakRef(element);\n        } else {\n            ref = new FakeWeakRef(element);\n            context.fakeWeakRefs.push(ref);\n        }\n\n        this._ref = ref;\n        this._data = data;\n    }\n\n    get(): T | undefined {\n        const ref = this._ref;\n        let element: T | undefined;\n\n        if (ref) {\n            element = ref.deref();\n\n            if (!element) {\n                delete this._ref;\n            }\n        }\n\n        return element;\n    }\n\n    getData(): D | undefined {\n        return this._data;\n    }\n}\n\nexport function cleanupFakeWeakRefs(\n    getWindow: GetWindow,\n    forceRemove?: boolean\n): void {\n    const context = getInstanceContext(getWindow);\n    context.fakeWeakRefs = context.fakeWeakRefs.filter(\n        (e) => !FakeWeakRef.cleanup(e as FakeWeakRef, forceRemove)\n    );\n}\n\nexport function startFakeWeakRefsCleanup(getWindow: GetWindow): void {\n    const context = getInstanceContext(getWindow);\n\n    if (!context.fakeWeakRefsStarted) {\n        context.fakeWeakRefsStarted = true;\n        context.WeakRef = getWeakRef(context);\n    }\n\n    if (!context.fakeWeakRefsTimer) {\n        context.fakeWeakRefsTimer = getWindow().setTimeout(() => {\n            context.fakeWeakRefsTimer = undefined;\n            cleanupFakeWeakRefs(getWindow);\n            startFakeWeakRefsCleanup(getWindow);\n        }, 2 * 60 * 1000); // 2 minutes.\n    }\n}\n\nexport function stopFakeWeakRefsCleanupAndClearStorage(\n    getWindow: GetWindow\n): void {\n    const context = getInstanceContext(getWindow);\n\n    context.fakeWeakRefsStarted = false;\n\n    if (context.fakeWeakRefsTimer) {\n        getWindow().clearTimeout(context.fakeWeakRefsTimer);\n        context.fakeWeakRefsTimer = undefined;\n        context.fakeWeakRefs = [];\n    }\n}\n\nexport function createElementTreeWalker(\n    doc: Document,\n    root: Node,\n    acceptNode: (node: Node) => number\n): TreeWalker | undefined {\n    // IE11 will throw an exception when the TreeWalker root is not an Element.\n    if (root.nodeType !== Node.ELEMENT_NODE) {\n        return undefined;\n    }\n\n    // TypeScript isn't aware of IE11 behaving badly.\n    const filter = (_isBrokenIE11\n        ? acceptNode\n        : ({ acceptNode } as NodeFilter)) as unknown as NodeFilter;\n\n    return doc.createTreeWalker(\n        root,\n        NodeFilter.SHOW_ELEMENT,\n        filter,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: We still don't want to completely break IE11, so, entityReferenceExpansion argument is not optional.\n        false /* Last argument is not optional for IE11! */\n    );\n}\n\nexport function getBoundingRect(\n    getWindow: GetWindow,\n    element: HTMLElementWithBoundingRectCacheId\n): TabsterDOMRect {\n    let cacheId = element.__tabsterCacheId;\n    const context = getInstanceContext(getWindow);\n    const cached = cacheId\n        ? context.containerBoundingRectCache[cacheId]\n        : undefined;\n\n    if (cached) {\n        return cached.rect;\n    }\n\n    const scrollingElement =\n        element.ownerDocument && element.ownerDocument.documentElement;\n\n    if (!scrollingElement) {\n        return new _DOMRect();\n    }\n\n    // A bounding rect of the top-level element contains the whole page regardless of the\n    // scrollbar. So, we improvise a little and limiting the final result...\n    let left = 0;\n    let top = 0;\n    let right = scrollingElement.clientWidth;\n    let bottom = scrollingElement.clientHeight;\n\n    if (element !== scrollingElement) {\n        const r = element.getBoundingClientRect();\n        left = Math.max(left, r.left);\n        top = Math.max(top, r.top);\n        right = Math.min(right, r.right);\n        bottom = Math.min(bottom, r.bottom);\n    }\n\n    const rect = new _DOMRect(\n        left < right ? left : -1,\n        top < bottom ? top : -1,\n        left < right ? right - left : 0,\n        top < bottom ? bottom - top : 0\n    );\n\n    if (!cacheId) {\n        cacheId = \"r-\" + ++context.lastContainerBoundingRectCacheId;\n        element.__tabsterCacheId = cacheId;\n    }\n\n    context.containerBoundingRectCache[cacheId] = {\n        rect,\n        element,\n    };\n\n    if (!context.containerBoundingRectCacheTimer) {\n        context.containerBoundingRectCacheTimer = window.setTimeout(() => {\n            context.containerBoundingRectCacheTimer = undefined;\n\n            for (const cId of Object.keys(context.containerBoundingRectCache)) {\n                delete context.containerBoundingRectCache[cId].element\n                    .__tabsterCacheId;\n            }\n\n            context.containerBoundingRectCache = {};\n        }, 50);\n    }\n\n    return rect;\n}\n\nexport function isElementVerticallyVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    tolerance: number\n): boolean {\n    const container = getScrollableContainer(element);\n    if (!container) {\n        return false;\n    }\n\n    const containerRect = getBoundingRect(getWindow, container);\n    const elementRect = element.getBoundingClientRect();\n    const intersectionTolerance = elementRect.height * (1 - tolerance);\n    const topIntersection = Math.max(0, containerRect.top - elementRect.top);\n    const bottomIntersection = Math.max(\n        0,\n        elementRect.bottom - containerRect.bottom\n    );\n    const totalIntersection = topIntersection + bottomIntersection;\n\n    return (\n        totalIntersection === 0 || totalIntersection <= intersectionTolerance\n    );\n}\n\nexport function isElementVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    gap = 0\n): Visibility {\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (\n            elementRect.left > containerRect.right ||\n            elementRect.top > containerRect.bottom ||\n            elementRect.bottom < containerRect.top ||\n            elementRect.right < containerRect.left\n        ) {\n            return Visibilities.Invisible;\n        }\n\n        if (\n            elementRect.top + gap >= containerRect.top &&\n            elementRect.top <= containerRect.bottom &&\n            elementRect.bottom >= containerRect.top &&\n            elementRect.bottom - gap <= containerRect.bottom &&\n            elementRect.left + gap >= containerRect.left &&\n            elementRect.left <= containerRect.right &&\n            elementRect.right >= containerRect.left &&\n            elementRect.right - gap <= containerRect.right\n        ) {\n            return Visibilities.Visible;\n        }\n\n        return Visibilities.PartiallyVisible;\n    }\n\n    return Visibilities.Invisible;\n}\n\nexport function scrollIntoView(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    alignToTop: boolean\n): void {\n    // Built-in DOM's scrollIntoView() is cool, but when we have nested containers,\n    // it scrolls all of them, not just the deepest one. So, trying to work it around.\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (alignToTop) {\n            container.scrollTop += elementRect.top - containerRect.top;\n        } else {\n            container.scrollTop += elementRect.bottom - containerRect.bottom;\n        }\n    }\n}\n\nexport function getScrollableContainer(\n    element: HTMLElement\n): HTMLElement | null {\n    const doc = element.ownerDocument;\n\n    if (doc) {\n        for (\n            let el: HTMLElement | null = element.parentElement;\n            el;\n            el = el.parentElement\n        ) {\n            if (\n                el.scrollWidth > el.clientWidth ||\n                el.scrollHeight > el.clientHeight\n            ) {\n                return el;\n            }\n        }\n\n        return doc.documentElement;\n    }\n\n    return null;\n}\n\nexport function makeFocusIgnored(element: HTMLElement): void {\n    (element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus = true;\n}\n\nexport function shouldIgnoreFocus(element: HTMLElement): boolean {\n    return !!(element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus;\n}\n\nexport function getUId(wnd: Window & { msCrypto?: Crypto }): string {\n    const rnd = new Uint32Array(4);\n\n    if (wnd.crypto && wnd.crypto.getRandomValues) {\n        wnd.crypto.getRandomValues(rnd);\n    } else if (wnd.msCrypto && wnd.msCrypto.getRandomValues) {\n        wnd.msCrypto.getRandomValues(rnd);\n    } else {\n        for (let i = 0; i < rnd.length; i++) {\n            rnd[i] = 0xffffffff * Math.random();\n        }\n    }\n\n    const srnd: string[] = [];\n\n    for (let i = 0; i < rnd.length; i++) {\n        srnd.push(rnd[i].toString(36));\n    }\n\n    srnd.push(\"|\");\n    srnd.push((++_uidCounter).toString(36));\n    srnd.push(\"|\");\n    srnd.push(Date.now().toString(36));\n\n    return srnd.join(\"\");\n}\n\nexport function getElementUId(\n    getWindow: GetWindow,\n    element: HTMLElementWithUID\n): string {\n    const context = getInstanceContext(getWindow);\n    let uid = element.__tabsterElementUID;\n\n    if (!uid) {\n        uid = element.__tabsterElementUID = getUId(getWindow());\n    }\n\n    if (\n        !context.elementByUId[uid] &&\n        documentContains(element.ownerDocument, element)\n    ) {\n        context.elementByUId[uid] = new WeakHTMLElement(getWindow, element);\n    }\n\n    return uid;\n}\n\nexport function getElementByUId(\n    context: InstanceContext,\n    uid: string\n): WeakHTMLElement<HTMLElementWithUID, undefined> | undefined {\n    return context.elementByUId[uid];\n}\n\nexport function getWindowUId(win: WindowWithUID): string {\n    let uid = win.__tabsterCrossOriginWindowUID;\n\n    if (!uid) {\n        uid = win.__tabsterCrossOriginWindowUID = getUId(win);\n    }\n\n    return uid;\n}\n\nexport function clearElementCache(\n    getWindow: GetWindow,\n    parent?: HTMLElement\n): void {\n    const context = getInstanceContext(getWindow);\n\n    for (const key of Object.keys(context.elementByUId)) {\n        const wel = context.elementByUId[key];\n        const el = wel && wel.get();\n\n        if (el && parent) {\n            if (!parent.contains(el)) {\n                continue;\n            }\n        }\n\n        delete context.elementByUId[key];\n    }\n}\n\n// IE11 doesn't have document.contains()...\nexport function documentContains(\n    doc: HTMLDocument | null | undefined,\n    element: HTMLElement\n): boolean {\n    return !!doc?.body?.contains(element);\n}\n\nexport function matchesSelector(\n    element: HTMLElement,\n    selector: string\n): boolean {\n    interface HTMLElementWithMatches extends HTMLElement {\n        matchesSelector?: typeof HTMLElement.prototype.matches;\n        msMatchesSelector?: typeof HTMLElement.prototype.matches;\n    }\n\n    const matches =\n        element.matches ||\n        (element as HTMLElementWithMatches).matchesSelector ||\n        (element as HTMLElementWithMatches).msMatchesSelector ||\n        element.webkitMatchesSelector;\n\n    return matches && matches.call(element, selector);\n}\n\nexport function getPromise(getWindow: GetWindow): PromiseConstructor {\n    const context = getInstanceContext(getWindow);\n    if (context.basics.Promise) {\n        return context.basics.Promise;\n    }\n\n    throw new Error(\"No Promise defined.\");\n}\n\nexport function getWeakRef(\n    context: InstanceContext\n): WeakRefConstructor | undefined {\n    return context.basics.WeakRef;\n}\n\ninterface InternalBasics {\n    Promise?: PromiseConstructor;\n    WeakRef?: WeakRefConstructor;\n    WeakMap?: WeakMapConstructor;\n}\n\nexport function setBasics(win: Window, basics: InternalBasics): void {\n    const context = getInstanceContext(() => win);\n\n    let key: keyof InternalBasics;\n\n    key = \"Promise\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakRef\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakMap\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n}\n\nlet _lastTabsterPartId = 0;\n\nexport abstract class TabsterPart<P, D = undefined>\n    implements Types.TabsterPart<P>\n{\n    protected _tabster: Types.TabsterCore;\n    protected _element: WeakHTMLElement<HTMLElement, D>;\n    protected _props: P;\n\n    readonly id: string;\n\n    constructor(tabster: Types.TabsterCore, element: HTMLElement, props: P) {\n        const getWindow = tabster.getWindow;\n        this._tabster = tabster;\n        this._element = new WeakHTMLElement(getWindow, element);\n        this._props = { ...props };\n        this.id = \"i\" + ++_lastTabsterPartId;\n    }\n\n    getElement(): HTMLElement | undefined {\n        return this._element.get();\n    }\n\n    getProps(): P {\n        return this._props;\n    }\n\n    setProps(props: P): void {\n        this._props = { ...props };\n    }\n}\n\nexport interface DummyInputProps {\n    /** The input is created to be used only once and autoremoved when focused. */\n    isPhantom?: boolean;\n    /** Whether the input is before or after the content it is guarding.  */\n    isFirst: boolean;\n}\n\nexport type DummyInputFocusCallback = (\n    dummyInput: DummyInput,\n    isBackward: boolean,\n    relatedTarget: HTMLElement | null\n) => void;\n\n/**\n * Dummy HTML elements that are used as focus sentinels for the DOM enclosed within them\n */\nexport class DummyInput {\n    private _isPhantom: DummyInputProps[\"isPhantom\"];\n    private _disposeTimer: number | undefined;\n    private _clearDisposeTimeout: (() => void) | undefined;\n\n    input: HTMLElement | undefined;\n    useDefaultAction?: boolean;\n    isFirst: DummyInputProps[\"isFirst\"];\n    isOutside: boolean;\n    /** Called when the input is focused */\n    onFocusIn?: DummyInputFocusCallback;\n    /** Called when the input is blurred */\n    onFocusOut?: DummyInputFocusCallback;\n\n    constructor(\n        getWindow: Types.GetWindow,\n        isOutside: boolean,\n        props: DummyInputProps,\n        element?: WeakHTMLElement\n    ) {\n        const win = getWindow();\n        const input = win.document.createElement(\"i\");\n\n        input.tabIndex = 0;\n        input.setAttribute(\"role\", \"none\");\n\n        input.setAttribute(Types.TabsterDummyInputAttributeName, \"\");\n        input.setAttribute(\"aria-hidden\", \"true\");\n\n        const style = input.style;\n        style.position = \"fixed\";\n        style.width = style.height = \"1px\";\n        style.opacity = \"0.001\";\n        style.zIndex = \"-1\";\n        style.setProperty(\"content-visibility\", \"hidden\");\n\n        makeFocusIgnored(input);\n\n        this.input = input;\n        this.isFirst = props.isFirst;\n        this.isOutside = isOutside;\n        this._isPhantom = props.isPhantom ?? false;\n\n        input.addEventListener(\"focusin\", this._focusIn);\n        input.addEventListener(\"focusout\", this._focusOut);\n\n        (input as HTMLElementWithDummyContainer).__tabsterDummyContainer =\n            element;\n\n        if (this._isPhantom) {\n            this._disposeTimer = win.setTimeout(() => {\n                delete this._disposeTimer;\n                this.dispose();\n            }, 0);\n\n            this._clearDisposeTimeout = () => {\n                if (this._disposeTimer) {\n                    win.clearTimeout(this._disposeTimer);\n                    delete this._disposeTimer;\n                }\n\n                delete this._clearDisposeTimeout;\n            };\n        }\n    }\n\n    dispose(): void {\n        if (this._clearDisposeTimeout) {\n            this._clearDisposeTimeout();\n        }\n\n        const input = this.input;\n\n        if (!input) {\n            return;\n        }\n\n        delete this.onFocusIn;\n        delete this.onFocusOut;\n        delete this.input;\n\n        input.removeEventListener(\"focusin\", this._focusIn);\n        input.removeEventListener(\"focusout\", this._focusOut);\n\n        delete (input as HTMLElementWithDummyContainer).__tabsterDummyContainer;\n\n        input.parentElement?.removeChild(input);\n    }\n\n    setTopLeft(top: number, left: number): void {\n        const style = this.input?.style;\n\n        if (style) {\n            style.top = `${top}px`;\n            style.left = `${left}px`;\n        }\n    }\n\n    private _isBackward(\n        isIn: boolean,\n        current: HTMLElement,\n        previous: HTMLElement | null\n    ): boolean {\n        return isIn && !previous\n            ? !this.isFirst\n            : !!(\n                  previous &&\n                  current.compareDocumentPosition(previous) &\n                      Node.DOCUMENT_POSITION_FOLLOWING\n              );\n    }\n\n    private _focusIn = (e: FocusEvent): void => {\n        const input = this.input;\n\n        if (this.onFocusIn && input) {\n            const relatedTarget =\n                DummyInputManager.getLastPhantomFrom() ||\n                (e.relatedTarget as HTMLElement | null);\n\n            this.onFocusIn(\n                this,\n                this._isBackward(true, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n\n    private _focusOut = (e: FocusEvent): void => {\n        this.useDefaultAction = false;\n\n        const input = this.input;\n\n        if (this.onFocusOut && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusOut(\n                this,\n                this._isBackward(false, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n}\n\ninterface HTMLElementWithDummyInputs extends HTMLElement {\n    __tabsterDummy?: DummyInputManagerCore;\n}\n\nexport const DummyInputManagerPriorities = {\n    Root: 1,\n    Modalizer: 2,\n    Mover: 3,\n    Groupper: 4,\n};\n\nexport class DummyInputManager {\n    private _instance?: DummyInputManagerCore;\n    private _onFocusIn?: DummyInputFocusCallback;\n    private _onFocusOut?: DummyInputFocusCallback;\n    protected _element: WeakHTMLElement;\n    private static _lastPhantomFrom: HTMLElement | undefined;\n\n    moveOut: DummyInputManagerCore[\"moveOut\"];\n    moveOutWithDefaultAction: DummyInputManagerCore[\"moveOutWithDefaultAction\"];\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        priority: number,\n        sys: Types.SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        this._element = element;\n\n        this._instance = new DummyInputManagerCore(\n            tabster,\n            element,\n            this,\n            priority,\n            sys,\n            outsideByDefault,\n            callForDefaultAction\n        );\n\n        this.moveOut = (backwards: boolean) => {\n            this._instance?.moveOut(backwards);\n        };\n\n        this.moveOutWithDefaultAction = (backwards: boolean) => {\n            this._instance?.moveOutWithDefaultAction(backwards);\n        };\n    }\n\n    protected _setHandlers(\n        onFocusIn?: DummyInputFocusCallback,\n        onFocusOut?: DummyInputFocusCallback\n    ): void {\n        this._onFocusIn = onFocusIn;\n        this._onFocusOut = onFocusOut;\n    }\n\n    getHandler(isIn: boolean): DummyInputFocusCallback | undefined {\n        return isIn ? this._onFocusIn : this._onFocusOut;\n    }\n\n    setTabbable(tabbable: boolean) {\n        this._instance?.setTabbable(this, tabbable);\n    }\n\n    dispose(): void {\n        if (this._instance) {\n            this._instance.dispose(this);\n            delete this._instance;\n        }\n\n        delete this._onFocusIn;\n        delete this._onFocusOut;\n    }\n\n    static getLastPhantomFrom(): HTMLElement | undefined {\n        const ret = DummyInputManager._lastPhantomFrom;\n        delete DummyInputManager._lastPhantomFrom;\n        return ret;\n    }\n\n    static moveWithPhantomDummy(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        moveOutside: boolean,\n        isBackward: boolean\n    ): void {\n        const dummy: DummyInput = new DummyInput(tabster.getWindow, true, {\n            isPhantom: true,\n            isFirst: true,\n        });\n\n        const input = dummy.input;\n\n        if (input) {\n            const parent = element.parentElement;\n\n            if (parent) {\n                let insertBefore = (\n                    (moveOutside && !isBackward) || (!moveOutside && isBackward)\n                        ? element.nextElementSibling\n                        : element\n                ) as HTMLElementWithDummyContainer | null;\n\n                if (insertBefore) {\n                    if (isBackward) {\n                        const beforeBefore =\n                            insertBefore.previousElementSibling as HTMLElementWithDummyContainer | null;\n\n                        if (\n                            beforeBefore &&\n                            beforeBefore.__tabsterDummyContainer\n                        ) {\n                            insertBefore = beforeBefore;\n                        }\n                    } else if (insertBefore.__tabsterDummyContainer) {\n                        insertBefore =\n                            insertBefore.nextElementSibling as HTMLElementWithDummyContainer | null;\n                    }\n                }\n\n                parent.insertBefore(input, insertBefore);\n\n                DummyInputManager._lastPhantomFrom = element;\n\n                tabster.getWindow().setTimeout(() => {\n                    delete DummyInputManager._lastPhantomFrom;\n                }, 0);\n\n                nativeFocus(input);\n            }\n        }\n    }\n}\n\ninterface DummyInputWrapper {\n    manager: DummyInputManager;\n    priority: number;\n    tabbable: boolean;\n}\n\nfunction setDummyInputDebugValue(\n    dummy: DummyInput,\n    wrappers: DummyInputWrapper[]\n): void {\n    const what: Record<number, string> = {\n        1: \"Root\",\n        2: \"Modalizer\",\n        3: \"Mover\",\n        4: \"Groupper\",\n    };\n\n    dummy.input?.setAttribute(\n        Types.TabsterDummyInputAttributeName,\n        [\n            `isFirst=${dummy.isFirst}`,\n            `isOutside=${dummy.isOutside}`,\n            ...wrappers.map(\n                (w) => `(${what[w.priority]}, tabbable=${w.tabbable})`\n            ),\n        ].join(\", \")\n    );\n}\n\nexport class DummyInputObserver implements Types.DummyInputObserver {\n    private _win?: GetWindow;\n    private _updateQueue: Set<\n        (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    > = new Set();\n    private _updateTimer?: number;\n    private _lastUpdateQueueTime = 0;\n    private _changedParents: WeakSet<HTMLElement> = new WeakSet();\n    private _updateDummyInputsTimer?: number;\n    private _dummies: Map<HTMLElement, () => void> = new Map();\n    domChanged?(parent: HTMLElement): void;\n\n    constructor(win: GetWindow) {\n        this._win = win;\n    }\n\n    add(dummy: HTMLElement, callback: () => void): void {\n        this._dummies.set(dummy, callback);\n        this.domChanged = this._domChanged;\n    }\n\n    remove(dummy: HTMLElement): void {\n        const dummyInputElements = this._dummies;\n        dummyInputElements.delete(dummy);\n\n        if (dummyInputElements.size === 0) {\n            delete this.domChanged;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win?.();\n\n        if (this._updateTimer) {\n            win?.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        if (this._updateDummyInputsTimer) {\n            win?.clearTimeout(this._updateDummyInputsTimer);\n            delete this._updateDummyInputsTimer;\n        }\n\n        this._changedParents = new WeakSet();\n        this._dummies.clear();\n\n        delete this._win;\n    }\n\n    private _domChanged = (parent: HTMLElement): void => {\n        if (this._changedParents.has(parent)) {\n            return;\n        }\n\n        this._changedParents.add(parent);\n\n        if (this._updateDummyInputsTimer) {\n            return;\n        }\n\n        this._updateDummyInputsTimer = this._win?.().setTimeout(() => {\n            delete this._updateDummyInputsTimer;\n\n            for (const [dummy, callback] of this._dummies) {\n                const dummyParent = dummy.parentElement;\n\n                if (!dummyParent || this._changedParents.has(dummyParent)) {\n                    callback();\n                }\n            }\n\n            this._changedParents = new WeakSet();\n        }, _updateDummyInputsTimeout);\n    };\n\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void {\n        if (!this._win) {\n            // As this is a public method, we make sure that it has no effect when\n            // called after dispose().\n            return;\n        }\n\n        this._updateQueue.add(compute);\n\n        this._lastUpdateQueueTime = Date.now();\n\n        this._scheduledUpdatePositions();\n    }\n\n    private _scheduledUpdatePositions(): void {\n        if (this._updateTimer) {\n            return;\n        }\n\n        this._updateTimer = this._win?.().setTimeout(() => {\n            delete this._updateTimer;\n\n            // updatePositions() might be called quite a lot during the scrolling.\n            // So, instead of clearing the timeout and scheduling a new one, we\n            // check if enough time has passed since the last updatePositions() call\n            // and only schedule a new one if not.\n            // At maximum, we will update dummy inputs positions\n            // _updateDummyInputsTimeout * 2 after the last updatePositions() call.\n            if (\n                this._lastUpdateQueueTime + _updateDummyInputsTimeout <=\n                Date.now()\n            ) {\n                // A cache for current bulk of updates to reduce getComputedStyle() calls.\n                const scrollTopLeftCache = new Map<\n                    HTMLElement,\n                    { scrollTop: number; scrollLeft: number } | null\n                >();\n\n                const setTopLeftCallbacks: (() => void)[] = [];\n\n                for (const compute of this._updateQueue) {\n                    setTopLeftCallbacks.push(compute(scrollTopLeftCache));\n                }\n\n                this._updateQueue.clear();\n\n                // We're splitting the computation of offsets and setting them to avoid extra\n                // reflows.\n                for (const setTopLeft of setTopLeftCallbacks) {\n                    setTopLeft();\n                }\n\n                // Explicitly clear to not hold references till the next garbage collection.\n                scrollTopLeftCache.clear();\n            } else {\n                this._scheduledUpdatePositions();\n            }\n        }, _updateDummyInputsTimeout);\n    }\n}\n\n/**\n * Parent class that encapsulates the behaviour of dummy inputs (focus sentinels)\n */\nclass DummyInputManagerCore {\n    private _tabster: Types.TabsterCore;\n    private _addTimer: number | undefined;\n    private _getWindow: Types.GetWindow;\n    private _wrappers: DummyInputWrapper[] = [];\n    private _element: WeakHTMLElement | undefined;\n    private _isOutside = false;\n    private _firstDummy: DummyInput | undefined;\n    private _lastDummy: DummyInput | undefined;\n    private _transformElements: Set<HTMLElement> = new Set();\n    private _callForDefaultAction: boolean | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        manager: DummyInputManager,\n        priority: number,\n        sys: Types.SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        const el = element.get() as HTMLElementWithDummyInputs;\n\n        if (!el) {\n            throw new Error(\"No element\");\n        }\n\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._callForDefaultAction = callForDefaultAction;\n\n        const instance = el.__tabsterDummy;\n\n        (instance || this)._wrappers.push({\n            manager,\n            priority,\n            tabbable: true,\n        });\n\n        if (instance) {\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(\n                        this._firstDummy,\n                        instance._wrappers\n                    );\n                this._lastDummy &&\n                    setDummyInputDebugValue(\n                        this._lastDummy,\n                        instance._wrappers\n                    );\n            }\n\n            return instance;\n        }\n\n        el.__tabsterDummy = this;\n\n        // Some elements allow only specific types of direct descendants and we need to\n        // put our dummy inputs inside or outside of the element accordingly.\n        const forcedDummyPosition = sys?.dummyInputsPosition;\n        const tagName = el.tagName;\n        this._isOutside = !forcedDummyPosition\n            ? (outsideByDefault ||\n                  tagName === \"UL\" ||\n                  tagName === \"OL\" ||\n                  tagName === \"TABLE\") &&\n              !(tagName === \"LI\" || tagName === \"TD\" || tagName === \"TH\")\n            : forcedDummyPosition === Types.SysDummyInputsPositions.Outside;\n\n        this._firstDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: true,\n            },\n            element\n        );\n\n        this._lastDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: false,\n            },\n            element\n        );\n\n        // We will be checking dummy input parents to see if their child list have changed.\n        // So, it is enough to have just one of the inputs observed, because\n        // both dummy inputs always have the same parent.\n        const dummyElement = this._firstDummy.input;\n        dummyElement &&\n            tabster._dummyObserver.add(dummyElement, this._addDummyInputs);\n\n        this._firstDummy.onFocusIn = this._onFocusIn;\n        this._firstDummy.onFocusOut = this._onFocusOut;\n        this._lastDummy.onFocusIn = this._onFocusIn;\n        this._lastDummy.onFocusOut = this._onFocusOut;\n\n        this._element = element;\n        this._addDummyInputs();\n    }\n\n    dispose(manager: DummyInputManager, force?: boolean): void {\n        const wrappers = (this._wrappers = this._wrappers.filter(\n            (w) => w.manager !== manager && !force\n        ));\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, wrappers);\n        }\n\n        if (wrappers.length === 0) {\n            delete (this._element?.get() as HTMLElementWithDummyInputs)\n                .__tabsterDummy;\n\n            for (const el of this._transformElements) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n            this._transformElements.clear();\n\n            const win = this._getWindow();\n\n            if (this._addTimer) {\n                win.clearTimeout(this._addTimer);\n                delete this._addTimer;\n            }\n\n            const dummyElement = this._firstDummy?.input;\n            dummyElement && this._tabster._dummyObserver.remove(dummyElement);\n\n            this._firstDummy?.dispose();\n            this._lastDummy?.dispose();\n        }\n    }\n\n    private _onFocus(\n        isIn: boolean,\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void {\n        const wrapper = this._getCurrent();\n\n        if (\n            wrapper &&\n            (!dummyInput.useDefaultAction || this._callForDefaultAction)\n        ) {\n            wrapper.manager.getHandler(isIn)?.(\n                dummyInput,\n                isBackward,\n                relatedTarget\n            );\n        }\n    }\n\n    private _onFocusIn = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(true, dummyInput, isBackward, relatedTarget);\n    };\n\n    private _onFocusOut = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(false, dummyInput, isBackward, relatedTarget);\n    };\n\n    moveOut = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    firstInput.tabIndex = 0;\n                    toFocus = firstInput;\n                } else {\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepares to move focus out of the given element by focusing\n     * one of the dummy inputs and setting the `useDefaultAction` flag\n     * @param backwards focus moving to an element behind the given element\n     */\n    moveOutWithDefaultAction = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    if (\n                        !first.isOutside &&\n                        this._tabster.focusable.isFocusable(\n                            element,\n                            true,\n                            true,\n                            true\n                        )\n                    ) {\n                        toFocus = element;\n                    } else {\n                        first.useDefaultAction = true;\n                        firstInput.tabIndex = 0;\n                        toFocus = firstInput;\n                    }\n                } else {\n                    last.useDefaultAction = true;\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    setTabbable = (manager: DummyInputManager, tabbable: boolean) => {\n        for (const w of this._wrappers) {\n            if (w.manager === manager) {\n                w.tabbable = tabbable;\n                break;\n            }\n        }\n\n        const wrapper = this._getCurrent();\n\n        if (wrapper) {\n            const tabIndex = wrapper.tabbable ? 0 : -1;\n\n            let input = this._firstDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n\n            input = this._lastDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n        }\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, this._wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, this._wrappers);\n        }\n    };\n\n    private _getCurrent(): DummyInputWrapper | undefined {\n        this._wrappers.sort((a, b) => {\n            if (a.tabbable !== b.tabbable) {\n                return a.tabbable ? -1 : 1;\n            }\n\n            return a.priority - b.priority;\n        });\n\n        return this._wrappers[0];\n    }\n\n    /**\n     * Adds dummy inputs as the first and last child of the given element\n     * Called each time the children under the element is mutated\n     */\n    private _addDummyInputs = () => {\n        if (this._addTimer) {\n            return;\n        }\n\n        this._addTimer = this._getWindow().setTimeout(() => {\n            delete this._addTimer;\n\n            const element = this._element?.get();\n            const dif = this._firstDummy?.input;\n            const dil = this._lastDummy?.input;\n\n            if (!element || !dif || !dil) {\n                return;\n            }\n\n            if (this._isOutside) {\n                const elementParent = element.parentElement;\n\n                if (elementParent) {\n                    const nextSibling = element.nextElementSibling;\n\n                    if (nextSibling !== dil) {\n                        elementParent.insertBefore(dil, nextSibling);\n                    }\n\n                    if (element.previousElementSibling !== dif) {\n                        elementParent.insertBefore(dif, element);\n                    }\n                }\n            } else {\n                if (element.lastElementChild !== dil) {\n                    element.appendChild(dil);\n                }\n\n                const firstElementChild = element.firstElementChild;\n\n                if (firstElementChild && firstElementChild !== dif) {\n                    element.insertBefore(dif, firstElementChild);\n                }\n            }\n\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(this._firstDummy, this._wrappers);\n                this._lastDummy &&\n                    setDummyInputDebugValue(this._lastDummy, this._wrappers);\n            }\n\n            this._addTransformOffsets();\n        }, 0);\n    };\n\n    private _addTransformOffsets = (): void => {\n        this._tabster._dummyObserver.updatePositions(\n            this._computeTransformOffsets\n        );\n    };\n\n    private _computeTransformOffsets = (\n        scrollTopLeftCache: Map<\n            HTMLElement,\n            { scrollTop: number; scrollLeft: number } | null\n        >\n    ): (() => void) => {\n        const from = this._firstDummy?.input || this._lastDummy?.input;\n        const transformElements = this._transformElements;\n        const newTransformElements: typeof transformElements = new Set();\n        let scrollTop = 0;\n        let scrollLeft = 0;\n\n        const win = this._getWindow();\n\n        for (\n            let element: HTMLElement | undefined | null = from;\n            element;\n            element = element.parentElement\n        ) {\n            let scrollTopLeft = scrollTopLeftCache.get(element);\n\n            // getComputedStyle() and element.scrollLeft/Top() cause style recalculation,\n            // so we cache the result across all elements in the current bulk.\n            if (scrollTopLeft === undefined) {\n                const transform = win.getComputedStyle(element).transform;\n\n                if (transform && transform !== \"none\") {\n                    scrollTopLeft = {\n                        scrollTop: element.scrollTop,\n                        scrollLeft: element.scrollLeft,\n                    };\n                }\n\n                scrollTopLeftCache.set(element, scrollTopLeft || null);\n            }\n\n            if (scrollTopLeft) {\n                newTransformElements.add(element);\n\n                if (!transformElements.has(element)) {\n                    element.addEventListener(\n                        \"scroll\",\n                        this._addTransformOffsets\n                    );\n                }\n\n                scrollTop += scrollTopLeft.scrollTop;\n                scrollLeft += scrollTopLeft.scrollLeft;\n            }\n        }\n\n        for (const el of transformElements) {\n            if (!newTransformElements.has(el)) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n        }\n\n        this._transformElements = newTransformElements;\n\n        return () => {\n            this._firstDummy?.setTopLeft(scrollTop, scrollLeft);\n            this._lastDummy?.setTopLeft(scrollTop, scrollLeft);\n        };\n    };\n}\n\nexport function getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (let i = container.lastElementChild; i; i = i.lastElementChild) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport function getAdjacentElement(\n    from: HTMLElement,\n    prev?: boolean\n): HTMLElement | undefined {\n    let cur: HTMLElement | null = from;\n    let adjacent: HTMLElement | null = null;\n\n    while (cur && !adjacent) {\n        adjacent = (\n            prev ? cur.previousElementSibling : cur.nextElementSibling\n        ) as HTMLElement | null;\n        cur = cur.parentElement;\n    }\n\n    return adjacent || undefined;\n}\n\nexport function triggerEvent<D>(\n    target: HTMLElement | EventTarget,\n    name: string,\n    details: D\n): boolean {\n    const event = document.createEvent(\n        \"HTMLEvents\"\n    ) as Types.TabsterEventWithDetails<D>;\n\n    event.initEvent(name, true, true);\n\n    event.details = details;\n\n    target.dispatchEvent(event);\n\n    return !event.defaultPrevented;\n}\n\nexport function augmentAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    name: string,\n    value?: string | null // Restore original value when undefined.\n): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entry = tabster.storageEntry(element, true)!;\n    let ret = false;\n\n    if (!entry.aug) {\n        if (value === undefined) {\n            return ret;\n        }\n\n        entry.aug = {};\n    }\n\n    if (value === undefined) {\n        if (name in entry.aug) {\n            const origVal = entry.aug[name];\n\n            delete entry.aug[name];\n\n            if (origVal === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, origVal);\n            }\n\n            ret = true;\n        }\n    } else {\n        let origValue: string | null | undefined;\n\n        if (!(name in entry.aug)) {\n            origValue = element.getAttribute(name);\n        }\n\n        if (origValue !== undefined && origValue !== value) {\n            entry.aug[name] = origValue;\n\n            if (value === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, value);\n            }\n\n            ret = true;\n        }\n    }\n\n    if (value === undefined && Object.keys(entry.aug).length === 0) {\n        delete entry.aug;\n        tabster.storageEntry(element, false);\n    }\n\n    return ret;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps\n): Types.TabsterDOMAttribute;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain: true\n): string;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain?: true\n): Types.TabsterDOMAttribute | string {\n    const attr = JSON.stringify(props);\n\n    if (plain === true) {\n        return attr;\n    }\n\n    return {\n        [Types.TabsterAttributeName]: attr,\n    };\n}\n\n/**\n * Updates Tabster props object with new props.\n * @param element an element to set data-tabster attribute on.\n * @param props current Tabster props to update.\n * @param newProps new Tabster props to add.\n *  When the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function mergeTabsterProps(\n    props: Types.TabsterAttributeProps,\n    newProps: Types.TabsterAttributeProps\n): void {\n    for (const key of Object.keys(\n        newProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const value = newProps[key];\n\n        if (value) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            props[key] = value as any;\n        } else {\n            delete props[key];\n        }\n    }\n}\n\n/**\n * Sets or updates Tabster attribute of the element.\n * @param element an element to set data-tabster attribute on.\n * @param newProps new Tabster props to set.\n * @param update if true, newProps will be merged with the existing props.\n *  When true and the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function setTabsterAttribute(\n    element: HTMLElement,\n    newProps: Types.TabsterAttributeProps,\n    update?: boolean\n): void {\n    let props: Types.TabsterAttributeProps | undefined;\n\n    if (update) {\n        const attr = element.getAttribute(Types.TabsterAttributeName);\n\n        if (attr) {\n            try {\n                props = JSON.parse(attr);\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        }\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    mergeTabsterProps(props, newProps);\n\n    if (Object.keys(props).length > 0) {\n        element.setAttribute(\n            Types.TabsterAttributeName,\n            getTabsterAttribute(props, true)\n        );\n    } else {\n        element.removeAttribute(Types.TabsterAttributeName);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { createEventTarget } from \"./EventTarget\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { setTabsterAttribute } from \"./AttributeHelpers\";\n\nexport interface WindowWithTabsterInstance extends Window {\n    __tabsterInstance?: Types.TabsterCore;\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    id?: string\n) {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-root\");\n            } else {\n                element.style.setProperty(\"--tabster-root\", id + \",\");\n            }\n        }\n    }\n}\n\nclass RootDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _setFocused: (focused: boolean, fromAdjacent?: boolean) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        setFocused: (focused: boolean, fromAdjacent?: boolean) => void,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Root,\n            sys,\n            undefined,\n            true\n        );\n\n        this._setHandlers(this._onDummyInputFocus);\n\n        this._tabster = tabster;\n        this._setFocused = setFocused;\n    }\n\n    private _onDummyInputFocus = (dummyInput: DummyInput): void => {\n        if (dummyInput.useDefaultAction) {\n            // When we've reached the last focusable element, we want to let the browser\n            // to move the focus outside of the page. In order to do that we're synchronously\n            // calling focus() of the dummy input from the Tab key handler and allowing\n            // the default action to move the focus out.\n            this._setFocused(false, true);\n        } else {\n            // The only way a dummy input gets focused is during the keyboard navigation.\n            this._tabster.keyboardNavigation.setNavigatingWithKeyboard(true);\n\n            const element = this._element.get();\n\n            if (element) {\n                this._setFocused(true, true);\n\n                const toFocus =\n                    this._tabster.focusedElement.getFirstOrLastTabbable(\n                        dummyInput.isFirst,\n                        { container: element, ignoreAccessibility: true }\n                    );\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                    return;\n                }\n            }\n\n            dummyInput.input?.blur();\n        }\n    };\n}\n\nexport class Root\n    extends TabsterPart<Types.RootProps, undefined>\n    implements Types.Root\n{\n    readonly uid: string;\n\n    private _dummyManager?: RootDummyManager;\n    private _sys?: Types.SysProps;\n    private _isFocused = false;\n    private _setFocusedTimer: number | undefined;\n    private _setTabbableTimer: number | undefined;\n    private _onDispose: (root: Root) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (root: Root) => void,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._onDispose = onDispose;\n\n        const win = tabster.getWindow;\n        this.uid = getElementUId(win, element);\n\n        this._sys = sys;\n\n        if (tabster.controlTab || tabster.rootDummyInputs) {\n            this.addDummyInputs();\n        }\n\n        tabster.focusedElement.subscribe(this._onFocus);\n\n        this._add();\n    }\n\n    addDummyInputs(): void {\n        if (!this._dummyManager) {\n            this._dummyManager = new RootDummyManager(\n                this._tabster,\n                this._element,\n                this._setFocused,\n                this._sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const win = this._tabster.getWindow();\n\n        if (this._setFocusedTimer) {\n            win.clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._setTabbableTimer) {\n            win.clearTimeout(this._setTabbableTimer);\n            delete this._setTabbableTimer;\n        }\n\n        this._dummyManager?.dispose();\n        this._remove();\n    }\n\n    moveOutWithDefaultAction(isBackward: boolean) {\n        const dummyManager = this._dummyManager;\n\n        if (dummyManager) {\n            dummyManager.moveOutWithDefaultAction(isBackward);\n        } else {\n            const el = this.getElement();\n\n            if (el) {\n                RootDummyManager.moveWithPhantomDummy(\n                    this._tabster,\n                    el,\n                    true,\n                    isBackward\n                );\n            }\n        }\n    }\n\n    private _setFocused = (\n        hasFocused: boolean,\n        fromAdjacent?: boolean\n    ): void => {\n        if (this._setFocusedTimer) {\n            this._tabster.getWindow().clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._isFocused === hasFocused) {\n            return;\n        }\n\n        const element = this._element.get();\n\n        if (element) {\n            if (hasFocused) {\n                this._isFocused = true;\n                triggerEvent<Types.RootFocusEventDetails>(\n                    this._tabster.root.eventTarget,\n                    \"focus\",\n                    { element, fromAdjacent }\n                );\n            } else {\n                this._setFocusedTimer = this._tabster\n                    .getWindow()\n                    .setTimeout(() => {\n                        delete this._setFocusedTimer;\n                        this._isFocused = false;\n                        triggerEvent<Types.RootFocusEventDetails>(\n                            this._tabster.root.eventTarget,\n                            \"blur\",\n                            { element, fromAdjacent }\n                        );\n                    }, 0);\n            }\n        }\n    };\n\n    private _onFocus = (e: HTMLElement | undefined) => {\n        const win = this._tabster.getWindow();\n\n        if (this._setTabbableTimer) {\n            win.clearTimeout(this._setTabbableTimer);\n            delete this._setTabbableTimer;\n        }\n\n        if (e) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, e);\n\n            if (ctx) {\n                this._setFocused(ctx.root.getElement() === this._element.get());\n            }\n\n            if (!ctx || ctx.uncontrolled || this._tabster.rootDummyInputs) {\n                this._dummyManager?.setTabbable(false);\n                return;\n            }\n        } else {\n            this._setFocused(false);\n        }\n\n        this._setTabbableTimer = win.setTimeout(() => {\n            delete this._setTabbableTimer;\n            this._dummyManager?.setTabbable(true);\n        }, 0);\n    };\n\n    private _add(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, false, this.uid);\n        }\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRootProps(props: Types.RootProps): void {\n    // TODO: Implement validation.\n}\n\nexport class RootAPI implements Types.RootAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _autoRoot: Types.RootProps | undefined;\n    private _autoRootWaiting = false;\n    private _roots: Record<string, Types.Root> = {};\n    private _forceDummy = false;\n    rootById: { [id: string]: Types.Root } = {};\n    eventTarget: EventTarget;\n\n    constructor(tabster: Types.TabsterCore, autoRoot?: Types.RootProps) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._autoRoot = autoRoot;\n        this.eventTarget = createEventTarget(this._win);\n\n        tabster.queueInit(() => {\n            if (this._autoRoot) {\n                this._autoRootCreate();\n            }\n        });\n    }\n\n    private _autoRootCreate = (): Types.Root | undefined => {\n        const doc = this._win().document;\n        const body = doc.body;\n\n        if (body) {\n            this._autoRootUnwait(doc);\n\n            const props = this._autoRoot;\n\n            if (props) {\n                setTabsterAttribute(body, { root: props }, true);\n                updateTabsterByAttribute(this._tabster, body);\n                return getTabsterOnElement(this._tabster, body)?.root;\n            }\n        } else if (!this._autoRootWaiting) {\n            this._autoRootWaiting = true;\n            doc.addEventListener(\"readystatechange\", this._autoRootCreate);\n        }\n\n        return undefined;\n    };\n\n    private _autoRootUnwait(doc: Document): void {\n        doc.removeEventListener(\"readystatechange\", this._autoRootCreate);\n        this._autoRootWaiting = false;\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        this._autoRootUnwait(win.document);\n        delete this._autoRoot;\n\n        Object.keys(this._roots).forEach((rootId) => {\n            if (this._roots[rootId]) {\n                this._roots[rootId].dispose();\n                delete this._roots[rootId];\n            }\n        });\n\n        this.rootById = {};\n    }\n\n    createRoot(\n        element: HTMLElement,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ): Types.Root {\n        if (__DEV__) {\n            validateRootProps(props);\n        }\n\n        const newRoot = new Root(\n            this._tabster,\n            element,\n            this._onRootDispose,\n            props,\n            sys\n        ) as Types.Root;\n\n        this._roots[newRoot.id] = newRoot;\n\n        if (this._forceDummy) {\n            newRoot.addDummyInputs();\n        }\n\n        return newRoot;\n    }\n\n    addDummyInputs(): void {\n        this._forceDummy = true;\n\n        const roots = this._roots;\n\n        for (const id of Object.keys(roots)) {\n            roots[id].addDummyInputs();\n        }\n    }\n\n    static getRootByUId(\n        getWindow: Types.GetWindow,\n        id: string\n    ): Types.Root | undefined {\n        const tabster = (getWindow() as WindowWithTabsterInstance)\n            .__tabsterInstance;\n        return tabster && (tabster.root as RootAPI).rootById[id];\n    }\n\n    /**\n     * Fetches the tabster context for an element walking up its ancestors\n     *\n     * @param tabster Tabster instance\n     * @param element The element the tabster context should represent\n     * @param options Additional options\n     * @returns undefined if the element is not a child of a tabster root, otherwise all applicable tabster behaviours and configurations\n     */\n    static getTabsterContext(\n        tabster: Types.TabsterCore,\n        element: Node,\n        options: Types.GetTabsterContextOptions = {}\n    ): Types.TabsterContext | undefined {\n        if (!element.ownerDocument) {\n            return undefined;\n        }\n\n        // Normally, the initialization starts on the next tick after the tabster\n        // instance creation. However, if the application starts using it before\n        // the next tick, we need to make sure the initialization is done.\n        tabster.drainInitQueue();\n\n        const checkRtl = options.checkRtl;\n        let root: Types.Root | undefined;\n        let modalizer: Types.Modalizer | undefined;\n        let groupper: Types.Groupper | undefined;\n        let mover: Types.Mover | undefined;\n        let isExcludedFromMover = false;\n        let isGroupperFirst: boolean | undefined;\n        let modalizerInGroupper: Types.Groupper | undefined;\n        let isRtl: boolean | undefined;\n        let uncontrolled: HTMLElement | undefined;\n        let curElement: Node | null = element;\n        const ignoreKeydown: Types.FocusableProps[\"ignoreKeydown\"] = {};\n\n        while (curElement && (!root || checkRtl)) {\n            const tabsterOnElement = getTabsterOnElement(\n                tabster,\n                curElement as HTMLElement\n            );\n\n            if (checkRtl && isRtl === undefined) {\n                const dir = (curElement as HTMLElement).dir;\n\n                if (dir) {\n                    isRtl = dir.toLowerCase() === \"rtl\";\n                }\n            }\n\n            if (!tabsterOnElement) {\n                curElement = curElement.parentElement;\n                continue;\n            }\n\n            const tagName = (curElement as HTMLElement).tagName;\n\n            if (\n                tabsterOnElement.uncontrolled ||\n                tagName === \"IFRAME\" ||\n                tagName === \"WEBVIEW\"\n            ) {\n                uncontrolled = curElement as HTMLElement;\n            }\n\n            if (\n                !mover &&\n                tabsterOnElement.focusable?.excludeFromMover &&\n                !groupper\n            ) {\n                isExcludedFromMover = true;\n            }\n\n            const curModalizer = tabsterOnElement.modalizer;\n            const curGroupper = tabsterOnElement.groupper;\n            const curMover = tabsterOnElement.mover;\n\n            if (!modalizer && curModalizer) {\n                modalizer = curModalizer;\n            }\n\n            if (!groupper && curGroupper && (!modalizer || curModalizer)) {\n                if (modalizer) {\n                    // Modalizer dominates the groupper when they are on the same node and the groupper is active.\n                    if (\n                        !curGroupper.isActive() &&\n                        curGroupper.getProps().tabbability &&\n                        modalizer.userId !== tabster.modalizer?.activeId\n                    ) {\n                        modalizer = undefined;\n                        groupper = curGroupper;\n                    }\n\n                    modalizerInGroupper = curGroupper;\n                } else {\n                    groupper = curGroupper;\n                }\n            }\n\n            if (\n                !mover &&\n                curMover &&\n                (!modalizer || curModalizer) &&\n                (!curGroupper || curElement !== element)\n            ) {\n                mover = curMover;\n                isGroupperFirst = !!groupper && groupper !== curGroupper;\n            }\n\n            if (tabsterOnElement.root) {\n                root = tabsterOnElement.root;\n            }\n\n            if (tabsterOnElement.focusable?.ignoreKeydown) {\n                Object.assign(\n                    ignoreKeydown,\n                    tabsterOnElement.focusable.ignoreKeydown\n                );\n            }\n\n            curElement = curElement.parentElement;\n        }\n\n        // No root element could be found, try to get an auto root\n        if (!root) {\n            const rootAPI = tabster.root as RootAPI;\n            const autoRoot = rootAPI._autoRoot;\n\n            if (autoRoot) {\n                if (element.ownerDocument?.body) {\n                    root = rootAPI._autoRootCreate();\n                }\n            }\n        }\n\n        if (groupper && !mover) {\n            isGroupperFirst = true;\n        }\n\n        if (__DEV__ && !root) {\n            if (modalizer || groupper || mover) {\n                console.error(\n                    \"Tabster Root is required for Mover, Groupper and Modalizer to work.\"\n                );\n            }\n        }\n\n        const shouldIgnoreKeydown = (event: KeyboardEvent) =>\n            !!ignoreKeydown[event.key as \"Tab\"];\n\n        return root\n            ? {\n                  root,\n                  modalizer,\n                  groupper,\n                  mover,\n                  isGroupperFirst,\n                  modalizerInGroupper,\n                  isRtl: checkRtl ? !!isRtl : undefined,\n                  uncontrolled,\n                  isExcludedFromMover,\n                  ignoreKeydown: shouldIgnoreKeydown,\n              }\n            : undefined;\n    }\n\n    static getRoot(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Root | undefined {\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = el.parentElement\n        ) {\n            const root = getTabsterOnElement(tabster, el)?.root;\n\n            if (root) {\n                return root;\n            }\n        }\n\n        return undefined;\n    }\n\n    onRoot(root: Types.Root, removed?: boolean): void {\n        if (removed) {\n            delete this.rootById[root.uid];\n        } else {\n            this.rootById[root.uid] = root;\n        }\n    }\n\n    private _onRootDispose = (root: Root) => {\n        delete this._roots[root.id];\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nconst _containerHistoryLength = 10;\n\nexport abstract class DeloserItemBase<C> {\n    abstract resetFocus(): Promise<boolean>;\n    abstract belongsTo(deloser: C): boolean;\n}\n\nexport class DeloserItem extends DeloserItemBase<Types.Deloser> {\n    readonly uid: string;\n    private _tabster: Types.TabsterCore;\n    private _deloser: Types.Deloser;\n\n    constructor(tabster: Types.TabsterCore, deloser: Types.Deloser) {\n        super();\n        this.uid = deloser.uid;\n        this._tabster = tabster;\n        this._deloser = deloser;\n    }\n\n    belongsTo(deloser: Types.Deloser): boolean {\n        return deloser === this._deloser;\n    }\n\n    unshift(element: HTMLElement): void {\n        this._deloser.unshift(element);\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        const available = this._deloser.findAvailable();\n        return available\n            ? this._tabster.focusedElement.focus(available)\n            : false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const getWindow = this._tabster.getWindow;\n        return getPromise(getWindow).resolve(this._deloser.resetFocus());\n    }\n}\n\nexport abstract class DeloserHistoryByRootBase<\n    I,\n    D extends DeloserItemBase<I>\n> {\n    protected _tabster: Types.TabsterCore;\n    protected _history: D[] = [];\n    readonly rootUId: string;\n\n    constructor(tabster: Types.TabsterCore, rootUId: string) {\n        this._tabster = tabster;\n        this.rootUId = rootUId;\n    }\n\n    getLength(): number {\n        return this._history.length;\n    }\n\n    removeDeloser(deloser: I): void {\n        this._history = this._history.filter((c) => !c.belongsTo(deloser));\n    }\n\n    hasDeloser(deloser: I): boolean {\n        return this._history.some((d) => d.belongsTo(deloser));\n    }\n\n    abstract focusAvailable(from: I | null): Promise<boolean>;\n    abstract resetFocus(from: I | null): Promise<boolean>;\n}\n\nclass DeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    Types.Deloser,\n    DeloserItem\n> {\n    unshiftToDeloser(deloser: Types.Deloser, element: HTMLElement): void {\n        let item: DeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new DeloserItem(this._tabster, deloser);\n        }\n\n        item.unshift(element);\n\n        this._history.unshift(item);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await i.focusAvailable())) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n        const resetQueue: { [id: string]: DeloserItem } = {};\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && !resetQueue[i.uid]) {\n                resetQueue[i.uid] = i;\n            }\n        }\n\n        // Nothing is found, at least try to reset.\n        for (const id of Object.keys(resetQueue)) {\n            if (await resetQueue[id].resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nexport class DeloserHistory {\n    private _tabster: Types.TabsterCore;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    private _history: DeloserHistoryByRootBase<\n        unknown,\n        DeloserItemBase<unknown>\n    >[] = [];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        this._history = [];\n    }\n\n    process(element: HTMLElement): Types.Deloser | undefined {\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n        const rootUId = ctx && ctx.root.uid;\n        const deloser = DeloserAPI.getDeloser(this._tabster, element);\n\n        if (!rootUId || !deloser) {\n            return undefined;\n        }\n\n        const historyByRoot = this.make(\n            rootUId,\n            () => new DeloserHistoryByRoot(this._tabster, rootUId)\n        );\n\n        if (!ctx || !ctx.modalizer || ctx.modalizer?.isActive()) {\n            historyByRoot.unshiftToDeloser(deloser, element);\n        }\n\n        return deloser;\n    }\n\n    make<\n        I,\n        D extends DeloserItemBase<I>,\n        C extends DeloserHistoryByRootBase<I, D>\n    >(rootUId: string, createInstance: () => C): C {\n        let historyByRoot: C | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            const hbr = this._history[i] as C;\n\n            if (hbr.rootUId === rootUId) {\n                historyByRoot = hbr;\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!historyByRoot) {\n            historyByRoot = createInstance();\n        }\n\n        this._history.unshift(historyByRoot);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n\n        return historyByRoot;\n    }\n\n    removeDeloser(deloser: Types.Deloser): void {\n        this._history.forEach((i) => {\n            i.removeDeloser(deloser);\n        });\n\n        this._history = this._history.filter((i) => i.getLength() > 0);\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.focusAvailable(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.resetFocus(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    isActive?: boolean,\n    snapshotIndex?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-deloser\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-deloser\",\n                    (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        (\"snapshot-\" + snapshotIndex)\n                );\n            }\n        }\n    }\n}\n\nfunction buildElementSelector(\n    element: HTMLElement,\n    withClass?: boolean,\n    withIndex?: boolean\n): string {\n    const selector: string[] = [];\n    const escapeRegExp = /(:|\\.|\\[|\\]|,|=|@)/g;\n    const escapeReplaceValue = \"\\\\$1\";\n\n    if (element.id) {\n        selector.push(\n            \"#\" + element.id.replace(escapeRegExp, escapeReplaceValue)\n        );\n    }\n\n    if (withClass !== false && element.className) {\n        element.className.split(\" \").forEach((cls) => {\n            cls = cls.trim();\n\n            if (cls) {\n                selector.push(\n                    \".\" + cls.replace(escapeRegExp, escapeReplaceValue)\n                );\n            }\n        });\n    }\n\n    let index = 0;\n    let el: Element | null;\n\n    if (withIndex !== false && selector.length === 0) {\n        el = element;\n        while (el) {\n            index++;\n            el = el.previousElementSibling;\n        }\n        selector.unshift(\":nth-child(\" + index + \")\");\n    }\n\n    selector.unshift(element.tagName.toLowerCase());\n\n    return selector.join(\"\");\n}\n\nfunction buildSelector(element: HTMLElement): string | undefined {\n    if (!documentContains(element.ownerDocument, element)) {\n        return undefined;\n    }\n\n    const selector: string[] = [buildElementSelector(element)];\n\n    let el = element.parentElement;\n\n    while (el) {\n        const isBody = el.tagName === \"BODY\";\n        selector.unshift(buildElementSelector(el, false, !isBody));\n\n        if (isBody) {\n            break;\n        }\n\n        el = el.parentElement;\n    }\n\n    return selector.join(\" \");\n}\n\nexport class Deloser\n    extends TabsterPart<Types.DeloserProps>\n    implements Types.Deloser\n{\n    readonly uid: string;\n    private _isActive = false;\n    private _history: WeakHTMLElement<HTMLElement, string>[][] = [[]];\n    private _snapshotIndex = 0;\n    private _onDispose: (deloser: Deloser) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (deloser: Deloser) => void,\n        props: Types.DeloserProps\n    ) {\n        super(tabster, element, props);\n\n        this.uid = getElementUId(tabster.getWindow, element);\n        this._onDispose = onDispose;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    dispose(): void {\n        this._remove();\n\n        this._onDispose(this);\n\n        this._isActive = false;\n        this._snapshotIndex = 0;\n\n        this._props = {};\n        this._history = [];\n    }\n\n    isActive = (): boolean => {\n        return this._isActive;\n    };\n\n    setActive(active: boolean): void {\n        this._isActive = active;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    getActions(): Types.DeloserElementActions {\n        return {\n            focusDefault: this.focusDefault,\n            focusFirst: this.focusFirst,\n            resetFocus: this.resetFocus,\n            clearHistory: this.clearHistory,\n            setSnapshot: this.setSnapshot,\n            isActive: this.isActive,\n        };\n    }\n\n    setSnapshot = (index: number): void => {\n        this._snapshotIndex = index;\n\n        if (this._history.length > index + 1) {\n            this._history.splice(index + 1, this._history.length - index - 1);\n        }\n\n        if (!this._history[index]) {\n            this._history[index] = [];\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    };\n\n    focusFirst = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusFirst({ container: e });\n    };\n\n    unshift(element: HTMLElement): void {\n        let cur = this._history[this._snapshotIndex];\n\n        cur = this._history[this._snapshotIndex] = cur.filter((we) => {\n            const e = we.get();\n            return e && e !== element;\n        });\n\n        cur.unshift(\n            new WeakHTMLElement(\n                this._tabster.getWindow,\n                element,\n                buildSelector(element)\n            )\n        );\n\n        while (cur.length > _containerHistoryLength) {\n            cur.pop();\n        }\n    }\n\n    focusDefault = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusDefault(e);\n    };\n\n    resetFocus = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.resetFocus(e);\n    };\n\n    findAvailable(): HTMLElement | null {\n        const element = this._element.get();\n\n        if (!element || !this._tabster.focusable.isVisible(element)) {\n            return null;\n        }\n\n        let restoreFocusOrder = this._props.restoreFocusOrder;\n        let available: HTMLElement | null = null;\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n        if (!ctx) {\n            return null;\n        }\n\n        const root = ctx.root;\n        const rootElement = root.getElement();\n\n        if (!rootElement) {\n            return null;\n        }\n\n        if (restoreFocusOrder === undefined) {\n            restoreFocusOrder = root.getProps().restoreFocusOrder;\n        }\n\n        if (restoreFocusOrder === Types.RestoreFocusOrders.RootDefault) {\n            available = this._tabster.focusable.findDefault({\n                container: rootElement,\n            });\n        }\n\n        if (\n            !available &&\n            restoreFocusOrder === Types.RestoreFocusOrders.RootFirst\n        ) {\n            available = this._findFirst(rootElement);\n        }\n\n        if (available) {\n            return available;\n        }\n\n        const availableInHistory = this._findInHistory();\n        const availableDefault = this._tabster.focusable.findDefault({\n            container: element,\n        });\n        const availableFirst = this._findFirst(element);\n\n        if (\n            availableInHistory &&\n            restoreFocusOrder === Types.RestoreFocusOrders.History\n        ) {\n            return availableInHistory;\n        }\n\n        if (\n            availableDefault &&\n            restoreFocusOrder === Types.RestoreFocusOrders.DeloserDefault\n        ) {\n            return availableDefault;\n        }\n\n        if (\n            availableFirst &&\n            restoreFocusOrder === Types.RestoreFocusOrders.DeloserFirst\n        ) {\n            return availableFirst;\n        }\n\n        return availableDefault || availableInHistory || availableFirst || null;\n    }\n\n    clearHistory = (preserveExisting?: boolean): void => {\n        const element = this._element.get();\n\n        if (!element) {\n            this._history[this._snapshotIndex] = [];\n\n            return;\n        }\n\n        this._history[this._snapshotIndex] = this._history[\n            this._snapshotIndex\n        ].filter((we) => {\n            const e = we.get();\n            return e && preserveExisting ? element.contains(e) : false;\n        });\n    };\n\n    customFocusLostHandler(element: HTMLElement): boolean {\n        return triggerEvent(element, Types.DeloserEventName, this.getActions());\n    }\n\n    private _findInHistory(): HTMLElement | null {\n        const cur = this._history[this._snapshotIndex].slice(0);\n\n        this.clearHistory(true);\n\n        for (let i = 0; i < cur.length; i++) {\n            const we = cur[i];\n            const e = we.get();\n            const element = this._element.get();\n\n            if (e && element && element.contains(e)) {\n                if (this._tabster.focusable.isFocusable(e)) {\n                    return e;\n                }\n            } else if (!this._props.noSelectorCheck) {\n                // Element is not in the DOM, try to locate the node by it's\n                // selector. This might return not exactly the right node,\n                // but it would be easily fixable by having more detailed selectors.\n                const selector = we.getData();\n\n                if (selector && element) {\n                    let els: NodeListOf<Element>;\n\n                    try {\n                        els = element.ownerDocument.querySelectorAll(selector);\n                    } catch (e) {\n                        if (__DEV__) {\n                            // This should never happen, unless there is some bug in buildElementSelector().\n                            console.error(\n                                `Failed to querySelectorAll('${selector}')`\n                            );\n                        }\n                        continue;\n                    }\n\n                    for (let i = 0; i < els.length; i++) {\n                        const el = els[i] as HTMLElement;\n\n                        if (el && this._tabster.focusable.isFocusable(el)) {\n                            return el;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private _findFirst(element: HTMLElement): HTMLElement | null {\n        if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            const first = this._tabster.focusable.findFirst({\n                container: element,\n                ignoreUncontrolled: true,\n                useActiveModalizer: true,\n            });\n\n            if (first) {\n                return first;\n            }\n        }\n\n        return null;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateDeloserProps(props: Types.DeloserProps): void {\n    // TODO: Implement validation.\n}\n\nexport class DeloserAPI implements Types.DeloserAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    /**\n     * Tracks if focus is inside a deloser\n     */\n    private _inDeloser = false;\n    private _curDeloser: Types.Deloser | undefined;\n    private _history: DeloserHistory;\n    private _restoreFocusTimer: number | undefined;\n    private _isRestoringFocus = false;\n    private _isPaused = false;\n    private _autoDeloser: Types.DeloserProps | undefined;\n    private _autoDeloserInstance: Deloser | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        props?: { autoDeloser: Types.DeloserProps }\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._history = new DeloserHistory(tabster);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n\n        const autoDeloser = props?.autoDeloser;\n        if (autoDeloser) {\n            this._autoDeloser = autoDeloser;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._restoreFocusTimer) {\n            win.clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (this._autoDeloserInstance) {\n            this._autoDeloserInstance.dispose();\n            delete this._autoDeloserInstance;\n            delete this._autoDeloser;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._history.dispose();\n\n        delete this._curDeloser;\n    }\n\n    createDeloser(\n        element: HTMLElement,\n        props: Types.DeloserProps\n    ): Types.Deloser {\n        if (__DEV__) {\n            validateDeloserProps(props);\n        }\n\n        const deloser = new Deloser(\n            this._tabster,\n            element,\n            this._onDeloserDispose,\n            props\n        );\n\n        if (\n            element.contains(\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            this._activate(deloser);\n        }\n\n        return deloser;\n    }\n\n    getActions(element: HTMLElement): Types.DeloserElementActions | undefined {\n        for (let e: HTMLElement | null = element; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (tabsterOnElement && tabsterOnElement.deloser) {\n                return tabsterOnElement.deloser.getActions();\n            }\n        }\n\n        return undefined;\n    }\n\n    pause(): void {\n        this._isPaused = true;\n\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n    }\n\n    resume(restore?: boolean): void {\n        this._isPaused = false;\n\n        if (restore) {\n            this._scheduleRestoreFocus();\n        }\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (!e) {\n            this._scheduleRestoreFocus();\n\n            return;\n        }\n\n        const deloser = this._history.process(e);\n\n        if (deloser) {\n            this._activate(deloser);\n        } else {\n            this._deactivate();\n        }\n    };\n\n    /**\n     * Activates and sets the current deloser\n     */\n    private _activate(deloser: Types.Deloser) {\n        const curDeloser = this._curDeloser;\n        if (curDeloser !== deloser) {\n            this._inDeloser = true;\n            curDeloser?.setActive(false);\n            deloser.setActive(true);\n            this._curDeloser = deloser;\n        }\n    }\n\n    /**\n     * Called when focus should no longer be in a deloser\n     */\n    private _deactivate() {\n        this._inDeloser = false;\n        this._curDeloser?.setActive(false);\n        this._curDeloser = undefined;\n    }\n\n    private _scheduleRestoreFocus(force?: boolean): void {\n        if (this._isPaused || this._isRestoringFocus) {\n            return;\n        }\n\n        const restoreFocus = async () => {\n            this._restoreFocusTimer = undefined;\n            const lastFocused =\n                this._tabster.focusedElement.getLastFocusedElement();\n\n            if (\n                !force &&\n                (this._isRestoringFocus ||\n                    !this._inDeloser ||\n                    !!lastFocused?.offsetParent)\n            ) {\n                return;\n            }\n\n            const curDeloser = this._curDeloser;\n            if (curDeloser) {\n                if (\n                    lastFocused &&\n                    curDeloser.customFocusLostHandler(lastFocused)\n                ) {\n                    return;\n                }\n\n                const el = curDeloser.findAvailable();\n\n                if (el && this._tabster.focusedElement.focus(el)) {\n                    return;\n                }\n            }\n\n            this._deactivate();\n\n            this._isRestoringFocus = true;\n\n            if (!(await this._history.focusAvailable(null))) {\n                await this._history.resetFocus(null);\n            }\n\n            this._isRestoringFocus = false;\n        };\n\n        if (force) {\n            restoreFocus();\n        } else {\n            this._restoreFocusTimer = this._win().setTimeout(restoreFocus, 100);\n        }\n    }\n\n    static getDeloser(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Deloser | undefined {\n        let root: Types.Root | undefined;\n\n        for (let e: HTMLElement | null = element; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(tabster, e);\n\n            if (tabsterOnElement) {\n                if (!root) {\n                    root = tabsterOnElement.root;\n                }\n\n                const deloser = tabsterOnElement.deloser;\n\n                if (deloser) {\n                    return deloser;\n                }\n            }\n        }\n\n        const deloserAPI = tabster.deloser && (tabster.deloser as DeloserAPI);\n\n        if (deloserAPI) {\n            if (deloserAPI._autoDeloserInstance) {\n                return deloserAPI._autoDeloserInstance;\n            }\n\n            const autoDeloserProps = deloserAPI._autoDeloser;\n\n            if (root && !deloserAPI._autoDeloserInstance && autoDeloserProps) {\n                const body = element.ownerDocument?.body;\n\n                if (body) {\n                    deloserAPI._autoDeloserInstance = new Deloser(\n                        tabster,\n                        body,\n                        (tabster.deloser as DeloserAPI)._onDeloserDispose,\n                        autoDeloserProps\n                    );\n                }\n            }\n\n            return deloserAPI._autoDeloserInstance;\n        }\n\n        return undefined;\n    }\n\n    private _onDeloserDispose = (deloser: Deloser) => {\n        this._history.removeDeloser(deloser);\n\n        if (deloser.isActive()) {\n            this._scheduleRestoreFocus();\n        }\n    };\n\n    static getHistory(instance: Types.DeloserAPI): DeloserHistory {\n        return (instance as DeloserAPI)._history;\n    }\n\n    static forceRestoreFocus(instance: Types.DeloserAPI): void {\n        (instance as DeloserAPI)._scheduleRestoreFocus(true);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"../Types\";\n\nexport abstract class Subscribable<A, B = undefined>\n    implements Types.Subscribable<A, B>\n{\n    protected _val: A | undefined;\n    private _callbacks: Types.SubscribableCallback<A, B>[] = [];\n\n    dispose(): void {\n        this._callbacks = [];\n        delete this._val;\n    }\n\n    subscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index < 0) {\n            callbacks.push(callback);\n        }\n    }\n\n    subscribeFirst(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            callbacks.splice(index, 1);\n        }\n\n        callbacks.unshift(callback);\n    }\n\n    unsubscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const index = this._callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            this._callbacks.splice(index, 1);\n        }\n    }\n\n    protected setVal(val: A, details: B): void {\n        if (this._val === val) {\n            return;\n        }\n\n        this._val = val;\n\n        this._callCallbacks(val, details);\n    }\n\n    protected getVal(): A | undefined {\n        return this._val;\n    }\n\n    protected trigger(val: A, details: B): void {\n        this._callCallbacks(val, details);\n    }\n\n    private _callCallbacks(val: A, details: B): void {\n        this._callbacks.forEach((callback) => callback(val, details));\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DeloserAPI,\n    DeloserHistoryByRootBase,\n    DeloserItemBase,\n} from \"./Deloser\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { Subscribable } from \"./State/Subscribable\";\nimport * as Types from \"./Types\";\nimport {\n    getElementUId,\n    getInstanceContext,\n    getPromise,\n    getUId,\n    getWindowUId,\n    HTMLElementWithUID,\n} from \"./Utils\";\n\nconst _transactionTimeout = 1500;\nconst _pingTimeout = 3000;\n\nconst _targetIdUp = \"up\";\n\nconst CrossOriginTransactionTypes: Types.CrossOriginTransactionTypes = {\n    Bootstrap: 1,\n    FocusElement: 2,\n    State: 3,\n    GetElement: 4,\n    RestoreFocusInDeloser: 5,\n    Ping: 6,\n};\n\ninterface CrossOriginInstanceContext {\n    ignoreKeyboardNavigationStateUpdate: boolean;\n    focusOwner?: string;\n    focusOwnerTimestamp?: number;\n    deloserByUId: { [uid: string]: Types.Deloser };\n    origOutlineSetup?: (props?: Partial<Types.OutlineProps>) => void;\n}\n\ninterface KnownTargets {\n    [id: string]: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        send: (payload: Types.CrossOriginTransactionData<any, any>) => void;\n        last?: number;\n    };\n}\n\nclass CrossOriginDeloserItem extends DeloserItemBase<CrossOriginDeloser> {\n    private _deloser: CrossOriginDeloser;\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        deloser: CrossOriginDeloser,\n        trasactions: CrossOriginTransactions\n    ) {\n        super();\n        this._deloser = deloser;\n        this._transactions = trasactions;\n    }\n\n    belongsTo(deloser: CrossOriginDeloser): boolean {\n        return deloser.deloserUId === this._deloser.deloserUId;\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: false,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: true,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n}\n\nclass CrossOriginDeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    CrossOriginDeloser,\n    CrossOriginDeloserItem\n> {\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        rootUId: string,\n        transactions: CrossOriginTransactions\n    ) {\n        super(tabster, rootUId);\n        this._transactions = transactions;\n    }\n\n    unshift(deloser: CrossOriginDeloser): void {\n        let item: CrossOriginDeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new CrossOriginDeloserItem(\n                this._tabster,\n                deloser,\n                this._transactions\n            );\n        }\n\n        this._history.unshift(item);\n\n        this._history.splice(10, this._history.length - 10);\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.focusAvailable()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nabstract class CrossOriginTransaction<I, O> {\n    abstract type: Types.CrossOriginTransactionType;\n    readonly id: string;\n    readonly beginData: I;\n    readonly timeout?: number;\n    protected tabster: Types.TabsterCore;\n    protected endData: O | undefined;\n    protected owner: Types.GetWindow;\n    protected ownerId: string;\n    protected sendUp: Types.CrossOriginTransactionSend | undefined;\n    private _promise: Promise<O>;\n    protected _resolve: ((endData?: O | PromiseLike<O>) => void) | undefined;\n    private _reject: ((reason: string) => void) | undefined;\n    private _knownTargets: KnownTargets;\n    private _sentTo: Types.CrossOriginSentTo;\n    protected targetId: string | undefined;\n    private _inProgress: { [id: string]: boolean } = {};\n    private _isDone = false;\n    private _isSelfResponding = false;\n    private _sentCount = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ) {\n        this.tabster = tabster;\n        this.owner = getOwner;\n        this.ownerId = getWindowUId(getOwner());\n        this.id = getUId(getOwner());\n        this.beginData = value;\n        this._knownTargets = knownTargets;\n        this._sentTo = sentTo || { [this.ownerId]: true };\n        this.targetId = targetId;\n        this.sendUp = sendUp;\n        this.timeout = timeout;\n        this._promise = new (getPromise(getOwner))<O>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    protected getTargets(knownTargets: KnownTargets): KnownTargets | null {\n        return this.targetId === _targetIdUp\n            ? this.sendUp\n                ? { [_targetIdUp]: { send: this.sendUp } }\n                : null\n            : this.targetId\n            ? knownTargets[this.targetId]\n                ? {\n                      [this.targetId]: {\n                          send: knownTargets[this.targetId].send,\n                      },\n                  }\n                : null\n            : Object.keys(knownTargets).length === 0 && this.sendUp\n            ? { [_targetIdUp]: { send: this.sendUp } }\n            : Object.keys(knownTargets).length > 0\n            ? knownTargets\n            : null;\n    }\n\n    begin(\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>\n    ): Promise<O | undefined> {\n        const targets = this.getTargets(this._knownTargets);\n        const sentTo: Types.CrossOriginSentTo = { ...this._sentTo };\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                sentTo[id] = true;\n            }\n        }\n\n        const data: Types.CrossOriginTransactionData<I, O> = {\n            transaction: this.id,\n            type: this.type,\n            isResponse: false,\n            timestamp: Date.now(),\n            owner: this.ownerId,\n            sentto: sentTo,\n            timeout: this.timeout,\n            beginData: this.beginData,\n        };\n\n        if (this.targetId) {\n            data.target = this.targetId;\n        }\n\n        if (selfResponse) {\n            this._isSelfResponding = true;\n\n            selfResponse(data).then((value) => {\n                this._isSelfResponding = false;\n\n                if (value !== undefined) {\n                    if (!this.endData) {\n                        this.endData = value;\n                    }\n                }\n\n                if (this.endData || this._sentCount === 0) {\n                    this.end();\n                }\n            });\n        }\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                if (!(id in this._sentTo)) {\n                    this._send(targets[id].send, id, data);\n                }\n            }\n        }\n\n        if (this._sentCount === 0 && !this._isSelfResponding) {\n            this.end();\n        }\n\n        return this._promise;\n    }\n\n    private _send(\n        send: (data: Types.CrossOriginTransactionData<I, O>) => void,\n        targetId: string,\n        data: Types.CrossOriginTransactionData<I, O>\n    ) {\n        if (this._inProgress[targetId] === undefined) {\n            this._inProgress[targetId] = true;\n            this._sentCount++;\n            send(data);\n        }\n    }\n\n    end(error?: string): void {\n        if (this._isDone) {\n            return;\n        }\n\n        this._isDone = true;\n\n        if (this.endData === undefined && error) {\n            if (this._reject) {\n                this._reject(error);\n            }\n        } else if (this._resolve) {\n            this._resolve(this.endData);\n        }\n    }\n\n    onResponse(data: Types.CrossOriginTransactionData<I, O>): void {\n        const endData = data.endData;\n\n        if (endData !== undefined && !this.endData) {\n            this.endData = endData;\n        }\n\n        const inProgressId =\n            data.target === _targetIdUp ? _targetIdUp : data.owner;\n\n        if (this._inProgress[inProgressId]) {\n            this._inProgress[inProgressId] = false;\n            this._sentCount--;\n\n            if (\n                this.endData ||\n                (this._sentCount === 0 && !this._isSelfResponding)\n            ) {\n                this.end();\n            }\n        }\n    }\n}\n\ninterface CrossOriginTransactionClass<I, O> {\n    new (\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ): CrossOriginTransaction<I, O>;\n    shouldForward?(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n    makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<O | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<O>;\n    shouldSelfRespond?(\n        tabster: Types.TabsterCore,\n        data: I,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n}\n\ninterface BootstrapTransactionContents {\n    isNavigatingWithKeyboard: boolean;\n}\n\nclass BootstrapTransaction extends CrossOriginTransaction<\n    undefined,\n    BootstrapTransactionContents\n> {\n    type = CrossOriginTransactionTypes.Bootstrap;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore\n    ): Promise<BootstrapTransactionContents> {\n        return {\n            isNavigatingWithKeyboard:\n                tabster.keyboardNavigation.isNavigatingWithKeyboard(),\n        };\n    }\n}\n\ninterface CrossOriginElementDataIn {\n    uid?: string;\n    id?: string;\n    rootId?: string;\n    ownerId?: string;\n    observedName?: string;\n    /**\n     * Optionally wait if the element is accessible or focusable before returning it\n     */\n    accessibility?: Types.ObservedElementAccesibility;\n}\n\ninterface FocusElementData extends CrossOriginElementDataIn {\n    noFocusedProgrammaticallyFlag?: boolean;\n    noAccessibleCheck?: boolean;\n}\n\nclass FocusElementTransaction extends CrossOriginTransaction<\n    FocusElementData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.FocusElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static shouldForward(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow\n    ): boolean {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return !el || !tabster.focusable.isFocusable(el);\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return (\n            (!!el && tabster.focusedElement.focus(el, true)) ||\n            !!(await forwardResult)\n        );\n    }\n}\n\nconst CrossOriginStates: {\n    Focused: 1;\n    Blurred: 2;\n    Observed: 3;\n    DeadWindow: 4;\n    KeyboardNavigation: 5;\n    Outline: 6;\n} = {\n    Focused: 1,\n    Blurred: 2,\n    Observed: 3,\n    DeadWindow: 4,\n    KeyboardNavigation: 5,\n    Outline: 6,\n};\ntype CrossOriginState =\n    typeof CrossOriginStates[keyof typeof CrossOriginStates];\n\ninterface CrossOriginElementDataOut {\n    ownerUId: string;\n    uid?: string;\n    id?: string;\n    rootUId?: string;\n    deloserUId?: string;\n    observedName?: string;\n    observedDetails?: string;\n}\n\ninterface CrossOriginStateData extends CrossOriginElementDataOut {\n    state: CrossOriginState;\n    isFocusedProgrammatically?: boolean;\n    force?: boolean;\n    isNavigatingWithKeyboard?: boolean;\n    outline?: Partial<Types.OutlineProps>;\n}\n\nclass StateTransaction extends CrossOriginTransaction<\n    CrossOriginStateData,\n    true\n> {\n    type = CrossOriginTransactionTypes.State;\n\n    static shouldSelfRespond(\n        tabster: Types.TabsterCore,\n        data: CrossOriginStateData\n    ): boolean {\n        return (\n            data.state !== CrossOriginStates.DeadWindow &&\n            data.state !== CrossOriginStates.KeyboardNavigation\n        );\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<CrossOriginStateData, true>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const timestamp = data.timestamp;\n        const beginData = data.beginData;\n\n        if (timestamp && beginData) {\n            switch (beginData.state) {\n                case CrossOriginStates.Focused:\n                    return StateTransaction._makeFocusedResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions,\n                        isSelfResponse\n                    );\n                case CrossOriginStates.Blurred:\n                    return StateTransaction._makeBlurredResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions.ctx\n                    );\n                case CrossOriginStates.Observed:\n                    return StateTransaction._makeObservedResponse(\n                        tabster,\n                        beginData\n                    );\n                case CrossOriginStates.DeadWindow:\n                    return StateTransaction._makeDeadWindowResponse(\n                        tabster,\n                        beginData,\n                        transactions,\n                        forwardResult\n                    );\n                case CrossOriginStates.KeyboardNavigation:\n                    return StateTransaction._makeKeyboardNavigationResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.isNavigatingWithKeyboard\n                    );\n                case CrossOriginStates.Outline:\n                    return StateTransaction._makeOutlineResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.outline\n                    );\n            }\n        }\n\n        return true;\n    }\n\n    static createElement(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginElementDataOut\n    ): CrossOriginElement | null {\n        return beginData.uid\n            ? new CrossOriginElement(\n                  tabster,\n                  beginData.uid,\n                  beginData.ownerUId,\n                  beginData.id,\n                  beginData.rootUId,\n                  beginData.observedName,\n                  beginData.observedDetails\n              )\n            : null;\n    }\n\n    private static async _makeFocusedResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (beginData && beginData.ownerUId && element) {\n            transactions.ctx.focusOwner = beginData.ownerUId;\n            transactions.ctx.focusOwnerTimestamp = timestamp;\n\n            if (!isSelfResponse && beginData.rootUId && beginData.deloserUId) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    const history = DeloserAPI.getHistory(deloserAPI);\n\n                    const deloser: CrossOriginDeloser = {\n                        ownerUId: beginData.ownerUId,\n                        deloserUId: beginData.deloserUId,\n                        rootUId: beginData.rootUId,\n                    };\n\n                    const historyItem = history.make(\n                        beginData.rootUId,\n                        () =>\n                            new CrossOriginDeloserHistoryByRoot(\n                                tabster,\n                                deloser.rootUId,\n                                transactions\n                            )\n                    );\n\n                    historyItem.unshift(deloser);\n                }\n            }\n\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                element,\n                {\n                    isFocusedProgrammatically:\n                        beginData.isFocusedProgrammatically,\n                }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeBlurredResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        context: CrossOriginInstanceContext\n    ): Promise<true> {\n        if (\n            beginData &&\n            (beginData.ownerUId === context.focusOwner || beginData.force) &&\n            (!context.focusOwnerTimestamp ||\n                context.focusOwnerTimestamp < timestamp)\n        ) {\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                undefined,\n                {}\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeObservedResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData\n    ): Promise<true> {\n        const name = beginData.observedName;\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (name && element) {\n            CrossOriginObservedElementState.trigger(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.observedElement,\n                element,\n                { names: [name], details: beginData.observedDetails }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeDeadWindowResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>\n    ): Promise<true> {\n        const deadUId = beginData && beginData.ownerUId;\n\n        if (deadUId) {\n            transactions.removeTarget(deadUId);\n        }\n\n        return forwardResult.then(() => {\n            if (deadUId === transactions.ctx.focusOwner) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n            return true;\n        });\n    }\n\n    private static async _makeKeyboardNavigationResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        isNavigatingWithKeyboard?: boolean\n    ): Promise<true> {\n        if (\n            isNavigatingWithKeyboard !== undefined &&\n            tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                isNavigatingWithKeyboard\n        ) {\n            context.ignoreKeyboardNavigationStateUpdate = true;\n            tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                isNavigatingWithKeyboard\n            );\n            context.ignoreKeyboardNavigationStateUpdate = false;\n        }\n        return true;\n    }\n\n    private static async _makeOutlineResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        props?: Partial<Types.OutlineProps>\n    ): Promise<true> {\n        if (context.origOutlineSetup) {\n            context.origOutlineSetup.call(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.outline!,\n                props\n            );\n        }\n        return true;\n    }\n}\n\nclass GetElementTransaction extends CrossOriginTransaction<\n    CrossOriginElementDataIn | undefined,\n    CrossOriginElementDataOut\n> {\n    type = CrossOriginTransactionTypes.GetElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static findElement(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        data?: CrossOriginElementDataIn\n    ): HTMLElement | null {\n        let element: HTMLElement | null | undefined;\n\n        if (\n            data &&\n            (!data.ownerId || data.ownerId === getWindowUId(getOwner()))\n        ) {\n            if (data.id) {\n                element = getOwner().document.getElementById(data.id);\n\n                if (element && data.rootId) {\n                    const ctx = RootAPI.getTabsterContext(tabster, element);\n\n                    if (!ctx || ctx.root.uid !== data.rootId) {\n                        return null;\n                    }\n                }\n            } else if (data.uid) {\n                const ref = getInstanceContext(getOwner).elementByUId[data.uid];\n                element = ref && ref.get();\n            } else if (data.observedName) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                element = tabster.observedElement!.getElement(\n                    data.observedName\n                );\n            }\n        }\n\n        return element || null;\n    }\n\n    static getElementData(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext,\n        ownerUId: string\n    ): CrossOriginElementDataOut {\n        const deloser = DeloserAPI.getDeloser(tabster, element);\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const tabsterOnElement = getTabsterOnElement(tabster, element);\n        const observed = tabsterOnElement && tabsterOnElement.observed;\n\n        return {\n            uid: getElementUId(getOwner, element),\n            ownerUId,\n            id: element.id || undefined,\n            rootUId: ctx ? ctx.root.uid : undefined,\n            deloserUId: deloser\n                ? getDeloserUID(getOwner, context, deloser)\n                : undefined,\n            observedName: observed && observed.names && observed.names[0],\n            observedDetails: observed && observed.details,\n        };\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            CrossOriginElementDataIn | undefined,\n            CrossOriginElementDataOut\n        >,\n        getOwner: Types.GetWindow,\n        ownerUId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<CrossOriginElementDataOut | undefined>\n    ): Promise<CrossOriginElementDataOut | undefined> {\n        const beginData = data.beginData;\n        let element: HTMLElement | undefined;\n        let dataOut: CrossOriginElementDataOut | undefined;\n\n        if (beginData === undefined) {\n            element = tabster.focusedElement.getFocusedElement();\n        } else if (beginData) {\n            element =\n                GetElementTransaction.findElement(\n                    tabster,\n                    getOwner,\n                    beginData\n                ) || undefined;\n        }\n\n        if (!element && beginData) {\n            const name = beginData.observedName;\n            const timeout = data.timeout;\n            const accessibility = beginData.accessibility;\n\n            if (name && timeout) {\n                const e: {\n                    element?: HTMLElement | null;\n                    crossOrigin?: CrossOriginElementDataOut;\n                } = await new (getPromise(getOwner))((resolve) => {\n                    let isWaitElementResolved = false;\n                    let isForwardResolved = false;\n                    let isResolved = false;\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tabster\n                        .observedElement!.waitElement(\n                            name,\n                            timeout,\n                            accessibility\n                        )\n                        .result.then((value) => {\n                            isWaitElementResolved = true;\n\n                            if (!isResolved && (value || isForwardResolved)) {\n                                isResolved = true;\n                                resolve({ element: value });\n                            }\n                        });\n\n                    forwardResult.then((value) => {\n                        isForwardResolved = true;\n\n                        if (!isResolved && (value || isWaitElementResolved)) {\n                            isResolved = true;\n                            resolve({ crossOrigin: value });\n                        }\n                    });\n                });\n\n                if (e.element) {\n                    element = e.element;\n                } else if (e.crossOrigin) {\n                    dataOut = e.crossOrigin;\n                }\n            }\n        }\n\n        return element\n            ? GetElementTransaction.getElementData(\n                  tabster,\n                  element,\n                  getOwner,\n                  transactions.ctx,\n                  ownerUId\n              )\n            : dataOut;\n    }\n}\n\ninterface CrossOriginDeloser {\n    ownerUId: string;\n    deloserUId: string;\n    rootUId: string;\n}\n\ninterface RestoreFocusInDeloserTransactionData extends CrossOriginDeloser {\n    reset: boolean;\n}\n\nclass RestoreFocusInDeloserTransaction extends CrossOriginTransaction<\n    RestoreFocusInDeloserTransactionData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.RestoreFocusInDeloser;\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            RestoreFocusInDeloserTransactionData,\n            boolean\n        >,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const forwardRet = await forwardResult;\n        const begin = !forwardRet && data.beginData;\n        const uid = begin && begin.deloserUId;\n        const deloser = uid && transactions.ctx.deloserByUId[uid];\n        const deloserAPI = tabster.deloser;\n\n        if (begin && deloser && deloserAPI) {\n            const history = DeloserAPI.getHistory(deloserAPI);\n            return begin.reset\n                ? history.resetFocus(deloser)\n                : history.focusAvailable(deloser);\n        }\n\n        return !!forwardRet;\n    }\n}\n\nclass PingTransaction extends CrossOriginTransaction<undefined, true> {\n    type = CrossOriginTransactionTypes.Ping;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(): Promise<true> {\n        return true;\n    }\n}\n\ninterface CrossOriginTransactionWrapper<I, O> {\n    transaction: CrossOriginTransaction<I, O>;\n    timer?: number;\n}\n\nclass CrossOriginTransactions {\n    private _owner: Types.GetWindow;\n    private _ownerUId: string;\n    private _knownTargets: KnownTargets = {};\n    private _transactions: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [id: string]: CrossOriginTransactionWrapper<any, any>;\n    } = {};\n    private _tabster: Types.TabsterCore;\n    private _pingTimer: number | undefined;\n    private _isDefaultSendUp = false;\n    private _deadPromise: Promise<true | undefined> | undefined;\n    isSetUp = false;\n    sendUp: Types.CrossOriginTransactionSend | undefined;\n    ctx: CrossOriginInstanceContext;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext\n    ) {\n        this._tabster = tabster;\n        this._owner = getOwner;\n        this._ownerUId = getWindowUId(getOwner());\n        this.ctx = context;\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp) {\n            if (__DEV__) {\n                console.error(\"CrossOrigin is already set up.\");\n            }\n        } else {\n            this.isSetUp = true;\n\n            this.setSendUp(sendUp);\n\n            this._owner().addEventListener(\"pagehide\", this._onPageHide);\n\n            this._ping();\n        }\n\n        return this._onMessage;\n    }\n\n    setSendUp(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (!this.isSetUp) {\n            throw new Error(\"CrossOrigin is not set up.\");\n        }\n\n        this.sendUp = sendUp || undefined;\n\n        const owner = this._owner();\n\n        if (sendUp === undefined) {\n            if (!this._isDefaultSendUp) {\n                if (owner.document) {\n                    this._isDefaultSendUp = true;\n\n                    if (\n                        owner.parent &&\n                        owner.parent !== owner &&\n                        owner.parent.postMessage\n                    ) {\n                        this.sendUp = (\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data: Types.CrossOriginTransactionData<any, any>\n                        ) => {\n                            owner.parent.postMessage(JSON.stringify(data), \"*\");\n                        };\n                    }\n\n                    owner.addEventListener(\"message\", this._onBrowserMessage);\n                }\n            }\n        } else if (this._isDefaultSendUp) {\n            owner.removeEventListener(\"message\", this._onBrowserMessage);\n            this._isDefaultSendUp = false;\n        }\n\n        return this._onMessage;\n    }\n\n    async dispose(): Promise<void> {\n        const owner = this._owner();\n\n        if (this._pingTimer) {\n            owner.clearTimeout(this._pingTimer);\n            this._pingTimer = undefined;\n        }\n\n        owner.removeEventListener(\"message\", this._onBrowserMessage);\n        owner.removeEventListener(\"pagehide\", this._onPageHide);\n\n        await this._dead();\n\n        delete this._deadPromise;\n\n        for (const id of Object.keys(this._transactions)) {\n            const t = this._transactions[id];\n\n            if (t.timer) {\n                owner.clearTimeout(t.timer);\n                delete t.timer;\n            }\n\n            t.transaction.end();\n        }\n\n        this._knownTargets = {};\n\n        delete this.sendUp;\n    }\n\n    beginTransaction<I, O>(\n        Transaction: CrossOriginTransactionClass<I, O>,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        if (!this._owner) {\n            return getPromise(this._owner).reject();\n        }\n\n        const transaction = new Transaction(\n            this._tabster,\n            this._owner,\n            this._knownTargets,\n            value,\n            timeout,\n            sentTo,\n            targetId,\n            this.sendUp\n        );\n        let selfResponse:\n            | ((\n                  data: Types.CrossOriginTransactionData<I, O>\n              ) => Promise<O | undefined>)\n            | undefined;\n\n        if (\n            Transaction.shouldSelfRespond &&\n            Transaction.shouldSelfRespond(\n                this._tabster,\n                value,\n                this._owner,\n                this._ownerUId\n            )\n        ) {\n            selfResponse = (data: Types.CrossOriginTransactionData<I, O>) => {\n                return Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    getPromise(this._owner).resolve(undefined),\n                    true\n                );\n            };\n        }\n\n        return this._beginTransaction(\n            transaction,\n            timeout,\n            selfResponse,\n            withReject\n        );\n    }\n\n    removeTarget(uid: string): void {\n        delete this._knownTargets[uid];\n    }\n\n    private _beginTransaction<I, O>(\n        transaction: CrossOriginTransaction<I, O>,\n        timeout?: number,\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        const owner = this._owner();\n\n        const wrapper: CrossOriginTransactionWrapper<I, O> = {\n            transaction,\n            timer: owner.setTimeout(() => {\n                delete wrapper.timer;\n                transaction.end(\"Cross origin transaction timed out.\");\n            }, _transactionTimeout + (timeout || 0)),\n        };\n\n        this._transactions[transaction.id] = wrapper;\n\n        const ret = transaction.begin(selfResponse);\n\n        ret.catch(() => {\n            /**/\n        }).finally(() => {\n            if (wrapper.timer) {\n                owner.clearTimeout(wrapper.timer);\n            }\n            delete this._transactions[transaction.id];\n        });\n\n        return ret.then(\n            (value) => value,\n            withReject ? undefined : () => undefined\n        );\n    }\n\n    forwardTransaction(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data: Types.CrossOriginTransactionData<any, any>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): Promise<any> {\n        const owner = this._owner;\n        let targetId = data.target;\n\n        if (targetId === this._ownerUId) {\n            return getPromise(owner).resolve();\n        }\n\n        const Transaction = this._getTransactionClass(data.type);\n\n        if (Transaction) {\n            if (\n                Transaction.shouldForward === undefined ||\n                Transaction.shouldForward(\n                    this._tabster,\n                    data,\n                    owner,\n                    this._ownerUId\n                )\n            ) {\n                const sentTo = data.sentto;\n\n                if (targetId === _targetIdUp) {\n                    targetId = undefined;\n                    sentTo[this._ownerUId] = true;\n                }\n\n                delete sentTo[_targetIdUp];\n\n                return this._beginTransaction(\n                    new Transaction(\n                        this._tabster,\n                        owner,\n                        this._knownTargets,\n                        data.beginData,\n                        data.timeout,\n                        sentTo,\n                        targetId,\n                        this.sendUp\n                    ),\n                    data.timeout\n                );\n            } else {\n                return getPromise(owner).resolve();\n            }\n        }\n\n        return getPromise(owner).reject(\n            `Unknown transaction type ${data.type}`\n        );\n    }\n\n    private _getTransactionClass(\n        type: Types.CrossOriginTransactionType\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): CrossOriginTransactionClass<any, any> | null {\n        switch (type) {\n            case CrossOriginTransactionTypes.Bootstrap:\n                return BootstrapTransaction;\n            case CrossOriginTransactionTypes.FocusElement:\n                return FocusElementTransaction;\n            case CrossOriginTransactionTypes.State:\n                return StateTransaction;\n            case CrossOriginTransactionTypes.GetElement:\n                return GetElementTransaction;\n            case CrossOriginTransactionTypes.RestoreFocusInDeloser:\n                return RestoreFocusInDeloserTransaction;\n            case CrossOriginTransactionTypes.Ping:\n                return PingTransaction;\n            default:\n                return null;\n        }\n    }\n\n    private _onMessage = (e: Types.CrossOriginMessage) => {\n        if (e.data.owner === this._ownerUId || !this._tabster) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: Types.CrossOriginTransactionData<any, any> = e.data;\n        let transactionId: string;\n\n        if (\n            !data ||\n            !(transactionId = data.transaction) ||\n            !data.type ||\n            !data.timestamp ||\n            !data.owner ||\n            !data.sentto\n        ) {\n            return;\n        }\n\n        let knownTarget = this._knownTargets[data.owner];\n\n        if (!knownTarget && e.send && data.owner !== this._ownerUId) {\n            knownTarget = this._knownTargets[data.owner] = { send: e.send };\n        }\n\n        if (knownTarget) {\n            knownTarget.last = Date.now();\n        }\n\n        if (data.isResponse) {\n            const t = this._transactions[transactionId];\n\n            if (t && t.transaction && t.transaction.type === data.type) {\n                t.transaction.onResponse(data);\n            }\n        } else {\n            const Transaction = this._getTransactionClass(data.type);\n\n            const forwardResult = this.forwardTransaction(data);\n\n            if (Transaction && e.send) {\n                Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    forwardResult,\n                    false\n                ).then((r) => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const response: Types.CrossOriginTransactionData<any, any> =\n                        {\n                            transaction: data.transaction,\n                            type: data.type,\n                            isResponse: true,\n                            timestamp: Date.now(),\n                            owner: this._ownerUId,\n                            timeout: data.timeout,\n                            sentto: {},\n                            target:\n                                data.target === _targetIdUp\n                                    ? _targetIdUp\n                                    : data.owner,\n                            endData: r,\n                        };\n\n                    e.send(response);\n                });\n            }\n        }\n    };\n\n    private _onPageHide = () => {\n        this._dead();\n    };\n\n    private async _dead(): Promise<void> {\n        if (!this._deadPromise && this.ctx.focusOwner === this._ownerUId) {\n            this._deadPromise = this.beginTransaction(StateTransaction, {\n                ownerUId: this._ownerUId,\n                state: CrossOriginStates.DeadWindow,\n            });\n        }\n\n        if (this._deadPromise) {\n            await this._deadPromise;\n        }\n    }\n\n    private async _ping(): Promise<void> {\n        if (this._pingTimer) {\n            return;\n        }\n\n        let deadWindows: { [key: string]: boolean } | undefined;\n        const now = Date.now();\n        const targets = Object.keys(this._knownTargets).filter(\n            (uid) => now - (this._knownTargets[uid].last || 0) > _pingTimeout\n        );\n\n        if (this.sendUp) {\n            targets.push(_targetIdUp);\n        }\n\n        if (targets.length) {\n            await getPromise(this._owner).all(\n                targets.map((uid) =>\n                    this.beginTransaction(\n                        PingTransaction,\n                        undefined,\n                        undefined,\n                        undefined,\n                        uid,\n                        true\n                    ).then(\n                        () => true,\n                        () => {\n                            if (uid !== _targetIdUp) {\n                                if (!deadWindows) {\n                                    deadWindows = {};\n                                }\n                                deadWindows[uid] = true;\n                                delete this._knownTargets[uid];\n                            }\n                            return false;\n                        }\n                    )\n                )\n            );\n        }\n\n        if (deadWindows) {\n            const focused = await this.beginTransaction(\n                GetElementTransaction,\n                undefined\n            );\n\n            if (\n                !focused &&\n                this.ctx.focusOwner &&\n                this.ctx.focusOwner in deadWindows\n            ) {\n                await this.beginTransaction(StateTransaction, {\n                    ownerUId: this._ownerUId,\n                    state: CrossOriginStates.Blurred,\n                    force: true,\n                });\n\n                const deloserAPI = this._tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n        }\n\n        this._pingTimer = this._owner().setTimeout(() => {\n            this._pingTimer = undefined;\n            this._ping();\n        }, _pingTimeout);\n    }\n\n    private _onBrowserMessage = (e: MessageEvent) => {\n        if (e.source === this._owner()) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const send = (data: Types.CrossOriginTransactionData<any, any>) => {\n            if (e.source && e.source.postMessage) {\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                (e.source.postMessage as Function)(JSON.stringify(data), \"*\");\n            }\n        };\n\n        try {\n            this._onMessage({\n                data: JSON.parse(e.data),\n                send,\n            });\n        } catch (e) {\n            /* Ignore */\n        }\n    };\n}\n\nexport class CrossOriginElement implements Types.CrossOriginElement {\n    private _tabster: Types.TabsterCore;\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        uid: string,\n        ownerId: string,\n        id?: string,\n        rootId?: string,\n        observedName?: string,\n        observedDetails?: string\n    ) {\n        this._tabster = tabster;\n        this.uid = uid;\n        this.ownerId = ownerId;\n        this.id = id;\n        this.rootId = rootId;\n        this.observedName = observedName;\n        this.observedDetails = observedDetails;\n    }\n\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tabster.crossOrigin!.focusedElement.focus(\n            this,\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n}\n\nexport class CrossOriginFocusedElementState\n    extends Subscribable<\n        CrossOriginElement | undefined,\n        Types.FocusedElementDetails\n    >\n    implements Types.CrossOriginFocusedElementState\n{\n    private _transactions: CrossOriginTransactions;\n\n    constructor(transactions: CrossOriginTransactions) {\n        super();\n        this._transactions = transactions;\n    }\n\n    async focus(\n        element: Types.CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            {\n                uid: element.uid,\n                id: element.id,\n                rootId: element.rootId,\n                ownerId: element.ownerId,\n                observedName: element.observedName,\n            },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { id: elementId, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { observedName, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck,\n            timeout\n        );\n    }\n\n    private async _focus(\n        elementData: CrossOriginElementDataIn,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        timeout?: number\n    ): Promise<boolean> {\n        return this._transactions\n            .beginTransaction(\n                FocusElementTransaction,\n                {\n                    ...elementData,\n                    noFocusedProgrammaticallyFlag,\n                    noAccessibleCheck,\n                },\n                timeout\n            )\n            .then((value) => !!value);\n    }\n\n    static setVal(\n        instance: Types.CrossOriginFocusedElementState,\n        val: CrossOriginElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void {\n        (instance as CrossOriginFocusedElementState).setVal(val, details);\n    }\n}\n\nexport class CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, Types.ObservedElementProps>\n    implements Types.CrossOriginObservedElementState\n{\n    private _tabster: Types.TabsterCore;\n    private _transactions: CrossOriginTransactions;\n    private _lastRequestFocusId = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        transactions: CrossOriginTransactions\n    ) {\n        super();\n        this._tabster = tabster;\n        this._transactions = transactions;\n    }\n\n    async getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null> {\n        return this.waitElement(observedName, 0, accessibility);\n    }\n\n    async waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null> {\n        return this._transactions\n            .beginTransaction(\n                GetElementTransaction,\n                {\n                    observedName,\n                    accessibility,\n                },\n                timeout\n            )\n            .then((value) =>\n                value\n                    ? StateTransaction.createElement(this._tabster, value)\n                    : null\n            );\n    }\n\n    async requestFocus(\n        observedName: string,\n        timeout: number\n    ): Promise<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        return this.waitElement(\n            observedName,\n            timeout,\n            Types.ObservedElementAccesibilities.Focusable\n        ).then((element) =>\n            this._lastRequestFocusId === requestId && element\n                ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this._tabster.crossOrigin!.focusedElement.focus(element, true)\n                : false\n        );\n    }\n\n    static trigger(\n        instance: Types.CrossOriginObservedElementState,\n        element: CrossOriginElement,\n        details: Types.ObservedElementProps\n    ): void {\n        (instance as CrossOriginObservedElementState).trigger(element, details);\n    }\n}\n\nexport class CrossOriginAPI implements Types.CrossOriginAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _transactions: CrossOriginTransactions;\n    private _blurTimer: number | undefined;\n    private _ctx: CrossOriginInstanceContext;\n\n    focusedElement: Types.CrossOriginFocusedElementState;\n    observedElement: Types.CrossOriginObservedElementState;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._ctx = {\n            ignoreKeyboardNavigationStateUpdate: false,\n            deloserByUId: {},\n        };\n\n        this._transactions = new CrossOriginTransactions(\n            tabster,\n            this._win,\n            this._ctx\n        );\n        this.focusedElement = new CrossOriginFocusedElementState(\n            this._transactions\n        );\n        this.observedElement = new CrossOriginObservedElementState(\n            tabster,\n            this._transactions\n        );\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp()) {\n            return this._transactions.setSendUp(sendUp);\n        } else {\n            this._tabster.queueInit(this._init);\n            return this._transactions.setup(sendUp);\n        }\n    }\n\n    isSetUp(): boolean {\n        return this._transactions.isSetUp;\n    }\n\n    private _init = (): void => {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.subscribe(this._onFocus);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        tabster.observedElement!.subscribe(this._onObserved);\n\n        if (!this._ctx.origOutlineSetup) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this._ctx.origOutlineSetup = tabster.outline!.setup;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tabster.outline!.setup = this._outlineSetup;\n        }\n\n        this._transactions\n            .beginTransaction(\n                BootstrapTransaction,\n                undefined,\n                undefined,\n                undefined,\n                _targetIdUp\n            )\n            .then((data) => {\n                if (\n                    data &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                        data.isNavigatingWithKeyboard\n                ) {\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = true;\n                    this._tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                        data.isNavigatingWithKeyboard\n                    );\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = false;\n                }\n            });\n    };\n\n    dispose(): void {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.unsubscribe(this._onFocus);\n        tabster.observedElement?.unsubscribe(this._onObserved);\n\n        this._transactions.dispose();\n        this.focusedElement.dispose();\n        this.observedElement.dispose();\n\n        this._ctx.deloserByUId = {};\n    }\n\n    private _onKeyboardNavigationStateChanged = (value: boolean): void => {\n        if (!this._ctx.ignoreKeyboardNavigationStateUpdate) {\n            this._transactions.beginTransaction(StateTransaction, {\n                state: CrossOriginStates.KeyboardNavigation,\n                ownerUId: getWindowUId(this._win()),\n                isNavigatingWithKeyboard: value,\n            });\n        }\n    };\n\n    private _onFocus = (element: HTMLElementWithUID | undefined): void => {\n        const win = this._win();\n\n        const ownerUId = getWindowUId(win);\n\n        if (this._blurTimer) {\n            win.clearTimeout(this._blurTimer);\n            this._blurTimer = undefined;\n        }\n\n        if (element) {\n            this._transactions.beginTransaction(StateTransaction, {\n                ...GetElementTransaction.getElementData(\n                    this._tabster,\n                    element,\n                    this._win,\n                    this._ctx,\n                    ownerUId\n                ),\n                state: CrossOriginStates.Focused,\n            });\n        } else {\n            this._blurTimer = win.setTimeout(() => {\n                this._blurTimer = undefined;\n\n                if (this._ctx.focusOwner && this._ctx.focusOwner === ownerUId) {\n                    this._transactions\n                        .beginTransaction(GetElementTransaction, undefined)\n                        .then((value) => {\n                            if (!value && this._ctx.focusOwner === ownerUId) {\n                                this._transactions.beginTransaction(\n                                    StateTransaction,\n                                    {\n                                        ownerUId,\n                                        state: CrossOriginStates.Blurred,\n                                        force: false,\n                                    }\n                                );\n                            }\n                        });\n                }\n            }, 0);\n        }\n    };\n\n    private _onObserved = (\n        element: HTMLElement,\n        details: Types.ObservedElementProps\n    ): void => {\n        const d = GetElementTransaction.getElementData(\n            this._tabster,\n            element,\n            this._win,\n            this._ctx,\n            getWindowUId(this._win())\n        ) as CrossOriginStateData;\n\n        d.state = CrossOriginStates.Observed;\n        d.observedName = details.names?.[0];\n        d.observedDetails = details.details;\n\n        this._transactions.beginTransaction(StateTransaction, d);\n    };\n\n    private _outlineSetup = (props?: Partial<Types.OutlineProps>): void => {\n        this._transactions.beginTransaction(StateTransaction, {\n            state: CrossOriginStates.Outline,\n            ownerUId: getWindowUId(this._win()),\n            outline: props,\n        });\n    };\n}\n\nfunction getDeloserUID(\n    getWindow: Types.GetWindow,\n    context: CrossOriginInstanceContext,\n    deloser: Types.Deloser\n): string | undefined {\n    const deloserElement = deloser.getElement();\n\n    if (deloserElement) {\n        const uid = getElementUId(getWindow, deloserElement);\n\n        if (!context.deloserByUId[uid]) {\n            context.deloserByUId[uid] = deloser;\n        }\n\n        return uid;\n    }\n\n    return undefined;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    getLastChild,\n    matchesSelector,\n    shouldIgnoreFocus,\n    HTMLElementWithDummyContainer,\n} from \"./Utils\";\n\nconst _focusableSelector = [\n    \"a[href]\",\n    \"button:not([disabled])\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"*[tabindex]\",\n    \"*[contenteditable]\",\n].join(\", \");\n\nexport class FocusableAPI implements Types.FocusableAPI {\n    private _tabster: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        /**/\n    }\n\n    getProps(element: HTMLElement): Types.FocusableProps {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n        return (tabsterOnElement && tabsterOnElement.focusable) || {};\n    }\n\n    isFocusable(\n        el: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            matchesSelector(el, _focusableSelector) &&\n            (includeProgrammaticallyFocusable || el.tabIndex !== -1)\n        ) {\n            return (\n                (noVisibleCheck || this.isVisible(el)) &&\n                (noAccessibleCheck || this.isAccessible(el))\n            );\n        }\n\n        return false;\n    }\n\n    isVisible(el: HTMLElement): boolean {\n        if (!el.ownerDocument) {\n            return false;\n        }\n\n        if (el.offsetParent === null && el.ownerDocument.body !== el) {\n            return false;\n        }\n\n        const win = el.ownerDocument.defaultView;\n\n        if (!win) {\n            return false;\n        }\n\n        const rect = el.ownerDocument.body.getBoundingClientRect();\n\n        if (rect.width === 0 && rect.height === 0) {\n            // This might happen, for example, if our <body> is in hidden <iframe>.\n            return false;\n        }\n\n        const computedStyle = win.getComputedStyle(el);\n\n        if (computedStyle.visibility === \"hidden\") {\n            return false;\n        }\n\n        return true;\n    }\n\n    isAccessible(el: HTMLElement): boolean {\n        for (let e: HTMLElement | null = el; e; e = e.parentElement) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (this._isHidden(e)) {\n                return false;\n            }\n\n            const ignoreDisabled =\n                tabsterOnElement?.focusable?.ignoreAriaDisabled;\n\n            if (!ignoreDisabled && this._isDisabled(e)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _isDisabled(el: HTMLElement): boolean {\n        return el.hasAttribute(\"disabled\");\n    }\n\n    private _isHidden(el: HTMLElement): boolean {\n        const attrVal = el.getAttribute(\"aria-hidden\");\n\n        if (attrVal && attrVal.toLowerCase() === \"true\") {\n            if (!this._tabster.modalizer?.isAugmented(el)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    findFirst(options: Types.FindFirstProps): HTMLElement | null | undefined {\n        return this.findElement({\n            ...options,\n        });\n    }\n\n    findLast(options: Types.FindFirstProps): HTMLElement | null | undefined {\n        return this.findElement({\n            isBackward: true,\n            ...options,\n        });\n    }\n\n    findNext(options: Types.FindNextProps): HTMLElement | null | undefined {\n        return this.findElement({\n            ...options,\n        });\n    }\n\n    findPrev(options: Types.FindNextProps): HTMLElement | null | undefined {\n        return this.findElement({\n            isBackward: true,\n            ...options,\n        });\n    }\n\n    findDefault(options: Types.FindDefaultProps): HTMLElement | null {\n        return (\n            this.findElement({\n                ...options,\n                acceptCondition: (el) =>\n                    this._tabster.focusable.isFocusable(\n                        el,\n                        options.includeProgrammaticallyFocusable\n                    ) && !!this.getProps(el).isDefault,\n            }) || null\n        );\n    }\n\n    findAll(options: Types.FindAllProps): HTMLElement[] {\n        return this._findElements(true, options) || [];\n    }\n\n    findElement(\n        options: Types.FindFocusableProps\n    ): HTMLElement | null | undefined {\n        const found = this._findElements(false, options);\n        return found ? found[0] : found;\n    }\n\n    private _findElements(\n        findAll: boolean,\n        options: Types.FindFocusableProps\n    ): HTMLElement[] | null | undefined {\n        const {\n            container,\n            currentElement = null,\n            includeProgrammaticallyFocusable,\n            useActiveModalizer,\n            ignoreUncontrolled,\n            ignoreAccessibility,\n            modalizerId,\n            isBackward,\n            onUncontrolled,\n            onElement,\n        } = options;\n\n        const elements: HTMLElement[] = [];\n\n        let { acceptCondition } = options;\n\n        if (!container) {\n            return null;\n        }\n\n        if (!acceptCondition) {\n            acceptCondition = (el) =>\n                this._tabster.focusable.isFocusable(\n                    el,\n                    includeProgrammaticallyFocusable,\n                    false,\n                    ignoreAccessibility\n                );\n        }\n\n        const acceptElementState: Types.FocusableAcceptElementState = {\n            container,\n            modalizerUserId:\n                modalizerId === undefined && useActiveModalizer\n                    ? this._tabster.modalizer?.activeId\n                    : modalizerId ||\n                      RootAPI.getTabsterContext(this._tabster, container)\n                          ?.modalizer?.userId,\n            from: currentElement || container,\n            isBackward,\n            acceptCondition,\n            includeProgrammaticallyFocusable,\n            ignoreUncontrolled,\n            ignoreAccessibility,\n            cachedGrouppers: {},\n        };\n\n        const walker = createElementTreeWalker(\n            container.ownerDocument,\n            container,\n            (node) =>\n                this._acceptElement(node as HTMLElement, acceptElementState)\n        );\n\n        if (!walker) {\n            return null;\n        }\n\n        const prepareForNextElement = (\n            shouldContinueIfNotFound?: boolean\n        ): boolean => {\n            const foundElement = acceptElementState.foundElement;\n\n            if (foundElement) {\n                elements.push(foundElement);\n            }\n\n            if (findAll) {\n                if (foundElement) {\n                    acceptElementState.found = false;\n                    delete acceptElementState.foundElement;\n                    delete acceptElementState.fromCtx;\n                    acceptElementState.from = foundElement;\n\n                    if (onElement && !onElement(foundElement)) {\n                        return false;\n                    }\n                }\n\n                return !!(foundElement || shouldContinueIfNotFound);\n            } else {\n                return !!(shouldContinueIfNotFound && !foundElement);\n            }\n        };\n\n        if (currentElement) {\n            walker.currentNode = currentElement;\n        } else if (isBackward) {\n            const lastChild = getLastChild(container);\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (\n                this._acceptElement(lastChild, acceptElementState) ===\n                    NodeFilter.FILTER_ACCEPT &&\n                !prepareForNextElement(true)\n            ) {\n                return elements;\n            }\n\n            walker.currentNode = lastChild;\n        }\n\n        let foundElement: HTMLElement | null | undefined;\n        do {\n            foundElement =\n                ((isBackward\n                    ? walker.previousNode()\n                    : walker.nextNode()) as HTMLElement | null) || undefined;\n        } while (prepareForNextElement());\n\n        if (!findAll) {\n            const nextUncontrolled = acceptElementState.nextUncontrolled;\n\n            if (nextUncontrolled) {\n                if (onUncontrolled) {\n                    onUncontrolled(nextUncontrolled);\n                }\n\n                if (foundElement) {\n                    // We have an uncontrolled area and there is a controlled element after it.\n                    // Return undefined for the default Tab action.\n                    return undefined;\n                } else {\n                    // Otherwise, return null to moveOutWithDefaultAction().\n                    return null;\n                }\n            }\n        }\n\n        return elements.length ? elements : null;\n    }\n\n    private _acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number {\n        if (state.found) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const container = state.container;\n\n        if (element === container) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (!container.contains(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (\n            (element as HTMLElementWithDummyContainer).__tabsterDummyContainer\n        ) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let lastToIgnore = state.lastToIgnore;\n\n        if (lastToIgnore) {\n            if (lastToIgnore.contains(element)) {\n                return NodeFilter.FILTER_REJECT;\n            } else {\n                lastToIgnore = state.lastToIgnore = undefined;\n            }\n        }\n\n        const ctx = (state.currentCtx = RootAPI.getTabsterContext(\n            this._tabster,\n            element\n        ));\n\n        // Tabster is opt in, if it is not managed, don't try and get do anything special\n        if (!ctx) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (state.ignoreUncontrolled) {\n            if (shouldIgnoreFocus(element)) {\n                return NodeFilter.FILTER_SKIP;\n            }\n        } else if (\n            ctx.uncontrolled &&\n            !state.nextUncontrolled &&\n            this._tabster.focusable.isFocusable(element, undefined, true, true)\n        ) {\n            if (!ctx.groupper && !ctx.mover) {\n                if (\n                    ctx.modalizer?.userId === this._tabster.modalizer?.activeId\n                ) {\n                    if (this.isVisible(ctx.uncontrolled)) {\n                        state.nextUncontrolled = ctx.uncontrolled;\n                    }\n                    return NodeFilter.FILTER_REJECT;\n                }\n            }\n        }\n\n        // We assume iframes are focusable because native tab behaviour would tab inside\n        if (element.tagName === \"IFRAME\" || element.tagName === \"WEBVIEW\") {\n            if (ctx.modalizer?.userId === this._tabster.modalizer?.activeId) {\n                state.found = true;\n                state.lastToIgnore = state.foundElement = element;\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        if (!state.ignoreAccessibility && !this.isAccessible(element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let result: number | undefined;\n\n        let fromCtx = state.fromCtx;\n\n        if (!fromCtx) {\n            fromCtx = state.fromCtx = RootAPI.getTabsterContext(\n                this._tabster,\n                state.from\n            );\n        }\n\n        const fromMover = fromCtx?.mover;\n        let groupper = ctx.groupper;\n        let mover = ctx.mover;\n\n        result = this._tabster.modalizer?.acceptElement(element, state);\n\n        if (result === undefined && (groupper || mover || fromMover)) {\n            const groupperElement = groupper?.getElement();\n            const fromMoverElement = fromMover?.getElement();\n            let moverElement = mover?.getElement();\n\n            if (\n                moverElement &&\n                fromMoverElement &&\n                container.contains(fromMoverElement) &&\n                (!groupperElement ||\n                    !mover ||\n                    fromMoverElement.contains(groupperElement))\n            ) {\n                mover = fromMover;\n                moverElement = fromMoverElement;\n            }\n\n            if (\n                groupperElement &&\n                (groupperElement === container ||\n                    !container.contains(groupperElement))\n            ) {\n                groupper = undefined;\n            }\n\n            if (moverElement && !container.contains(moverElement)) {\n                mover = undefined;\n            }\n\n            if (groupper && mover) {\n                if (\n                    moverElement &&\n                    groupperElement &&\n                    !groupperElement.contains(moverElement)\n                ) {\n                    mover = undefined;\n                } else {\n                    groupper = undefined;\n                }\n            }\n\n            if (groupper) {\n                result = groupper.acceptElement(element, state);\n            }\n\n            if (mover) {\n                result = mover.acceptElement(element, state);\n            }\n        }\n\n        if (result === undefined) {\n            result = state.acceptCondition(element)\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_SKIP;\n        }\n\n        if (result === NodeFilter.FILTER_ACCEPT && !state.found) {\n            state.found = true;\n            state.foundElement = element;\n        }\n\n        return result;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Keys: {\n    Tab: 9;\n    Enter: 13;\n    Esc: 27;\n    Space: 32;\n    PageUp: 33;\n    PageDown: 34;\n    End: 35;\n    Home: 36;\n    Left: 37;\n    Up: 38;\n    Right: 39;\n    Down: 40;\n} = {\n    Tab: 9,\n    Enter: 13,\n    Esc: 27,\n    Space: 32,\n    PageUp: 33,\n    PageDown: 34,\n    End: 35,\n    Home: 36,\n    Left: 37,\n    Up: 38,\n    Right: 39,\n    Down: 40,\n};\n\nexport type Key = typeof Keys[keyof typeof Keys];\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { KeyborgFocusInEvent, KEYBORG_FOCUSIN, nativeFocus } from \"keyborg\";\n\nimport { Keys } from \"../Keys\";\nimport { RootAPI } from \"../Root\";\nimport * as Types from \"../Types\";\nimport {\n    documentContains,\n    DummyInputManager,\n    getLastChild,\n    getAdjacentElement,\n    shouldIgnoreFocus,\n    WeakHTMLElement,\n    triggerEvent,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class FocusedElementState\n    extends Subscribable<HTMLElement | undefined, Types.FocusedElementDetails>\n    implements Types.FocusedElementState\n{\n    private static _lastResetElement: WeakHTMLElement | undefined;\n    private static _isTabbingTimer: number | undefined;\n    static isTabbing = false;\n\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _nextVal:\n        | {\n              element: WeakHTMLElement | undefined;\n              details: Types.FocusedElementDetails;\n          }\n        | undefined;\n    private _lastVal: WeakHTMLElement | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        super();\n\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n        const doc = win.document;\n\n        // Add these event listeners as capture - we want Tabster to run before user event handlers\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.addEventListener(\"focusout\", this._onFocusOut, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        const activeElement = doc.activeElement;\n\n        if (activeElement && activeElement !== doc.body) {\n            this._setFocusedElement(activeElement as HTMLElement);\n        }\n\n        this.subscribe(this._onChanged);\n    };\n\n    dispose(): void {\n        super.dispose();\n\n        const win = this._win();\n\n        win.document.removeEventListener(\n            KEYBORG_FOCUSIN,\n            this._onFocusIn,\n            true\n        );\n        win.document.removeEventListener(\"focusout\", this._onFocusOut, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        this.unsubscribe(this._onChanged);\n\n        delete FocusedElementState._lastResetElement;\n\n        delete this._nextVal;\n        delete this._lastVal;\n    }\n\n    static forgetMemorized(\n        instance: Types.FocusedElementState,\n        parent: HTMLElement\n    ): void {\n        let wel = FocusedElementState._lastResetElement;\n        let el = wel && wel.get();\n        if (el && parent.contains(el)) {\n            delete FocusedElementState._lastResetElement;\n        }\n\n        el = (instance as FocusedElementState)._nextVal?.element?.get();\n        if (el && parent.contains(el)) {\n            delete (instance as FocusedElementState)._nextVal;\n        }\n\n        wel = (instance as FocusedElementState)._lastVal;\n        el = wel && wel.get();\n        if (el && parent.contains(el)) {\n            delete (instance as FocusedElementState)._lastVal;\n        }\n    }\n\n    getFocusedElement(): HTMLElement | undefined {\n        return this.getVal();\n    }\n\n    getLastFocusedElement(): HTMLElement | undefined {\n        let el = this._lastVal?.get();\n\n        if (!el || (el && !documentContains(el.ownerDocument, el))) {\n            this._lastVal = el = undefined;\n        }\n\n        return el;\n    }\n\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            !this._tabster.focusable.isFocusable(\n                element,\n                noFocusedProgrammaticallyFlag,\n                false,\n                noAccessibleCheck\n            )\n        ) {\n            return false;\n        }\n\n        element.focus();\n\n        return true;\n    }\n\n    focusDefault(container: HTMLElement): boolean {\n        const el = this._tabster.focusable.findDefault({ container });\n\n        if (el) {\n            this._tabster.focusedElement.focus(el);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<\n            Types.FindFocusableProps,\n            \"container\" | \"ignoreAccessibility\"\n        >\n    ): HTMLElement | undefined {\n        const tabsterFocusable = this._tabster.focusable;\n        const { container, ignoreAccessibility } = props;\n        let uncontrolled: HTMLElement | undefined;\n        let toFocus: HTMLElement | null | undefined;\n\n        if (container) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            if (ctx) {\n                let next = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    container,\n                    undefined,\n                    !isFirst,\n                    undefined,\n                    ignoreAccessibility\n                );\n\n                if (next) {\n                    toFocus = next.element;\n                    uncontrolled = next.uncontrolled;\n\n                    while (!toFocus && uncontrolled) {\n                        if (\n                            tabsterFocusable.isFocusable(\n                                uncontrolled,\n                                false,\n                                true,\n                                true\n                            )\n                        ) {\n                            toFocus = uncontrolled;\n                        } else {\n                            toFocus = tabsterFocusable[\n                                isFirst ? \"findFirst\" : \"findLast\"\n                            ]({\n                                container: uncontrolled,\n                                ignoreUncontrolled: true,\n                                ignoreAccessibility,\n                                useActiveModalizer: true,\n                            });\n                        }\n\n                        if (!toFocus) {\n                            next = FocusedElementState.findNextTabbable(\n                                this._tabster,\n                                ctx,\n                                uncontrolled,\n                                undefined,\n                                !isFirst,\n                                undefined,\n                                ignoreAccessibility\n                            );\n\n                            if (next) {\n                                toFocus = next.element;\n                                uncontrolled = next.uncontrolled;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        if (toFocus && !container?.contains(toFocus)) {\n            toFocus = undefined;\n        }\n\n        return toFocus || undefined;\n    }\n\n    private _focusFirstOrLast(\n        isFirst: boolean,\n        props: Types.FindFirstProps\n    ): boolean {\n        const toFocus = this.getFirstOrLastTabbable(isFirst, props);\n\n        if (toFocus) {\n            this.focus(toFocus, false, true);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    focusFirst(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(true, props);\n    }\n\n    focusLast(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(false, props);\n    }\n\n    resetFocus(container: HTMLElement): boolean {\n        if (!this._tabster.focusable.isVisible(container)) {\n            return false;\n        }\n\n        if (!this._tabster.focusable.isFocusable(container, true, true, true)) {\n            const prevTabIndex = container.getAttribute(\"tabindex\");\n            const prevAriaHidden = container.getAttribute(\"aria-hidden\");\n\n            container.tabIndex = -1;\n            container.setAttribute(\"aria-hidden\", \"true\");\n\n            FocusedElementState._lastResetElement = new WeakHTMLElement(\n                this._win,\n                container\n            );\n\n            this.focus(container, true, true);\n\n            this._setOrRemoveAttribute(container, \"tabindex\", prevTabIndex);\n            this._setOrRemoveAttribute(\n                container,\n                \"aria-hidden\",\n                prevAriaHidden\n            );\n        } else {\n            this.focus(container);\n        }\n\n        return true;\n    }\n\n    private _setOrRemoveAttribute(\n        element: HTMLElement,\n        name: string,\n        value: string | null\n    ): void {\n        if (value === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, value);\n        }\n    }\n\n    private _setFocusedElement(\n        element?: HTMLElement,\n        relatedTarget?: HTMLElement,\n        isFocusedProgrammatically?: boolean\n    ): void {\n        if (this._tabster._noop) {\n            return;\n        }\n\n        const details: Types.FocusedElementDetails = { relatedTarget };\n\n        if (element) {\n            const lastResetElement =\n                FocusedElementState._lastResetElement?.get();\n            FocusedElementState._lastResetElement = undefined;\n\n            if (lastResetElement === element || shouldIgnoreFocus(element)) {\n                return;\n            }\n\n            details.isFocusedProgrammatically = isFocusedProgrammatically;\n\n            const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n            const modalizerId = ctx?.modalizer?.userId;\n\n            if (modalizerId) {\n                details.modalizerId = modalizerId;\n            }\n        }\n\n        const nextVal = (this._nextVal = {\n            element: element\n                ? new WeakHTMLElement(this._win, element)\n                : undefined,\n            details,\n        });\n\n        if (element && element !== this._val) {\n            this._validateFocusedElement(element);\n        }\n\n        // _validateFocusedElement() might cause the refocus which will trigger\n        // another call to this function. Making sure that the value is correct.\n        if (this._nextVal === nextVal) {\n            this.setVal(element, details);\n        }\n\n        this._nextVal = undefined;\n    }\n\n    protected setVal(\n        val: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void {\n        super.setVal(val, details);\n\n        if (val) {\n            this._lastVal = new WeakHTMLElement(this._win, val);\n        }\n    }\n\n    private _onFocusIn = (e: KeyborgFocusInEvent): void => {\n        this._setFocusedElement(\n            e.target as HTMLElement,\n            e.details.relatedTarget as HTMLElement | undefined,\n            e.details.isFocusedProgrammatically\n        );\n    };\n\n    private _onFocusOut = (e: FocusEvent): void => {\n        this._setFocusedElement(\n            undefined,\n            e.relatedTarget as HTMLElement | undefined\n        );\n    };\n\n    static findNextTabbable(\n        tabster: Types.TabsterCore,\n        ctx: Types.TabsterContext,\n        container?: HTMLElement,\n        currentElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreUncontrolled?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const actualContainer = container || ctx.root.getElement();\n\n        if (!actualContainer) {\n            return null;\n        }\n\n        let next: Types.NextTabbable | null = null;\n\n        const isTabbingTimer = FocusedElementState._isTabbingTimer;\n        const win = tabster.getWindow();\n\n        if (isTabbingTimer) {\n            win.clearTimeout(isTabbingTimer);\n        }\n\n        FocusedElementState.isTabbing = true;\n        FocusedElementState._isTabbingTimer = win.setTimeout(() => {\n            delete FocusedElementState._isTabbingTimer;\n            FocusedElementState.isTabbing = false;\n        }, 0);\n\n        const callFindNext = (\n            what: Types.Groupper | Types.Mover | Types.Modalizer,\n            cur?: HTMLElement\n        ) => {\n            next = what.findNextTabbable(\n                cur || currentElement,\n                isBackward,\n                ignoreUncontrolled,\n                ignoreAccessibility\n            );\n\n            const lastMoverOrGroupper = next?.lastMoverOrGroupper;\n\n            if (lastMoverOrGroupper && !next?.element && !next?.uncontrolled) {\n                // Handling nested Movers and Grouppers. If not found in the current one,\n                // try the parent one.\n                const lastMoverOrGroupperElement =\n                    lastMoverOrGroupper.getElement();\n                const parentElement = lastMoverOrGroupperElement?.parentElement;\n                const parentCtx =\n                    parentElement &&\n                    RootAPI.getTabsterContext(tabster, parentElement);\n\n                if (parentCtx) {\n                    const isGroupperFirst = parentCtx.isGroupperFirst;\n                    const parentMoverOrGroupper = isGroupperFirst\n                        ? parentCtx.groupper\n                        : parentCtx.mover;\n\n                    if (parentMoverOrGroupper) {\n                        const newCurrent = isBackward\n                            ? lastMoverOrGroupperElement\n                            : getLastChild(lastMoverOrGroupperElement);\n\n                        callFindNext(parentMoverOrGroupper, newCurrent);\n\n                        if (next) {\n                            next.outOfDOMOrder = true;\n                        }\n                    }\n                }\n            }\n        };\n\n        const modalizer = ctx.modalizer;\n        const groupper = ctx.groupper;\n        const mover = ctx.mover;\n\n        if (groupper && mover) {\n            callFindNext(ctx.isGroupperFirst ? groupper : mover);\n        } else if (groupper) {\n            callFindNext(groupper);\n        } else if (mover) {\n            callFindNext(mover);\n        } else if (modalizer) {\n            callFindNext(modalizer);\n        } else {\n            let uncontrolled: HTMLElement | undefined;\n            const onUncontrolled = (el: HTMLElement) => {\n                uncontrolled = el;\n            };\n            const nextElement = isBackward\n                ? tabster.focusable.findPrev({\n                      container: actualContainer,\n                      currentElement,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  })\n                : tabster.focusable.findNext({\n                      container: actualContainer,\n                      currentElement,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  });\n\n            next = {\n                element: uncontrolled ? undefined : nextElement,\n                uncontrolled,\n            };\n        }\n\n        const lastMoverOrGroupper = next?.lastMoverOrGroupper;\n        const lastMoverOrGroupperElement = lastMoverOrGroupper?.getElement();\n\n        if (lastMoverOrGroupperElement) {\n            next = null;\n\n            const adjacentElement = getAdjacentElement(\n                lastMoverOrGroupperElement,\n                isBackward\n            );\n\n            if (adjacentElement) {\n                const adjacentCtx = RootAPI.getTabsterContext(\n                    tabster,\n                    adjacentElement,\n                    {\n                        checkRtl: true,\n                    }\n                );\n\n                if (adjacentCtx) {\n                    let adjacentFrom = getAdjacentElement(\n                        adjacentElement,\n                        !isBackward\n                    );\n\n                    if (adjacentFrom) {\n                        if (!isBackward) {\n                            adjacentFrom =\n                                getLastChild(adjacentFrom) || adjacentFrom;\n                        }\n\n                        next = FocusedElementState.findNextTabbable(\n                            tabster,\n                            adjacentCtx,\n                            actualContainer,\n                            adjacentFrom,\n                            isBackward,\n                            ignoreUncontrolled,\n                            ignoreAccessibility\n                        );\n\n                        if (next && !next.lastMoverOrGroupper) {\n                            next.lastMoverOrGroupper = lastMoverOrGroupper;\n                        }\n                    }\n                }\n            }\n        }\n\n        return next;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _validateFocusedElement = (element: HTMLElement): void => {\n        // TODO: Make sure this is not needed anymore and write tests.\n    };\n\n    private _onKeyDown = (e: KeyboardEvent): void => {\n        if (e.keyCode !== Keys.Tab || e.ctrlKey) {\n            return;\n        }\n\n        const currentElement = this.getVal();\n\n        if (\n            !currentElement ||\n            !currentElement.ownerDocument ||\n            currentElement.contentEditable === \"true\"\n        ) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const controlTab = tabster.controlTab;\n        const ctx = RootAPI.getTabsterContext(tabster, currentElement);\n\n        if (!ctx || ctx.ignoreKeydown(e)) {\n            return;\n        }\n\n        const isBackward = e.shiftKey;\n\n        const next = FocusedElementState.findNextTabbable(\n            tabster,\n            ctx,\n            undefined,\n            currentElement,\n            isBackward,\n            undefined,\n            true\n        );\n\n        let nextElement: HTMLElement | null | undefined;\n\n        if (next) {\n            let uncontrolled = next.uncontrolled;\n\n            if (uncontrolled) {\n                const isGroupperFirst = ctx.isGroupperFirst;\n                let moveOutside = false;\n\n                if (isGroupperFirst !== undefined) {\n                    const groupper = ctx.groupper?.getElement();\n                    const mover = ctx.mover?.getElement();\n                    let moveFrom: HTMLElement | undefined;\n\n                    if (\n                        isGroupperFirst &&\n                        groupper &&\n                        uncontrolled.contains(groupper)\n                    ) {\n                        moveFrom = groupper;\n                    } else if (\n                        !isGroupperFirst &&\n                        mover &&\n                        uncontrolled.contains(mover)\n                    ) {\n                        moveFrom = mover;\n                    }\n\n                    if (moveFrom) {\n                        uncontrolled = moveFrom;\n                        moveOutside = true;\n                    }\n                }\n\n                if (uncontrolled && ctx.uncontrolled !== uncontrolled) {\n                    // We have met an uncontrolled area, just allow default action.\n                    DummyInputManager.moveWithPhantomDummy(\n                        this._tabster,\n                        uncontrolled,\n                        moveOutside,\n                        isBackward\n                    );\n                }\n\n                return;\n            }\n\n            nextElement = next.element;\n        }\n\n        if (nextElement) {\n            const preventDefault = () => {\n                e.preventDefault();\n                e.stopImmediatePropagation();\n            };\n\n            // For iframes just allow normal Tab behaviour\n            if (!controlTab) {\n                const lastMoverOrGroupper = next?.lastMoverOrGroupper;\n                let outOfDOMOrder = next?.outOfDOMOrder;\n\n                if (\n                    !outOfDOMOrder &&\n                    currentElement.compareDocumentPosition(nextElement) &\n                        (isBackward\n                            ? document.DOCUMENT_POSITION_FOLLOWING\n                            : document.DOCUMENT_POSITION_PRECEDING)\n                ) {\n                    outOfDOMOrder = true;\n                }\n\n                if (outOfDOMOrder) {\n                    // The next element is out of DOM order (for example because of a trapped groupper),\n                    // do not let the browser to move focus.\n                    preventDefault();\n\n                    nativeFocus(nextElement);\n                } else if (lastMoverOrGroupper) {\n                    lastMoverOrGroupper.dummyManager?.moveOutWithDefaultAction(\n                        isBackward\n                    );\n                } else if (ctx.modalizer) {\n                    const nextElementCtx = RootAPI.getTabsterContext(\n                        tabster,\n                        nextElement\n                    );\n\n                    if (\n                        (!nextElementCtx ||\n                            ctx.root.uid !== nextElementCtx.root.uid ||\n                            !nextElementCtx.modalizer?.isActive()) &&\n                        ctx.modalizer.triggerFocusEvent(\n                            Types.ModalizerBeforeFocusOutEventName,\n                            true\n                        )\n                    ) {\n                        preventDefault();\n                    } else if (\n                        !ctx.modalizer.getElement()?.contains(nextElement)\n                    ) {\n                        preventDefault();\n                        ctx.modalizer.dummyManager?.moveOut(isBackward);\n                    }\n                }\n            } else if (nextElement.tagName !== \"IFRAME\") {\n                preventDefault();\n\n                nativeFocus(nextElement);\n            }\n        } else {\n            ctx.root.moveOutWithDefaultAction(isBackward);\n        }\n    };\n\n    _onChanged = (\n        element: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void => {\n        if (element) {\n            triggerEvent(element, Types.FocusInEventName, details);\n        } else {\n            const last = this._lastVal?.get();\n\n            if (last) {\n                const d = { ...details };\n                const lastCtx = RootAPI.getTabsterContext(this._tabster, last);\n                const modalizerId = lastCtx?.modalizer?.userId;\n\n                if (modalizerId) {\n                    d.modalizerId = modalizerId;\n                }\n\n                triggerEvent(last, Types.FocusOutEventName, d);\n            }\n        }\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    HTMLElementWithDummyContainer,\n    TabsterPart,\n    WeakHTMLElement,\n    getAdjacentElement,\n} from \"./Utils\";\n\nclass GroupperDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        groupper: Groupper,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Groupper,\n            sys,\n            true\n        );\n\n        this._setHandlers(\n            (\n                dummyInput: DummyInput,\n                isBackward: boolean,\n                relatedTarget: HTMLElement | null\n            ) => {\n                const container = element.get();\n                const input = dummyInput.input;\n\n                if (container && input) {\n                    const ctx = RootAPI.getTabsterContext(tabster, input);\n\n                    if (ctx) {\n                        let next: HTMLElement | null | undefined;\n\n                        next = groupper.findNextTabbable(\n                            relatedTarget || undefined,\n                            isBackward,\n                            true,\n                            true\n                        )?.element;\n\n                        if (!next) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                ctx,\n                                undefined,\n                                dummyInput.isOutside\n                                    ? input\n                                    : getAdjacentElement(\n                                          container,\n                                          !isBackward\n                                      ),\n                                isBackward,\n                                true,\n                                true\n                            )?.element;\n                        }\n\n                        if (next) {\n                            nativeFocus(next);\n                        }\n                    }\n                }\n            }\n        );\n    }\n}\n\nexport class Groupper\n    extends TabsterPart<Types.GroupperProps>\n    implements Types.Groupper\n{\n    private _shouldTabInside = false;\n    private _first: WeakHTMLElement | undefined;\n    private _onDispose: (groupper: Groupper) => void;\n\n    dummyManager: GroupperDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (groupper: Groupper) => void,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n        this.makeTabbable(false);\n\n        this._onDispose = onDispose;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new GroupperDummyManager(\n                this._element,\n                this,\n                tabster,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const element = this._element.get();\n        this.dummyManager?.dispose();\n\n        if (element) {\n            if (__DEV__) {\n                _setInformativeStyle(this._element, true);\n            }\n        }\n\n        delete this._first;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreUncontrolled?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const groupperElement = this.getElement();\n\n        if (!groupperElement) {\n            return null;\n        }\n\n        const currentIsDummy =\n            (\n                currentElement as HTMLElementWithDummyContainer\n            )?.__tabsterDummyContainer?.get() === groupperElement;\n\n        if (\n            !this._shouldTabInside &&\n            currentElement &&\n            groupperElement.contains(currentElement) &&\n            !currentIsDummy\n        ) {\n            return { element: undefined, lastMoverOrGroupper: this };\n        }\n\n        const groupperFirstFocusable = this.getFirst(true);\n\n        if (\n            !currentElement ||\n            !groupperElement.contains(currentElement) ||\n            currentIsDummy\n        ) {\n            return {\n                element: groupperFirstFocusable,\n                lastMoverOrGroupper: groupperFirstFocusable ? undefined : this,\n            };\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let uncontrolled: HTMLElement | undefined;\n        const onUncontrolled = (el: HTMLElement) => {\n            uncontrolled = el;\n        };\n\n        if (this._shouldTabInside && groupperFirstFocusable) {\n            next = isBackward\n                ? tabster.focusable.findPrev({\n                      container: groupperElement,\n                      currentElement,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  })\n                : tabster.focusable.findNext({\n                      container: groupperElement,\n                      currentElement,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  });\n\n            if (\n                !uncontrolled &&\n                !next &&\n                this._props.tabbability ===\n                    Types.GroupperTabbabilities.LimitedTrapFocus\n            ) {\n                next = isBackward\n                    ? tabster.focusable.findLast({\n                          container: groupperElement,\n                          ignoreUncontrolled: true,\n                          ignoreAccessibility,\n                          useActiveModalizer: true,\n                      })\n                    : tabster.focusable.findFirst({\n                          container: groupperElement,\n                          ignoreUncontrolled: true,\n                          ignoreAccessibility,\n                          useActiveModalizer: true,\n                      });\n            }\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            lastMoverOrGroupper: next || uncontrolled ? undefined : this,\n        };\n    }\n\n    makeTabbable(isTabbable: boolean): void {\n        this._shouldTabInside = isTabbable || !this._props.tabbability;\n\n        if (__DEV__) {\n            _setInformativeStyle(this._element, !this._shouldTabInside);\n        }\n    }\n\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined {\n        const element = this.getElement() || null;\n        let isParentActive = true;\n\n        for (let e = element?.parentElement; e; e = e.parentElement) {\n            const g = getTabsterOnElement(this._tabster, e)?.groupper as\n                | Groupper\n                | undefined;\n\n            if (g) {\n                if (!g._shouldTabInside) {\n                    isParentActive = false;\n                }\n            }\n        }\n\n        let ret = isParentActive\n            ? this._props.tabbability\n                ? this._shouldTabInside\n                : false\n            : undefined;\n\n        if (ret && noIfFirstIsFocused) {\n            const focused = this._tabster.focusedElement.getFocusedElement();\n\n            if (focused) {\n                ret = focused !== this.getFirst(true);\n            }\n        }\n\n        return ret;\n    }\n\n    getFirst(orContainer: boolean): HTMLElement | undefined {\n        const groupperElement = this.getElement();\n        let first: HTMLElement | undefined;\n\n        if (groupperElement) {\n            if (\n                orContainer &&\n                this._tabster.focusable.isFocusable(groupperElement)\n            ) {\n                return groupperElement;\n            }\n\n            first = this._first?.get();\n\n            if (!first) {\n                first =\n                    this._tabster.focusable.findFirst({\n                        container: groupperElement,\n                        ignoreUncontrolled: true,\n                        useActiveModalizer: true,\n                    }) || undefined;\n\n                if (first) {\n                    this.setFirst(first);\n                }\n            }\n        }\n\n        return first;\n    }\n\n    setFirst(element: HTMLElement | undefined): void {\n        if (element) {\n            this._first = new WeakHTMLElement(this._tabster.getWindow, element);\n        } else {\n            delete this._first;\n        }\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const cachedGrouppers = state.cachedGrouppers;\n\n        const parentElement = this.getElement()?.parentElement;\n        const parentCtx =\n            parentElement &&\n            RootAPI.getTabsterContext(this._tabster, parentElement);\n        const parentCtxGroupper = parentCtx?.groupper;\n        const parentGroupper = parentCtx?.isGroupperFirst\n            ? parentCtxGroupper\n            : undefined;\n        let parentGroupperElement: HTMLElement | undefined;\n\n        const getIsActive = (groupper: Types.Groupper) => {\n            let cached = cachedGrouppers[groupper.id];\n            let isActive: boolean | undefined;\n\n            if (cached) {\n                isActive = cached.isActive;\n            } else {\n                isActive = this.isActive(true);\n\n                cached = cachedGrouppers[groupper.id] = {\n                    isActive,\n                };\n            }\n\n            return isActive;\n        };\n\n        if (parentGroupper) {\n            parentGroupperElement = parentGroupper.getElement();\n\n            if (\n                !getIsActive(parentGroupper) &&\n                parentGroupperElement &&\n                state.container !== parentGroupperElement &&\n                state.container.contains(parentGroupperElement)\n            ) {\n                // Do not fall into a child groupper of inactive parent groupper if it's in the scope of the search.\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        const isActive = getIsActive(this);\n        const groupperElement = this.getElement();\n\n        if (groupperElement) {\n            if (isActive !== true) {\n                if (groupperElement === element && parentCtxGroupper) {\n                    if (!parentGroupperElement) {\n                        parentGroupperElement = parentCtxGroupper.getElement();\n                    }\n\n                    if (\n                        parentGroupperElement &&\n                        !getIsActive(parentCtxGroupper) &&\n                        state.container.contains(parentGroupperElement) &&\n                        parentGroupperElement !== state.container\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n\n                if (\n                    groupperElement !== element &&\n                    groupperElement.contains(element)\n                ) {\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                const cached = cachedGrouppers[this.id];\n                let first: HTMLElement | null | undefined;\n\n                if (\"first\" in cached) {\n                    first = cached.first;\n                } else {\n                    first = cached.first = this.getFirst(true);\n                }\n\n                if (first && state.acceptCondition(first)) {\n                    state.lastToIgnore = groupperElement;\n\n                    if (first !== state.from) {\n                        state.found = true;\n                        state.foundElement = first;\n                        return NodeFilter.FILTER_ACCEPT;\n                    } else {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateGroupperProps(props: Types.GroupperProps): void {\n    // TODO: Implement validation.\n}\n\nexport class GroupperAPI implements Types.GroupperAPI {\n    private _tabster: Types.TabsterCore;\n    private _updateTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _current: Record<string, Types.Groupper> = {};\n    private _grouppers: Record<string, Types.Groupper> = {};\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        // Making sure groupper's onFocus is called before modalizer's onFocus.\n        this._tabster.focusedElement.subscribeFirst(this._onFocus);\n\n        win.document.addEventListener(\"mousedown\", this._onMouseDown, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._current = {};\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\"mousedown\", this._onMouseDown, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        Object.keys(this._grouppers).forEach((groupperId) => {\n            if (this._grouppers[groupperId]) {\n                this._grouppers[groupperId].dispose();\n                delete this._grouppers[groupperId];\n            }\n        });\n    }\n\n    createGroupper(\n        element: HTMLElement,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        if (__DEV__) {\n            validateGroupperProps(props);\n        }\n\n        const newGroupper = new Groupper(\n            this._tabster,\n            element,\n            this._onGroupperDispose,\n            props,\n            sys\n        );\n\n        this._grouppers[newGroupper.id] = newGroupper;\n\n        const focusedElement = this._tabster.focusedElement.getFocusedElement();\n\n        // Newly created groupper contains currently focused element, update the state on the next tick (to\n        // make sure all grouppers are processed).\n        if (\n            focusedElement &&\n            element.contains(focusedElement) &&\n            !this._updateTimer\n        ) {\n            this._updateTimer = this._win().setTimeout(() => {\n                delete this._updateTimer;\n                // Making sure the focused element hasn't changed.\n                if (\n                    focusedElement ===\n                    this._tabster.focusedElement.getFocusedElement()\n                ) {\n                    this._updateCurrent(focusedElement, true, true);\n                }\n            }, 0);\n        }\n\n        return newGroupper;\n    }\n\n    forgetCurrentGrouppers(): void {\n        this._current = {};\n    }\n\n    private _onGroupperDispose = (groupper: Groupper) => {\n        delete this._grouppers[groupper.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        if (element) {\n            this._updateCurrent(element, true, true);\n        }\n    };\n\n    private _onMouseDown = (e: MouseEvent): void => {\n        if (e.target) {\n            this._updateCurrent(e.target as HTMLElement, true);\n        }\n    };\n\n    private _updateCurrent(\n        element: HTMLElement,\n        includeTarget?: boolean,\n        checkTarget?: boolean\n    ): void {\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        const newIds: Record<string, true> = {};\n\n        let isTarget = true;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = el.parentElement\n        ) {\n            const groupper = getTabsterOnElement(this._tabster, el)?.groupper;\n\n            if (groupper) {\n                newIds[groupper.id] = true;\n\n                if (isTarget && checkTarget && el !== element) {\n                    isTarget = false;\n                }\n\n                if (includeTarget || !isTarget) {\n                    this._current[groupper.id] = groupper;\n                    const isTabbable =\n                        groupper.isActive() ||\n                        (element !== el &&\n                            (!groupper.getProps().delegated ||\n                                groupper.getFirst(false) !== element));\n\n                    groupper.makeTabbable(isTabbable);\n                }\n\n                isTarget = false;\n            }\n        }\n\n        for (const id of Object.keys(this._current)) {\n            const groupper = this._current[id];\n\n            if (!(groupper.id in newIds)) {\n                groupper.makeTabbable(false);\n                groupper.setFirst(undefined);\n                delete this._current[id];\n            }\n        }\n    }\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.keyCode !== Keys.Enter && event.keyCode !== Keys.Esc) {\n            return;\n        }\n\n        const element = this._tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            this.handleKeyPress(element, event);\n        }\n    };\n\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        noGoUp?: boolean\n    ): void {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const modalizerInGroupper = ctx?.modalizerInGroupper;\n        let groupper = ctx?.groupper || modalizerInGroupper;\n\n        if (ctx && groupper) {\n            if (ctx.ignoreKeydown(event)) {\n                return;\n            }\n\n            let next: HTMLElement | null | undefined;\n\n            const groupperElement = groupper.getElement();\n\n            if (event.keyCode === Keys.Enter) {\n                if (\n                    groupperElement &&\n                    (element === groupperElement ||\n                        (groupper.getProps().delegated &&\n                            element === groupper.getFirst(false)))\n                ) {\n                    next = tabster.focusable.findNext({\n                        container: groupperElement,\n                        currentElement: element,\n                        useActiveModalizer: true,\n                    });\n                }\n            } else if (event.keyCode === Keys.Esc) {\n                if (groupperElement && groupperElement.contains(element)) {\n                    if (element !== groupperElement || noGoUp) {\n                        next = groupper.getFirst(true);\n                    } else {\n                        const parentElement = groupperElement.parentElement;\n                        const parentCtx = parentElement\n                            ? RootAPI.getTabsterContext(tabster, parentElement)\n                            : undefined;\n\n                        groupper = parentCtx?.groupper;\n                        next = groupper?.getFirst(true);\n                    }\n                }\n\n                if (groupper) {\n                    groupper.makeTabbable(false);\n\n                    if (modalizerInGroupper) {\n                        tabster.modalizer?.setActive(undefined);\n                    }\n                }\n            }\n\n            if (next) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n\n                next.focus();\n            }\n        }\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: Types.WeakHTMLElement,\n    remove: boolean\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-groupper\");\n            } else {\n                element.style.setProperty(\"--tabster-groupper\", \"unlimited\");\n            }\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { createKeyborg, disposeKeyborg, Keyborg } from \"keyborg\";\n\nimport * as Types from \"../Types\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class KeyboardNavigationState\n    extends Subscribable<boolean>\n    implements Types.KeyboardNavigationState\n{\n    private _keyborg?: Keyborg;\n\n    constructor(getWindow: Types.GetWindow) {\n        super();\n        this._keyborg = createKeyborg(getWindow());\n        this._keyborg.subscribe(this._onChange);\n    }\n\n    dispose(): void {\n        super.dispose();\n\n        if (this._keyborg) {\n            this._keyborg.unsubscribe(this._onChange);\n\n            disposeKeyborg(this._keyborg);\n\n            delete this._keyborg;\n        }\n    }\n\n    private _onChange = (isNavigatingWithKeyboard: boolean) => {\n        this.setVal(isNavigatingWithKeyboard, undefined);\n    };\n\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void {\n        this._keyborg?.setVal(isNavigatingWithKeyboard);\n    }\n\n    isNavigatingWithKeyboard(): boolean {\n        return !!this._keyborg?.isNavigatingWithKeyboard();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { Keys } from \"./Keys\";\nimport * as Types from \"./Types\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    HTMLElementWithDummyContainer,\n    TabsterPart,\n    WeakHTMLElement,\n    triggerEvent,\n    augmentAttribute,\n} from \"./Utils\";\n\nlet _wasFocusedCounter = 0;\n\nconst _ariaHidden = \"aria-hidden\";\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    internalId?: string,\n    userId?: string,\n    isActive?: boolean,\n    wasFocused?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-modalizer\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-modalizer\",\n                    internalId +\n                        \",\" +\n                        userId +\n                        \",\" +\n                        (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        \",\" +\n                        (wasFocused ? `focused(${wasFocused})` : \"not-focused\")\n                );\n            }\n        }\n    }\n}\n\n/**\n * Manages the dummy inputs for the Modalizer.\n */\nclass ModalizerDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Modalizer, sys);\n\n        this._setHandlers((dummyInput: DummyInput, isBackward: boolean) => {\n            const el = element.get();\n            const container = el && RootAPI.getRoot(tabster, el)?.getElement();\n            const input = dummyInput.input;\n            let toFocus: HTMLElement | null | undefined;\n\n            if (container && input) {\n                const dummyContainer = (\n                    input as HTMLElementWithDummyContainer\n                ).__tabsterDummyContainer?.get();\n\n                const ctx = RootAPI.getTabsterContext(\n                    tabster,\n                    dummyContainer || input\n                );\n\n                if (ctx) {\n                    toFocus = FocusedElementState.findNextTabbable(\n                        tabster,\n                        ctx,\n                        container,\n                        input,\n                        isBackward,\n                        true,\n                        true\n                    )?.element;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        });\n    }\n}\n\nexport class Modalizer\n    extends TabsterPart<Types.ModalizerProps>\n    implements Types.Modalizer\n{\n    userId: string;\n\n    private _isActive: boolean | undefined;\n    private _wasFocused = 0;\n    private _onDispose: (modalizer: Modalizer) => void;\n    private _activeElements: WeakRef<HTMLElement>[];\n\n    dummyManager: ModalizerDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (modalizer: Modalizer) => void,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined,\n        activeElements: WeakRef<HTMLElement>[]\n    ) {\n        super(tabster, element, props);\n\n        this.userId = props.id;\n        this._onDispose = onDispose;\n        this._activeElements = activeElements;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new ModalizerDummyManager(\n                this._element,\n                tabster,\n                sys\n            );\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this.id,\n                this.userId,\n                this._isActive,\n                this._wasFocused\n            );\n        }\n    }\n\n    makeActive(isActive: boolean): void {\n        if (this._isActive !== isActive) {\n            this._isActive = isActive;\n\n            const element = this.getElement();\n\n            if (element) {\n                const activeElements = this._activeElements;\n                const index = activeElements\n                    .map((e) => e.deref())\n                    .indexOf(element);\n\n                if (isActive) {\n                    if (index < 0) {\n                        activeElements.push(new WeakRef(element));\n                    }\n                } else {\n                    if (index >= 0) {\n                        activeElements.splice(index, 1);\n                    }\n                }\n            }\n\n            if (__DEV__) {\n                _setInformativeStyle(\n                    this._element,\n                    false,\n                    this.id,\n                    this.userId,\n                    this._isActive,\n                    this._wasFocused\n                );\n            }\n\n            this.triggerFocusEvent(\n                isActive\n                    ? Types.ModalizerActiveEventName\n                    : Types.ModalizerInactiveEventName\n            );\n        }\n    }\n\n    focused(noIncrement?: boolean): number {\n        if (!noIncrement) {\n            this._wasFocused = ++_wasFocusedCounter;\n        }\n\n        return this._wasFocused;\n    }\n\n    setProps(props: Types.ModalizerProps): void {\n        if (props.id) {\n            this.userId = props.id;\n        }\n\n        this._props = { ...props };\n    }\n\n    dispose(): void {\n        this.makeActive(false);\n        this._onDispose(this);\n        this.dummyManager?.dispose();\n        this._activeElements = [];\n        this._remove();\n    }\n\n    isActive(): boolean {\n        return !!this._isActive;\n    }\n\n    contains(element: HTMLElement) {\n        return !!this.getElement()?.contains(element);\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreUncontrolled?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const modalizerElement = this.getElement();\n\n        if (!modalizerElement) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let uncontrolled: HTMLElement | undefined;\n        const onUncontrolled = (el: HTMLElement) => {\n            uncontrolled = el;\n        };\n\n        const container =\n            currentElement &&\n            RootAPI.getRoot(tabster, currentElement)?.getElement();\n\n        if (container) {\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"]({\n                container,\n                currentElement,\n                onUncontrolled,\n                ignoreUncontrolled,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            });\n\n            if (\n                !uncontrolled &&\n                !next &&\n                this._props.isTrapped &&\n                tabster.modalizer?.activeId\n            ) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container,\n                        ignoreUncontrolled: true,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    }\n                );\n            }\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n        };\n    }\n\n    triggerFocusEvent(\n        eventName: Types.ModalizerEventName,\n        allElements?: boolean\n    ): boolean {\n        const element = this.getElement();\n        let defaultPrevented = false;\n\n        if (element) {\n            const elements = allElements\n                ? this._activeElements.map((e) => e.deref())\n                : [element];\n\n            for (const el of elements) {\n                if (\n                    el &&\n                    !triggerEvent<Types.ModalizerEventDetails>(el, eventName, {\n                        id: this.userId,\n                        element,\n                        eventName,\n                    })\n                ) {\n                    defaultPrevented = true;\n                }\n            }\n        }\n\n        return defaultPrevented;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateModalizerProps(props: Types.ModalizerProps): void {\n    // TODO: Implement validation.\n}\n\nexport class ModalizerAPI implements Types.ModalizerAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _restoreModalizerFocusTimer: number | undefined;\n    private _modalizers: Record<string, Types.Modalizer>;\n    private _parts: Record<string, Record<string, Types.Modalizer>>;\n    private _augMap: WeakMap<HTMLElement, true>;\n    private _aug: WeakRef<HTMLElement>[];\n    private _hiddenUpdateTimer: number | undefined;\n\n    activeId: string | undefined;\n    currentIsOthersAccessible: boolean | undefined;\n    activeElements: WeakRef<HTMLElement>[];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._modalizers = {};\n        this._parts = {};\n        this._augMap = new WeakMap();\n        this._aug = [];\n        this.activeElements = [];\n\n        if (!tabster.controlTab) {\n            tabster.root.addDummyInputs();\n        }\n\n        const win = this._win();\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        // Dispose all modalizers managed by the API\n        Object.keys(this._modalizers).forEach((modalizerId) => {\n            if (this._modalizers[modalizerId]) {\n                this._modalizers[modalizerId].dispose();\n                delete this._modalizers[modalizerId];\n            }\n        });\n\n        win.clearTimeout(this._restoreModalizerFocusTimer);\n        win.clearTimeout(this._hiddenUpdateTimer);\n\n        this._parts = {};\n        delete this.activeId;\n        this.activeElements = [];\n\n        this._augMap = new WeakMap();\n        this._aug = [];\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n    }\n\n    createModalizer(\n        element: HTMLElement,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined\n    ): Types.Modalizer {\n        if (__DEV__) {\n            validateModalizerProps(props);\n        }\n\n        const modalizer = new Modalizer(\n            this._tabster,\n            element,\n            this._onModalizerDispose,\n            props,\n            sys,\n            this.activeElements\n        );\n\n        const id = modalizer.id;\n        const userId = props.id;\n\n        this._modalizers[id] = modalizer;\n\n        let part = this._parts[userId];\n        if (!part) {\n            part = this._parts[userId] = {};\n        }\n        part[id] = modalizer;\n\n        // Adding a modalizer which is already focused, activate it\n        if (\n            element.contains(\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            if (userId !== this.activeId) {\n                this.setActive(modalizer);\n            } else {\n                modalizer.makeActive(true);\n            }\n        }\n\n        return modalizer;\n    }\n\n    private _onModalizerDispose = (modalizer: Modalizer) => {\n        const id = modalizer.id;\n        const userId = modalizer.userId;\n        const part = this._parts[userId];\n\n        delete this._modalizers[id];\n\n        if (part) {\n            delete part[id];\n\n            if (Object.keys(part).length === 0) {\n                delete this._parts[userId];\n\n                if (this.activeId === userId) {\n                    this.setActive(undefined);\n                }\n            }\n        }\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.keyCode !== Keys.Esc) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const element = tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            const ctx = RootAPI.getTabsterContext(tabster, element);\n            const modalizer = ctx?.modalizer;\n\n            if (\n                ctx &&\n                !ctx.groupper &&\n                modalizer?.isActive() &&\n                !ctx.ignoreKeydown(event)\n            ) {\n                const activeId = modalizer.userId;\n\n                if (activeId) {\n                    const part = this._parts[activeId];\n\n                    if (part) {\n                        const focusedSince = Object.keys(part)\n                            .map((id) => {\n                                const m = part[id];\n                                const el = m.getElement();\n                                let groupper: Types.Groupper | undefined;\n\n                                if (el) {\n                                    groupper = getTabsterOnElement(\n                                        this._tabster,\n                                        el\n                                    )?.groupper;\n                                }\n\n                                return m && el && groupper\n                                    ? {\n                                          el,\n                                          focusedSince: m.focused(true),\n                                      }\n                                    : { focusedSince: 0 };\n                            })\n                            .filter((f) => f.focusedSince > 0)\n                            .sort((a, b) =>\n                                a.focusedSince > b.focusedSince\n                                    ? -1\n                                    : a.focusedSince < b.focusedSince\n                                    ? 1\n                                    : 0\n                            );\n\n                        if (focusedSince.length) {\n                            const groupperElement = focusedSince[0].el;\n\n                            if (groupperElement) {\n                                tabster.groupper?.handleKeyPress(\n                                    groupperElement,\n                                    event,\n                                    true\n                                );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    isAugmented(element: HTMLElement): boolean {\n        return this._augMap.has(element);\n    }\n\n    hiddenUpdate(): void {\n        if (this._hiddenUpdateTimer) {\n            return;\n        }\n\n        this._hiddenUpdateTimer = this._win().setTimeout(() => {\n            delete this._hiddenUpdateTimer;\n            this._hiddenUpdate();\n        }, 250);\n    }\n\n    setActive(modalizer: Types.Modalizer | undefined): void {\n        const userId = modalizer?.userId;\n        const activeId = this.activeId;\n\n        if (activeId === userId) {\n            return;\n        }\n\n        this.activeId = userId;\n\n        if (activeId) {\n            const part = this._parts[activeId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(false);\n                }\n            }\n        }\n\n        if (userId) {\n            const part = this._parts[userId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(true);\n                }\n            }\n        }\n\n        this.currentIsOthersAccessible =\n            modalizer?.getProps().isOthersAccessible;\n\n        this.hiddenUpdate();\n    }\n\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean {\n        const ctx = RootAPI.getTabsterContext(\n            this._tabster,\n            elementFromModalizer\n        );\n\n        const modalizer = ctx?.modalizer;\n\n        if (modalizer) {\n            this.setActive(modalizer);\n\n            const props = modalizer.getProps();\n            const modalizerRoot = modalizer.getElement();\n\n            if (modalizerRoot) {\n                if (noFocusFirst === undefined) {\n                    noFocusFirst = props.isNoFocusFirst;\n                }\n\n                if (\n                    !noFocusFirst &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() &&\n                    this._tabster.focusedElement.focusFirst({\n                        container: modalizerRoot,\n                    })\n                ) {\n                    return true;\n                }\n\n                if (noFocusDefault === undefined) {\n                    noFocusDefault = props.isNoFocusDefault;\n                }\n\n                if (\n                    !noFocusDefault &&\n                    this._tabster.focusedElement.focusDefault(modalizerRoot)\n                ) {\n                    return true;\n                }\n\n                this._tabster.focusedElement.resetFocus(modalizerRoot);\n            }\n        } else if (__DEV__) {\n            console.error(\"Element is not in Modalizer.\", elementFromModalizer);\n        }\n\n        return false;\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const modalizerUserId = state.modalizerUserId;\n        const currentModalizer = state.currentCtx?.modalizer;\n\n        if (modalizerUserId) {\n            for (const e of this.activeElements) {\n                const el = e.deref();\n\n                if (el && (element.contains(el) || el === element)) {\n                    // We have a part of currently active modalizer somewhere deeper in the DOM,\n                    // skipping all other checks.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n        }\n\n        return modalizerUserId === currentModalizer?.userId ||\n            (!modalizerUserId &&\n                currentModalizer?.getProps().isAlwaysAccessible)\n            ? undefined\n            : NodeFilter.FILTER_SKIP;\n    }\n\n    private _hiddenUpdate(): void {\n        const tabster = this._tabster;\n        const body = tabster.getWindow().document.body;\n        const activeId = this.activeId;\n\n        const parts = this._parts;\n        const visibleElements: HTMLElement[] = [];\n        const hiddenElements: HTMLElement[] = [];\n        const alwaysAccessibleElements: HTMLElement[] = [];\n\n        for (const userId of Object.keys(parts)) {\n            const mParts = parts[userId];\n\n            for (const id of Object.keys(mParts)) {\n                const m = mParts[id];\n                const el = m.getElement();\n                const props = m.getProps();\n                const isAlwaysAccessible = props.isAlwaysAccessible;\n\n                if (el) {\n                    if (userId === activeId) {\n                        if (!this.currentIsOthersAccessible) {\n                            visibleElements.push(el);\n                        }\n                    } else if (isAlwaysAccessible) {\n                        alwaysAccessibleElements.push(el);\n                    } else {\n                        hiddenElements.push(el);\n                    }\n                }\n            }\n        }\n\n        const augmentedMap = this._augMap;\n        const allVisibleElements: HTMLElement[] | undefined =\n            visibleElements.length > 0\n                ? [...visibleElements, ...alwaysAccessibleElements]\n                : undefined;\n\n        const newAugmented: WeakRef<HTMLElement>[] = [];\n        const newAugmentedMap: WeakMap<HTMLElement, true> = new WeakMap();\n\n        const toggle = (element: HTMLElement, hide: boolean) => {\n            const tagName = element.tagName;\n\n            if (tagName === \"SCRIPT\" || tagName === \"STYLE\") {\n                return;\n            }\n\n            let isAugmented = false;\n\n            if (augmentedMap.has(element)) {\n                if (hide) {\n                    isAugmented = true;\n                } else {\n                    augmentedMap.delete(element);\n                    augmentAttribute(tabster, element, _ariaHidden);\n                }\n            } else if (\n                hide &&\n                augmentAttribute(tabster, element, _ariaHidden, \"true\")\n            ) {\n                augmentedMap.set(element, true);\n                isAugmented = true;\n            }\n\n            if (isAugmented) {\n                newAugmented.push(new WeakRef(element));\n                newAugmentedMap.set(element, true);\n            }\n        };\n\n        const walk = (element: HTMLElement) => {\n            for (\n                let el = element.firstElementChild;\n                el;\n                el = el.nextElementSibling\n            ) {\n                let skip = false;\n                let containsModalizer = false;\n\n                if (allVisibleElements) {\n                    for (const c of allVisibleElements) {\n                        if (el === c) {\n                            skip = true;\n                            break;\n                        }\n\n                        if (el.contains(c)) {\n                            containsModalizer = true;\n                            break;\n                        }\n                    }\n\n                    if (containsModalizer) {\n                        walk(el as HTMLElement);\n                    } else if (!skip) {\n                        toggle(el as HTMLElement, true);\n                    }\n                } else {\n                    toggle(el as HTMLElement, false);\n                }\n            }\n        };\n\n        if (!allVisibleElements) {\n            alwaysAccessibleElements.forEach((e) => toggle(e, false));\n        }\n\n        hiddenElements.forEach((e) => toggle(e, true));\n\n        if (body) {\n            walk(body);\n        }\n\n        this._aug\n            ?.map((e) => e.deref())\n            .forEach((e) => {\n                if (e && !newAugmentedMap.get(e)) {\n                    toggle(e, false);\n                }\n            });\n\n        this._aug = newAugmented;\n        this._augMap = newAugmentedMap;\n    }\n\n    /**\n     * Subscribes to the focus state and handles modalizer related focus events\n     * @param e - Element that is focused\n     * @param details - Additional data about the focus event\n     */\n    private _onFocus = (\n        focusedElement: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void => {\n        const ctx =\n            focusedElement &&\n            RootAPI.getTabsterContext(this._tabster, focusedElement);\n\n        // Modalizer behaviour is opt in, only apply to elements that have a tabster context\n        if (!ctx || !focusedElement) {\n            return;\n        }\n\n        const augmentedMap = this._augMap;\n\n        for (\n            let e: HTMLElement | null = focusedElement;\n            e;\n            e = e.parentElement\n        ) {\n            // If the newly focused element is inside some of the hidden containers,\n            // remove aria-hidden from those synchronously for the screen readers\n            // to be able to read the element. The rest of aria-hiddens, will be removed\n            // acynchronously for the sake of performance.\n\n            if (augmentedMap.has(e)) {\n                augmentedMap.delete(e);\n                augmentAttribute(this._tabster, e, _ariaHidden);\n            }\n        }\n\n        const modalizer = ctx.modalizer;\n\n        // An inactive groupper with the modalizer on the same node will not give the modalizer\n        // in the context, yet we still want to track that the modalizer's container was focused.\n        (\n            modalizer ||\n            getTabsterOnElement(this._tabster, focusedElement)?.modalizer\n        )?.focused();\n\n        if (modalizer?.userId === this.activeId) {\n            this.currentIsOthersAccessible =\n                modalizer?.getProps().isOthersAccessible;\n\n            return;\n        }\n\n        // Developers calling `element.focus()` should change/deactivate active modalizer\n        if (\n            details.isFocusedProgrammatically ||\n            this.currentIsOthersAccessible ||\n            modalizer?.getProps().isAlwaysAccessible\n        ) {\n            this.setActive(modalizer);\n        } else {\n            // Focused outside of the active modalizer, try pull focus back to current modalizer\n            const win = this._win();\n            win.clearTimeout(this._restoreModalizerFocusTimer);\n            // TODO some rendering frameworks (i.e. React) might async rerender the DOM so we need to wait for a duration\n            // Figure out a better way of doing this rather than a 100ms timeout\n            this._restoreModalizerFocusTimer = win.setTimeout(\n                () => this._restoreModalizerFocus(focusedElement),\n                100\n            );\n        }\n    };\n\n    /**\n     * Called when an element is focused outside of an active modalizer.\n     * Attempts to pull focus back into the active modalizer\n     * @param outsideElement - An element being focused outside of the modalizer\n     */\n    private _restoreModalizerFocus(\n        outsideElement: HTMLElement | undefined\n    ): void {\n        const ownerDocument = outsideElement?.ownerDocument;\n\n        if (!outsideElement || !ownerDocument) {\n            return;\n        }\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, outsideElement);\n        const modalizer = ctx?.modalizer;\n        const activeId = this.activeId;\n\n        if (\n            (!modalizer && !activeId) ||\n            (modalizer && activeId === modalizer.userId)\n        ) {\n            return;\n        }\n\n        const container = ctx?.root.getElement();\n\n        if (container) {\n            let toFocus = this._tabster.focusable.findFirst({\n                container,\n                ignoreUncontrolled: true,\n                useActiveModalizer: true,\n            });\n\n            if (toFocus) {\n                if (\n                    outsideElement.compareDocumentPosition(toFocus) &\n                    document.DOCUMENT_POSITION_PRECEDING\n                ) {\n                    toFocus = this._tabster.focusable.findLast({\n                        container,\n                        ignoreUncontrolled: true,\n                        useActiveModalizer: true,\n                    });\n\n                    if (!toFocus) {\n                        // This only might mean that findFirst/findLast are buggy and inconsistent.\n                        throw new Error(\"Something went wrong.\");\n                    }\n                }\n\n                this._tabster.focusedElement.focus(toFocus);\n\n                return;\n            }\n        }\n\n        // Current Modalizer doesn't seem to have focusable elements.\n        // Blurring the currently focused element which is outside of the current Modalizer.\n        outsideElement.blur();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    getPromise,\n    HTMLElementWithDummyContainer,\n    isElementVerticallyVisibleInContainer,\n    matchesSelector,\n    scrollIntoView,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nconst _inputSelector = [\"input\", \"textarea\", \"*[contenteditable]\"].join(\", \");\n\nclass MoverDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _getMemorized: () => WeakHTMLElement | undefined;\n\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        getMemorized: () => WeakHTMLElement | undefined,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Mover, sys);\n\n        this._tabster = tabster;\n        this._getMemorized = getMemorized;\n\n        this._setHandlers(this._onFocusDummyInput);\n    }\n\n    private _onFocusDummyInput = (dummyInput: DummyInput) => {\n        const container = this._element.get();\n        const input = dummyInput.input;\n\n        if (container && input) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            let toFocus: HTMLElement | null | undefined;\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    undefined,\n                    input,\n                    !dummyInput.isFirst,\n                    true\n                )?.element;\n            }\n\n            const memorized = this._getMemorized()?.get();\n            if (memorized) {\n                toFocus = memorized;\n            }\n\n            if (toFocus) {\n                nativeFocus(toFocus);\n            }\n        }\n    };\n}\n\n// TypeScript enums produce depressing JavaScript code, so, we're just using\n// a few old style constants here.\nconst _moverUpdateAdd = 1;\nconst _moverUpdateAttr = 2;\nconst _moverUpdateRemove = 3;\n\ninterface MoverUpdateQueueItem {\n    element: HTMLElement;\n    type:\n        | typeof _moverUpdateAdd\n        | typeof _moverUpdateAttr\n        | typeof _moverUpdateRemove;\n}\n\nexport class Mover\n    extends TabsterPart<Types.MoverProps>\n    implements Types.Mover\n{\n    private _unobserve: (() => void) | undefined;\n    private _intersectionObserver: IntersectionObserver | undefined;\n    private _setCurrentTimer: number | undefined;\n    private _current: WeakHTMLElement | undefined;\n    private _prevCurrent: WeakHTMLElement | undefined;\n    private _visible: Record<string, Types.Visibility> = {};\n    private _fullyVisible: string | undefined;\n    private _win: Types.GetWindow;\n    private _onDispose: (mover: Mover) => void;\n    private _allElements: WeakMap<HTMLElement, Mover> | undefined;\n    private _updateQueue: MoverUpdateQueueItem[] | undefined;\n    private _updateTimer: number | undefined;\n\n    visibilityTolerance: number;\n    dummyManager: MoverDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (mover: Mover) => void,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._win = tabster.getWindow;\n        this.visibilityTolerance = props.visibilityTolerance ?? 0.8;\n\n        if (this._props.trackState || this._props.visibilityAware) {\n            this._intersectionObserver = new IntersectionObserver(\n                this._onIntersection,\n                { threshold: [0, 0.25, 0.5, 0.75, 1] }\n            );\n            this._observeState();\n        }\n\n        this._onDispose = onDispose;\n        const getMemorized = () =>\n            props.memorizeCurrent ? this._current : undefined;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new MoverDummyManager(\n                this._element,\n                tabster,\n                getMemorized,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        if (this._intersectionObserver) {\n            this._intersectionObserver.disconnect();\n            delete this._intersectionObserver;\n        }\n\n        delete this._current;\n        delete this._fullyVisible;\n        delete this._allElements;\n        delete this._updateQueue;\n\n        if (this._unobserve) {\n            this._unobserve();\n            delete this._unobserve;\n        }\n\n        const win = this._win();\n\n        if (this._setCurrentTimer) {\n            win.clearTimeout(this._setCurrentTimer);\n            delete this._setCurrentTimer;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this.dummyManager?.dispose();\n    }\n\n    setCurrent(element: HTMLElement | undefined): void {\n        if (element) {\n            this._current = new WeakHTMLElement(this._win, element);\n        } else {\n            this._current = undefined;\n        }\n\n        if (\n            (this._props.trackState || this._props.visibilityAware) &&\n            !this._setCurrentTimer\n        ) {\n            this._setCurrentTimer = this._win().setTimeout(() => {\n                delete this._setCurrentTimer;\n\n                const changed: (WeakHTMLElement | undefined)[] = [];\n\n                if (this._current !== this._prevCurrent) {\n                    changed.push(this._current);\n                    changed.push(this._prevCurrent);\n                    this._prevCurrent = this._current;\n                }\n\n                for (const weak of changed) {\n                    const el = weak?.get();\n\n                    if (el && this._allElements?.get(el) === this) {\n                        const props = this._props;\n\n                        if (\n                            el &&\n                            (props.visibilityAware !== undefined ||\n                                props.trackState)\n                        ) {\n                            const state = this.getState(el);\n\n                            if (state) {\n                                triggerEvent(el, Types.MoverEventName, state);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    getCurrent(): HTMLElement | null {\n        return this._current?.get() || null;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreUncontrolled?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const container = this.getElement();\n        const currentIsDummy =\n            container &&\n            (\n                currentElement as HTMLElementWithDummyContainer\n            )?.__tabsterDummyContainer?.get() === container;\n\n        if (!container) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        const focusable = tabster.focusable;\n        let next: HTMLElement | null | undefined = null;\n        let uncontrolled: HTMLElement | undefined;\n        const onUncontrolled = (el: HTMLElement) => {\n            uncontrolled = el;\n        };\n\n        if (\n            this._props.tabbable ||\n            currentIsDummy ||\n            (currentElement && !container.contains(currentElement))\n        ) {\n            next = isBackward\n                ? focusable.findPrev({\n                      currentElement,\n                      container,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  })\n                : focusable.findNext({\n                      currentElement,\n                      container,\n                      onUncontrolled,\n                      ignoreUncontrolled,\n                      ignoreAccessibility,\n                      useActiveModalizer: true,\n                  });\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            lastMoverOrGroupper: next || uncontrolled ? undefined : this,\n        };\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        if (!FocusedElementState.isTabbing) {\n            return state.currentCtx?.isExcludedFromMover\n                ? NodeFilter.FILTER_REJECT\n                : undefined;\n        }\n\n        const { memorizeCurrent, visibilityAware, hasDefault } = this._props;\n        const moverElement = this.getElement();\n\n        if (\n            moverElement &&\n            (memorizeCurrent || visibilityAware || hasDefault) &&\n            (!moverElement.contains(state.from) ||\n                (\n                    state.from as HTMLElementWithDummyContainer\n                ).__tabsterDummyContainer?.get() === moverElement)\n        ) {\n            let found: HTMLElement | undefined | null;\n\n            if (memorizeCurrent) {\n                const current = this._current?.get();\n\n                if (current && state.acceptCondition(current)) {\n                    found = current;\n                }\n            }\n\n            if (!found && hasDefault) {\n                found = this._tabster.focusable.findDefault({\n                    container: moverElement,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                });\n            }\n\n            if (!found && visibilityAware) {\n                found = this._tabster.focusable.findElement({\n                    container: moverElement,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                    isBackward: state.isBackward,\n                    acceptCondition: (el) => {\n                        const id = getElementUId(this._win, el);\n                        const visibility = this._visible[id];\n\n                        return (\n                            moverElement !== el &&\n                            !!this._allElements?.get(el) &&\n                            state.acceptCondition(el) &&\n                            (visibility === Types.Visibilities.Visible ||\n                                (visibility ===\n                                    Types.Visibilities.PartiallyVisible &&\n                                    (visibilityAware ===\n                                        Types.Visibilities.PartiallyVisible ||\n                                        !this._fullyVisible)))\n                        );\n                    },\n                });\n            }\n\n            if (found) {\n                state.found = true;\n                state.foundElement = found;\n                state.lastToIgnore = moverElement;\n                return NodeFilter.FILTER_ACCEPT;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _onIntersection = (entries: IntersectionObserverEntry[]): void => {\n        for (const entry of entries) {\n            const el = entry.target as HTMLElement;\n            const id = getElementUId(this._win, el);\n\n            let newVisibility: Types.Visibility;\n            let fullyVisible = this._fullyVisible;\n\n            if (entry.intersectionRatio >= 0.25) {\n                newVisibility =\n                    entry.intersectionRatio >= 0.75\n                        ? Types.Visibilities.Visible\n                        : Types.Visibilities.PartiallyVisible;\n\n                if (newVisibility === Types.Visibilities.Visible) {\n                    fullyVisible = id;\n                }\n            } else {\n                newVisibility = Types.Visibilities.Invisible;\n            }\n\n            if (this._visible[id] !== newVisibility) {\n                if (newVisibility === undefined) {\n                    delete this._visible[id];\n\n                    if (fullyVisible === id) {\n                        delete this._fullyVisible;\n                    }\n                } else {\n                    this._visible[id] = newVisibility;\n                    this._fullyVisible = fullyVisible;\n                }\n\n                const state = this.getState(el);\n\n                if (state) {\n                    triggerEvent(el, Types.MoverEventName, state);\n                }\n            }\n        }\n    };\n\n    private _observeState(): void {\n        const element = this.getElement();\n\n        if (\n            this._unobserve ||\n            !element ||\n            typeof MutationObserver === \"undefined\"\n        ) {\n            return;\n        }\n\n        const win = this._win();\n        const allElements = (this._allElements = new WeakMap());\n        const tabsterFocusable = this._tabster.focusable;\n        let updateQueue: MoverUpdateQueueItem[] = (this._updateQueue = []);\n\n        const observer = new MutationObserver((mutations: MutationRecord[]) => {\n            for (const mutation of mutations) {\n                const target = mutation.target;\n                const removed = mutation.removedNodes;\n                const added = mutation.addedNodes;\n\n                if (mutation.type === \"attributes\") {\n                    if (mutation.attributeName === \"tabindex\") {\n                        updateQueue.push({\n                            element: target as HTMLElement,\n                            type: _moverUpdateAttr,\n                        });\n                    }\n                } else {\n                    for (let i = 0; i < removed.length; i++) {\n                        updateQueue.push({\n                            element: removed[i] as HTMLElement as HTMLElement,\n                            type: _moverUpdateRemove,\n                        });\n                    }\n\n                    for (let i = 0; i < added.length; i++) {\n                        updateQueue.push({\n                            element: added[i] as HTMLElement,\n                            type: _moverUpdateAdd,\n                        });\n                    }\n                }\n            }\n\n            requestUpdate();\n        });\n\n        const setElement = (element: HTMLElement, remove?: boolean): void => {\n            const current = allElements.get(element);\n\n            if (current && remove) {\n                this._intersectionObserver?.unobserve(element);\n                allElements.delete(element);\n            }\n\n            if (!current && !remove) {\n                allElements.set(element, this);\n                this._intersectionObserver?.observe(element);\n            }\n        };\n\n        const updateElement = (element: HTMLElement): void => {\n            const isFocusable = tabsterFocusable.isFocusable(element);\n            const current = allElements.get(element);\n\n            if (current) {\n                if (!isFocusable) {\n                    setElement(element, true);\n                }\n            } else {\n                if (isFocusable) {\n                    setElement(element);\n                }\n            }\n        };\n\n        const addNewElements = (element: HTMLElement): void => {\n            const { mover } = getMoverGroupper(element);\n\n            if (mover && mover !== this) {\n                if (\n                    mover.getElement() === element &&\n                    tabsterFocusable.isFocusable(element)\n                ) {\n                    setElement(element);\n                } else {\n                    return;\n                }\n            }\n\n            const walker = createElementTreeWalker(\n                win.document,\n                element,\n                (node: Node): number => {\n                    const { mover, groupper } = getMoverGroupper(\n                        node as HTMLElement\n                    );\n\n                    if (mover && mover !== this) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    const groupperFirstFocusable = groupper?.getFirst(true);\n\n                    if (\n                        groupper &&\n                        groupper.getElement() !== node &&\n                        groupperFirstFocusable &&\n                        groupperFirstFocusable !== node\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    if (tabsterFocusable.isFocusable(node as HTMLElement)) {\n                        setElement(node as HTMLElement);\n                    }\n\n                    return NodeFilter.FILTER_SKIP;\n                }\n            );\n\n            if (walker) {\n                walker.currentNode = element;\n\n                while (walker.nextNode()) {\n                    /* Iterating for the sake of calling processNode() callback. */\n                }\n            }\n        };\n\n        const removeWalk = (element: HTMLElement): void => {\n            const current = allElements.get(element);\n\n            if (current) {\n                setElement(element, true);\n            }\n\n            for (\n                let el = element.firstElementChild;\n                el;\n                el = el.nextElementSibling\n            ) {\n                removeWalk(el as HTMLElement);\n            }\n        };\n\n        const requestUpdate = () => {\n            if (!this._updateTimer && updateQueue.length) {\n                this._updateTimer = win.setTimeout(() => {\n                    delete this._updateTimer;\n\n                    for (const { element, type } of updateQueue) {\n                        switch (type) {\n                            case _moverUpdateAttr:\n                                updateElement(element);\n                                break;\n                            case _moverUpdateAdd:\n                                addNewElements(element);\n                                break;\n                            case _moverUpdateRemove:\n                                removeWalk(element);\n                                break;\n                        }\n                    }\n\n                    updateQueue = this._updateQueue = [];\n                }, 0);\n            }\n        };\n\n        const getMoverGroupper = (\n            element: HTMLElement\n        ): { mover?: Mover; groupper?: Types.Groupper } => {\n            const ret: {\n                mover?: Mover;\n                groupper?: Types.Groupper;\n            } = {};\n\n            for (\n                let el: HTMLElement | null = element;\n                el;\n                el = el.parentElement\n            ) {\n                const toe = getTabsterOnElement(this._tabster, el);\n\n                if (toe) {\n                    if (toe.groupper && !ret.groupper) {\n                        ret.groupper = toe.groupper;\n                    }\n\n                    if (toe.mover) {\n                        ret.mover = toe.mover as Mover;\n                        break;\n                    }\n                }\n            }\n\n            return ret;\n        };\n\n        updateQueue.push({ element, type: _moverUpdateAdd });\n        requestUpdate();\n\n        observer.observe(element, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\"tabindex\"],\n        });\n\n        this._unobserve = () => {\n            observer.disconnect();\n        };\n    }\n\n    getState(element: HTMLElement): Types.MoverElementState | undefined {\n        const id = getElementUId(this._win, element);\n\n        if (id in this._visible) {\n            const visibility =\n                this._visible[id] || Types.Visibilities.Invisible;\n            const isCurrent = this._current\n                ? this._current.get() === element\n                : undefined;\n\n            return {\n                isCurrent,\n                visibility,\n            };\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateMoverProps(props: Types.MoverProps): void {\n    // TODO: Implement validation.\n}\n\n/**\n * Calculates distance between two rectangles.\n *\n * @param ax1 first rectangle left\n * @param ay1 first rectangle top\n * @param ax2 first rectangle right\n * @param ay2 first rectangle bottom\n * @param bx1 second rectangle left\n * @param by1 second rectangle top\n * @param bx2 second rectangle right\n * @param by2 second rectangle bottom\n * @returns number, shortest distance between the rectangles.\n */\nfunction getDistance(\n    ax1: number,\n    ay1: number,\n    ax2: number,\n    ay2: number,\n    bx1: number,\n    by1: number,\n    bx2: number,\n    by2: number\n): number {\n    const xDistance = ax2 < bx1 ? bx1 - ax2 : bx2 < ax1 ? ax1 - bx2 : 0;\n    const yDistance = ay2 < by1 ? by1 - ay2 : by2 < ay1 ? ay1 - by2 : 0;\n\n    return xDistance === 0\n        ? yDistance\n        : yDistance === 0\n        ? xDistance\n        : Math.sqrt(xDistance * xDistance + yDistance * yDistance);\n}\n\nexport class MoverAPI implements Types.MoverAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _movers: Record<string, Mover>;\n    private _ignoredInputTimer: number | undefined;\n    private _ignoredInputResolve: ((value: boolean) => void) | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._movers = {};\n\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._ignoredInputResolve?.(false);\n\n        if (this._ignoredInputTimer) {\n            win.clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        Object.keys(this._movers).forEach((moverId) => {\n            if (this._movers[moverId]) {\n                this._movers[moverId].dispose();\n                delete this._movers[moverId];\n            }\n        });\n    }\n\n    createMover(\n        element: HTMLElement,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ): Types.Mover {\n        if (__DEV__) {\n            validateMoverProps(props);\n        }\n\n        const newMover = new Mover(\n            this._tabster,\n            element,\n            this._onMoverDispose,\n            props,\n            sys\n        );\n        this._movers[newMover.id] = newMover;\n        return newMover;\n    }\n\n    private _onMoverDispose = (mover: Mover) => {\n        delete this._movers[mover.id];\n    };\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        for (\n            let el: HTMLElement | null | undefined = e;\n            el;\n            el = el.parentElement\n        ) {\n            const mover = getTabsterOnElement(this._tabster, el)?.mover;\n\n            if (mover) {\n                mover.setCurrent(e);\n                break;\n            }\n        }\n    };\n\n    private _onKeyDown = async (e: KeyboardEvent): Promise<void> => {\n        if (this._ignoredInputTimer) {\n            this._win().clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        let keyCode = e.keyCode;\n        // Mover does not use ctrl key currently\n        if (e.ctrlKey) {\n            return;\n        }\n\n        switch (keyCode) {\n            case Keys.Down:\n            case Keys.Right:\n            case Keys.Up:\n            case Keys.Left:\n            case Keys.PageDown:\n            case Keys.PageUp:\n            case Keys.Home:\n            case Keys.End:\n                break;\n            default:\n                return;\n        }\n\n        const tabster = this._tabster;\n        const focused = tabster.focusedElement.getFocusedElement();\n\n        if (!focused || (await this._isIgnoredInput(focused, keyCode))) {\n            return;\n        }\n\n        const ctx = RootAPI.getTabsterContext(tabster, focused, {\n            checkRtl: true,\n        });\n\n        if (\n            !ctx ||\n            !ctx.mover ||\n            ctx.isExcludedFromMover ||\n            ctx.ignoreKeydown(e)\n        ) {\n            return;\n        }\n\n        const mover = ctx.mover;\n        const container = mover.getElement();\n\n        if (ctx.isGroupperFirst) {\n            const groupper = ctx.groupper;\n\n            if (groupper && !groupper.isActive(true)) {\n                // For the cases when we have Mover/Active Groupper/Inactive Groupper, we need to check\n                // the grouppers between the current element and the current mover.\n                for (\n                    let el: HTMLElement | null | undefined =\n                        groupper.getElement()?.parentElement;\n                    el && el !== container;\n                    el = el.parentElement\n                ) {\n                    if (\n                        getTabsterOnElement(tabster, el)?.groupper?.isActive(\n                            true\n                        )\n                    ) {\n                        return;\n                    }\n                }\n            } else {\n                return;\n            }\n        }\n\n        if (!container) {\n            return;\n        }\n\n        const focusable = tabster.focusable;\n        const moverProps = mover.getProps();\n        const direction = moverProps.direction || Types.MoverDirections.Both;\n        const isBoth = direction === Types.MoverDirections.Both;\n        const isVertical =\n            isBoth || direction === Types.MoverDirections.Vertical;\n        const isHorizontal =\n            isBoth || direction === Types.MoverDirections.Horizontal;\n        const isGrid = direction === Types.MoverDirections.Grid;\n        const isCyclic = moverProps.cyclic;\n\n        let next: HTMLElement | null | undefined;\n\n        let focusedElementRect: DOMRect;\n        let focusedElementX1 = 0;\n        let focusedElementX2 = 0;\n\n        if (isGrid) {\n            focusedElementRect = focused.getBoundingClientRect();\n            focusedElementX1 = Math.ceil(focusedElementRect.left);\n            focusedElementX2 = Math.floor(focusedElementRect.right);\n        }\n\n        if (ctx.isRtl) {\n            if (keyCode === Keys.Right) {\n                keyCode = Keys.Left;\n            } else if (keyCode === Keys.Left) {\n                keyCode = Keys.Right;\n            }\n        }\n\n        if (\n            (keyCode === Keys.Down && isVertical) ||\n            (keyCode === Keys.Right && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findNext({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n\n                if (focusedElementX2 > nextElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findFirst({\n                    container,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (\n            (keyCode === Keys.Up && isVertical) ||\n            (keyCode === Keys.Left && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findPrev({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX2 = Math.floor(\n                    next.getBoundingClientRect().right\n                );\n\n                if (nextElementX2 > focusedElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findLast({\n                    container,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (keyCode === Keys.Home) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: focused,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== focused &&\n                            focusedElementX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findFirst({\n                    container,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (keyCode === Keys.End) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: focused,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== focused &&\n                            focusedElementX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findLast({\n                    container,\n                    ignoreUncontrolled: true,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (keyCode === Keys.PageUp) {\n            focusable.findElement({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n                isBackward: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the first column move forward and preserve previous column\n            if (isGrid && next) {\n                const firstColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 < nextElementX1 ||\n                            firstColumnX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            if (next) {\n                scrollIntoView(this._win, next, false);\n            }\n        } else if (keyCode === Keys.PageDown) {\n            focusable.findElement({\n                currentElement: focused,\n                container,\n                useActiveModalizer: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the last column move backwards and preserve previous column\n            if (isGrid && next) {\n                const lastColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 > nextElementX1 ||\n                            lastColumnX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            if (next) {\n                scrollIntoView(this._win, next, true);\n            }\n        } else if (isGrid) {\n            const isBackward = keyCode === Keys.Up;\n            const ax1 = focusedElementX1;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay1 = Math.ceil(focusedElementRect!.top);\n            const ax2 = focusedElementX2;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay2 = Math.floor(focusedElementRect!.bottom);\n            let targetElement: HTMLElement | undefined;\n            let lastDistance: number | undefined;\n            let lastIntersection = 0;\n\n            focusable.findAll({\n                container,\n                currentElement: focused,\n                isBackward,\n                onElement: (el) => {\n                    // Find element which has maximal intersection with the focused element horizontally,\n                    // or the closest one.\n                    const rect = el.getBoundingClientRect();\n\n                    const bx1 = Math.ceil(rect.left);\n                    const by1 = Math.ceil(rect.top);\n                    const bx2 = Math.floor(rect.right);\n                    const by2 = Math.floor(rect.bottom);\n\n                    if (\n                        (isBackward && ay1 < by2) ||\n                        (!isBackward && ay2 > by1)\n                    ) {\n                        // Only consider elements which are below/above curretly focused.\n                        return true;\n                    }\n\n                    const xIntersectionWidth =\n                        Math.ceil(Math.min(ax2, bx2)) -\n                        Math.floor(Math.max(ax1, bx1));\n                    const minWidth = Math.ceil(Math.min(ax2 - ax1, bx2 - bx1));\n\n                    if (\n                        xIntersectionWidth > 0 &&\n                        minWidth >= xIntersectionWidth\n                    ) {\n                        // Element intersects with the focused element on X axis.\n                        const intersection = xIntersectionWidth / minWidth;\n\n                        if (intersection > lastIntersection) {\n                            targetElement = el;\n                            lastIntersection = intersection;\n                        }\n                    } else if (lastIntersection === 0) {\n                        // If we didn't have intersection, try just the closest one.\n                        const distance = getDistance(\n                            ax1,\n                            ay1,\n                            ax2,\n                            ay2,\n                            bx1,\n                            by1,\n                            bx2,\n                            by2\n                        );\n\n                        if (\n                            lastDistance === undefined ||\n                            distance < lastDistance\n                        ) {\n                            lastDistance = distance;\n                            targetElement = el;\n                        }\n                    } else if (lastIntersection > 0) {\n                        // Element doesn't intersect, but we had intersection already, stop search.\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            next = targetElement;\n        }\n\n        if (next) {\n            e.preventDefault();\n            e.stopImmediatePropagation();\n\n            nativeFocus(next);\n        }\n    };\n\n    private async _isIgnoredInput(\n        element: HTMLElement,\n        keyCode: number\n    ): Promise<boolean> {\n        if (element.getAttribute(\"aria-expanded\") === \"true\") {\n            return true;\n        }\n\n        if (matchesSelector(element, _inputSelector)) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n            let textLength = 0;\n            let asyncRet: Promise<boolean> | undefined;\n\n            if (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\") {\n                const type = (element as HTMLInputElement).type;\n                const value = (element as HTMLInputElement).value;\n\n                textLength = (value || \"\").length;\n\n                if (type === \"email\" || type === \"number\") {\n                    // For these types Chromium doesn't provide selectionStart and selectionEnd.\n                    // Hence the ugly workaround to find if the caret position is changed with\n                    // the keypress.\n                    // TODO: Have a look at range, week, time, time, date, datetime-local.\n                    if (textLength) {\n                        const selection =\n                            element.ownerDocument.defaultView?.getSelection();\n\n                        if (selection) {\n                            const initialLength = selection.toString().length;\n                            const isBackward =\n                                keyCode === Keys.Left || keyCode === Keys.Up;\n\n                            selection.modify(\n                                \"extend\",\n                                isBackward ? \"backward\" : \"forward\",\n                                \"character\"\n                            );\n\n                            if (initialLength !== selection.toString().length) {\n                                // The caret is moved, so, we're not on the edge of the value.\n                                // Restore original selection.\n                                selection.modify(\n                                    \"extend\",\n                                    isBackward ? \"forward\" : \"backward\",\n                                    \"character\"\n                                );\n\n                                return true;\n                            } else {\n                                textLength = 0;\n                            }\n                        }\n                    }\n                } else {\n                    const selStart = (element as HTMLInputElement)\n                        .selectionStart;\n\n                    if (selStart === null) {\n                        // Do not ignore not text editable inputs like checkboxes and radios (but ignore hidden).\n                        return type === \"hidden\";\n                    }\n\n                    selectionStart = selStart || 0;\n                    selectionEnd =\n                        (element as HTMLInputElement).selectionEnd || 0;\n                }\n            } else if (element.contentEditable === \"true\") {\n                asyncRet = new (getPromise(this._win))((resolve) => {\n                    this._ignoredInputResolve = (value: boolean) => {\n                        delete this._ignoredInputResolve;\n                        resolve(value);\n                    };\n\n                    const win = this._win();\n\n                    if (this._ignoredInputTimer) {\n                        win.clearTimeout(this._ignoredInputTimer);\n                    }\n\n                    const {\n                        anchorNode: prevAnchorNode,\n                        focusNode: prevFocusNode,\n                        anchorOffset: prevAnchorOffset,\n                        focusOffset: prevFocusOffset,\n                    } = win.getSelection() || {};\n\n                    // Get selection gives incorrect value if we call it syncronously onKeyDown.\n                    this._ignoredInputTimer = win.setTimeout(() => {\n                        delete this._ignoredInputTimer;\n\n                        const {\n                            anchorNode,\n                            focusNode,\n                            anchorOffset,\n                            focusOffset,\n                        } = win.getSelection() || {};\n\n                        if (\n                            anchorNode !== prevAnchorNode ||\n                            focusNode !== prevFocusNode ||\n                            anchorOffset !== prevAnchorOffset ||\n                            focusOffset !== prevFocusOffset\n                        ) {\n                            this._ignoredInputResolve?.(false);\n                            return;\n                        }\n\n                        selectionStart = anchorOffset || 0;\n                        selectionEnd = focusOffset || 0;\n                        textLength = element.textContent?.length || 0;\n\n                        if (anchorNode && focusNode) {\n                            if (\n                                element.contains(anchorNode) &&\n                                element.contains(focusNode)\n                            ) {\n                                if (anchorNode !== element) {\n                                    let anchorFound = false;\n\n                                    const addOffsets = (\n                                        node: ChildNode\n                                    ): boolean => {\n                                        if (node === anchorNode) {\n                                            anchorFound = true;\n                                        } else if (node === focusNode) {\n                                            return true;\n                                        }\n\n                                        const nodeText = node.textContent;\n\n                                        if (nodeText && !node.firstChild) {\n                                            const len = nodeText.length;\n\n                                            if (anchorFound) {\n                                                if (focusNode !== anchorNode) {\n                                                    selectionEnd += len;\n                                                }\n                                            } else {\n                                                selectionStart += len;\n                                                selectionEnd += len;\n                                            }\n                                        }\n\n                                        let stop = false;\n\n                                        for (\n                                            let e = node.firstChild;\n                                            e && !stop;\n                                            e = e.nextSibling\n                                        ) {\n                                            stop = addOffsets(e);\n                                        }\n\n                                        return stop;\n                                    };\n\n                                    addOffsets(element);\n                                }\n                            }\n                        }\n\n                        this._ignoredInputResolve?.(true);\n                    }, 0);\n                });\n            }\n\n            if (asyncRet && !(await asyncRet)) {\n                return true;\n            }\n\n            if (selectionStart !== selectionEnd) {\n                return true;\n            }\n\n            if (\n                selectionStart > 0 &&\n                (keyCode === Keys.Left ||\n                    keyCode === Keys.Up ||\n                    keyCode === Keys.Home)\n            ) {\n                return true;\n            }\n\n            if (\n                selectionStart < textLength &&\n                (keyCode === Keys.Right ||\n                    keyCode === Keys.Down ||\n                    keyCode === Keys.End)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    getInstanceContext,\n    HTMLElementWithUID,\n    InstanceContext,\n    WeakHTMLElement,\n} from \"./Utils\";\n\nexport function observeMutations(\n    doc: HTMLDocument,\n    tabster: Types.TabsterCore,\n    updateTabsterByAttribute: (\n        tabster: Types.TabsterCore,\n        element: HTMLElementWithUID,\n        dispose?: boolean\n    ) => void,\n    syncState: boolean\n): () => void {\n    if (typeof MutationObserver === \"undefined\") {\n        return () => {\n            /* Noop */\n        };\n    }\n\n    const getWindow = tabster.getWindow;\n\n    let elementByUId: InstanceContext[\"elementByUId\"] | undefined;\n\n    const onMutation = (mutations: MutationRecord[]) => {\n        for (const mutation of mutations) {\n            const target = mutation.target;\n            const removed = mutation.removedNodes;\n            const added = mutation.addedNodes;\n\n            if (mutation.type === \"attributes\") {\n                if (mutation.attributeName === Types.TabsterAttributeName) {\n                    updateTabsterByAttribute(tabster, target as HTMLElement);\n                }\n            } else {\n                for (let i = 0; i < removed.length; i++) {\n                    updateTabsterElements(removed[i], true);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    updateTabsterElements(added[i]);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n            }\n        }\n\n        tabster.modalizer?.hiddenUpdate();\n    };\n\n    function updateTabsterElements(node: Node, removed?: boolean): void {\n        if (!elementByUId) {\n            elementByUId = getInstanceContext(getWindow).elementByUId;\n        }\n\n        processNode(node as HTMLElement, removed);\n\n        const walker = createElementTreeWalker(\n            doc,\n            node,\n            (element: Node): number => {\n                return processNode(element as HTMLElement, removed);\n            }\n        );\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n\n    function processNode(element: HTMLElement, removed?: boolean): number {\n        if (!element.getAttribute) {\n            // It might actually be a text node.\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        const uid = (element as HTMLElementWithUID).__tabsterElementUID;\n\n        if (uid && elementByUId) {\n            if (removed) {\n                delete elementByUId[uid];\n            } else {\n                elementByUId[uid] ??= new WeakHTMLElement(getWindow, element);\n            }\n        }\n\n        if (\n            getTabsterOnElement(tabster, element) ||\n            element.hasAttribute(Types.TabsterAttributeName)\n        ) {\n            updateTabsterByAttribute(tabster, element, removed);\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    }\n\n    const observer = new MutationObserver(onMutation);\n\n    if (syncState) {\n        updateTabsterElements(getWindow().document.body);\n    }\n\n    observer.observe(doc, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        attributeFilter: [Types.TabsterAttributeName],\n    });\n\n    return () => {\n        observer.disconnect();\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"../Instance\";\nimport * as Types from \"../Types\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nconst _conditionCheckTimeout = 100;\n\ninterface ObservedElementInfo {\n    element: WeakHTMLElement;\n    prevNames?: string[];\n}\n\ninterface ObservedWaiting {\n    timer?: number;\n    conditionTimer?: number;\n    request?: Types.ObservedElementAsyncRequest<HTMLElement | null>;\n    resolve?: (value: HTMLElement | null) => void;\n    reject?: () => void;\n}\n\nexport class ObservedElementAPI\n    extends Subscribable<HTMLElement, Types.ObservedElementDetails>\n    implements Types.ObservedElementAPI\n{\n    private _win: Types.GetWindow;\n    private _tabster: Types.TabsterCore;\n    private _waiting: Record<string, ObservedWaiting> = {};\n    private _lastRequestFocusId = 0;\n    private _observedById: { [uid: string]: ObservedElementInfo } = {};\n    private _observedByName: {\n        [name: string]: { [uid: string]: ObservedElementInfo };\n    } = {};\n    private _currentRequest:\n        | Types.ObservedElementAsyncRequest<HTMLElement | null>\n        | undefined;\n    private _currentRequestTimestamp = 0;\n\n    constructor(tabster: Types.TabsterCore) {\n        super();\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        for (const key of Object.keys(this._waiting)) {\n            this._rejectWaiting(key);\n        }\n\n        this._observedById = {};\n        this._observedByName = {};\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (e) {\n            const current = this._currentRequest;\n\n            if (current) {\n                const delta = Date.now() - this._currentRequestTimestamp;\n                const settleTime = 300;\n\n                if (delta >= settleTime) {\n                    // Giving some time for the focus to settle before\n                    // automatically cancelling the current request on focus change.\n                    delete this._currentRequest;\n                    current.cancel();\n                }\n            }\n        }\n    };\n\n    private _rejectWaiting(key: string, shouldResolve?: boolean): void {\n        const w = this._waiting[key];\n\n        if (w) {\n            const win = this._win();\n\n            if (w.timer) {\n                win.clearTimeout(w.timer);\n            }\n\n            if (w.conditionTimer) {\n                win.clearTimeout(w.conditionTimer);\n            }\n\n            if (!shouldResolve && w.reject) {\n                w.reject();\n            } else if (shouldResolve && w.resolve) {\n                w.resolve(null);\n            }\n\n            delete this._waiting[key];\n        }\n    }\n\n    private _isObservedNamesUpdated(cur: string[], prev?: string[]) {\n        if (!prev || cur.length !== prev.length) {\n            return true;\n        }\n        for (let i = 0; i < cur.length; ++i) {\n            if (cur[i] !== prev[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns existing element by observed name\n     *\n     * @param observedName An observed name\n     * @param accessibility Optionally, return only if the element is accessible or focusable\n     * @returns HTMLElement | null\n     */\n    getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccesibility\n    ): HTMLElement | null {\n        const o = this._observedByName[observedName];\n\n        if (o) {\n            for (const uid of Object.keys(o)) {\n                let el = o[uid].element.get() || null;\n                if (el) {\n                    if (\n                        (accessibility ===\n                            Types.ObservedElementAccesibilities.Accessible &&\n                            !this._tabster.focusable.isAccessible(el)) ||\n                        (accessibility ===\n                            Types.ObservedElementAccesibilities.Focusable &&\n                            !this._tabster.focusable.isFocusable(el, true))\n                    ) {\n                        el = null;\n                    }\n                } else {\n                    delete o[uid];\n                    delete this._observedById[uid];\n                }\n\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Waits for the element to appear in the DOM and returns it.\n     *\n     * @param observedName An observed name\n     * @param timeout Wait no longer than this timeout\n     * @param accessibility Optionally, wait for the element to also become accessible or focusable before returning it\n     * @returns Promise<HTMLElement | null>\n     */\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Types.ObservedElementAsyncRequest<HTMLElement | null> {\n        const el = this.getElement(observedName, accessibility);\n\n        if (el) {\n            return {\n                result: getPromise(this._win).resolve(el),\n                cancel: () => {\n                    /**/\n                },\n            };\n        }\n\n        let prefix: string;\n\n        if (accessibility === Types.ObservedElementAccesibilities.Accessible) {\n            prefix = \"a\";\n        } else if (\n            accessibility === Types.ObservedElementAccesibilities.Focusable\n        ) {\n            prefix = \"f\";\n        } else {\n            prefix = \"_\";\n        }\n\n        const key = prefix + observedName;\n        let w = this._waiting[key];\n\n        if (w && w.request) {\n            return w.request;\n        }\n\n        w = this._waiting[key] = {\n            timer: this._win().setTimeout(() => {\n                if (w.conditionTimer) {\n                    this._win().clearTimeout(w.conditionTimer);\n                }\n\n                delete this._waiting[key];\n\n                if (w.resolve) {\n                    w.resolve(null);\n                }\n            }, timeout),\n        };\n\n        const promise = new (getPromise(this._win))<HTMLElement | null>(\n            (resolve, reject) => {\n                w.resolve = resolve;\n                w.reject = reject;\n            }\n        );\n\n        w.request = {\n            result: promise,\n            cancel: () => {\n                this._rejectWaiting(key, true);\n            },\n        };\n\n        if (accessibility && this.getElement(observedName)) {\n            // If the observed element is alread in DOM, but not accessible yet,\n            // we need to run the wait logic.\n            this._waitConditional(observedName);\n        }\n\n        return w.request;\n    }\n\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): Types.ObservedElementAsyncRequest<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        const currentRequestFocus = this._currentRequest;\n\n        if (currentRequestFocus) {\n            currentRequestFocus.cancel();\n        }\n\n        const request = this.waitElement(\n            observedName,\n            timeout,\n            Types.ObservedElementAccesibilities.Focusable\n        );\n\n        this._currentRequest = request;\n        this._currentRequestTimestamp = Date.now();\n\n        request.result.finally(() => {\n            if (this._currentRequest === request) {\n                delete this._currentRequest;\n            }\n        });\n\n        return {\n            result: request.result.then((element) =>\n                this._lastRequestFocusId === requestId && element\n                    ? this._tabster.focusedElement.focus(element, true)\n                    : false\n            ),\n            cancel: () => {\n                request.cancel();\n            },\n        };\n    }\n\n    onObservedElementUpdate = (element: HTMLElement): void => {\n        const observed = getTabsterOnElement(this._tabster, element)?.observed;\n        const uid = getElementUId(this._win, element);\n        let info: ObservedElementInfo | undefined = this._observedById[uid];\n\n        if (observed && documentContains(element.ownerDocument, element)) {\n            if (!info) {\n                info = this._observedById[uid] = {\n                    element: new WeakHTMLElement(this._win, element),\n                };\n            }\n\n            observed.names.sort();\n            const observedNames = observed.names;\n            const prevNames = info.prevNames; // prevNames are already sorted\n\n            if (this._isObservedNamesUpdated(observedNames, prevNames)) {\n                if (prevNames) {\n                    prevNames.forEach((prevName) => {\n                        const obn = this._observedByName[prevName];\n\n                        if (obn && obn[uid]) {\n                            if (Object.keys(obn).length > 1) {\n                                delete obn[uid];\n                            } else {\n                                delete this._observedByName[prevName];\n                            }\n                        }\n                    });\n                }\n\n                info.prevNames = observedNames;\n            }\n\n            observedNames.forEach((observedName) => {\n                let obn = this._observedByName[observedName];\n\n                if (!obn) {\n                    obn = this._observedByName[observedName] = {};\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                obn[uid] = info!;\n\n                this._waitConditional(observedName);\n            });\n        } else if (info) {\n            const prevNames = info.prevNames;\n\n            if (prevNames) {\n                prevNames.forEach((prevName) => {\n                    const obn = this._observedByName[prevName];\n\n                    if (obn && obn[uid]) {\n                        if (Object.keys(obn).length > 1) {\n                            delete obn[uid];\n                        } else {\n                            delete this._observedByName[prevName];\n                        }\n                    }\n                });\n            }\n\n            delete this._observedById[uid];\n        }\n    };\n\n    private _waitConditional(observedName: string): void {\n        const waitingElementKey = \"_\" + observedName;\n        const waitingAccessibleElementKey = \"a\" + observedName;\n        const waitingFocusableElementKey = \"f\" + observedName;\n        const waitingElement = this._waiting[waitingElementKey];\n        const waitingAccessibleElement =\n            this._waiting[waitingAccessibleElementKey];\n        const waitingFocusableElement =\n            this._waiting[waitingFocusableElementKey];\n        const win = this._win();\n\n        const resolve = (\n            element: HTMLElement,\n            key: string,\n            waiting: ObservedWaiting,\n            accessibility: Types.ObservedElementAccesibility\n        ) => {\n            const observed = getTabsterOnElement(\n                this._tabster,\n                element\n            )?.observed;\n\n            if (!observed || !observed.names.includes(observedName)) {\n                return;\n            }\n\n            if (waiting.timer) {\n                win.clearTimeout(waiting.timer);\n            }\n\n            delete this._waiting[key];\n\n            if (waiting.resolve) {\n                waiting.resolve(element);\n            }\n\n            this.trigger(element, {\n                names: [observedName],\n                details: observed.details,\n                accessibility,\n            });\n        };\n\n        if (waitingElement) {\n            const element = this.getElement(observedName);\n\n            if (element && documentContains(element.ownerDocument, element)) {\n                resolve(\n                    element,\n                    waitingElementKey,\n                    waitingElement,\n                    Types.ObservedElementAccesibilities.Any\n                );\n            }\n        }\n\n        if (\n            waitingAccessibleElement &&\n            !waitingAccessibleElement.conditionTimer\n        ) {\n            const resolveAccessible = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isAccessible(element)\n                ) {\n                    resolve(\n                        element,\n                        waitingAccessibleElementKey,\n                        waitingAccessibleElement,\n                        Types.ObservedElementAccesibilities.Accessible\n                    );\n                } else {\n                    waitingAccessibleElement.conditionTimer = win.setTimeout(\n                        resolveAccessible,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveAccessible();\n        }\n\n        if (\n            waitingFocusableElement &&\n            !waitingFocusableElement.conditionTimer\n        ) {\n            const resolveFocusable = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isFocusable(element, true)\n                ) {\n                    resolve(\n                        element,\n                        waitingFocusableElementKey,\n                        waitingFocusableElement,\n                        Types.ObservedElementAccesibilities.Focusable\n                    );\n                } else {\n                    waitingFocusableElement.conditionTimer = win.setTimeout(\n                        resolveFocusable,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveFocusable();\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { getBoundingRect } from \"./Utils\";\n\ninterface WindowWithOutlineStyle extends Window {\n    __tabsterOutline?: {\n        style?: HTMLStyleElement;\n        elements?: Types.OutlineElements;\n    };\n}\n\nconst defaultProps: Types.OutlineProps = {\n    areaClass: \"tabster-focus-outline-area\",\n    outlineClass: \"tabster-focus-outline\",\n    outlineColor: \"#ff4500\",\n    outlineWidth: 2,\n    zIndex: 2147483647,\n};\n\nlet _props: Types.OutlineProps = defaultProps;\n\nclass OutlinePosition {\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n\n    public equalsTo(other: OutlinePosition): boolean {\n        return (\n            this.left === other.left &&\n            this.top === other.top &&\n            this.right === other.right &&\n            this.bottom === other.bottom\n        );\n    }\n\n    public clone(): OutlinePosition {\n        return new OutlinePosition(\n            this.left,\n            this.top,\n            this.right,\n            this.bottom\n        );\n    }\n}\n\nexport class OutlineAPI implements Types.OutlineAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _updateTimer: number | undefined;\n    private _outlinedElement: HTMLElement | undefined;\n    private _curPos: OutlinePosition | undefined;\n    private _isVisible = false;\n    private _curOutlineElements: Types.OutlineElements | undefined;\n    private _allOutlineElements: Types.OutlineElements[] = [];\n    private _fullScreenElement: HTMLElement | undefined;\n    private _fullScreenEventName: string | undefined;\n    private _fullScreenElementName: string | undefined;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(this._init);\n\n        if (typeof document !== \"undefined\") {\n            if (\"onfullscreenchange\" in document) {\n                this._fullScreenEventName = \"fullscreenchange\";\n                this._fullScreenElementName = \"fullscreenElement\";\n            } else if (\"onwebkitfullscreenchange\" in document) {\n                this._fullScreenEventName = \"webkitfullscreenchange\";\n                this._fullScreenElementName = \"webkitFullscreenElement\";\n            } else if (\"onmozfullscreenchange\" in document) {\n                this._fullScreenEventName = \"mozfullscreenchange\";\n                this._fullScreenElementName = \"mozFullScreenElement\";\n            } else if (\"onmsfullscreenchange\" in document) {\n                this._fullScreenEventName = \"msfullscreenchange\";\n                this._fullScreenElementName = \"msFullscreenElement\";\n            }\n        }\n    }\n\n    private _init = (): void => {\n        this._tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.subscribe(this._onFocus);\n\n        const win = this._win();\n\n        win.addEventListener(\"scroll\", this._onScroll, true); // Capture!\n\n        if (this._fullScreenEventName) {\n            win.document.addEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n    };\n\n    setup(props?: Partial<Types.OutlineProps>): void {\n        _props = { ..._props, ...props };\n\n        const win = this._win() as WindowWithOutlineStyle;\n\n        if (!win.__tabsterOutline) {\n            win.__tabsterOutline = {};\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(win.document, _props);\n        }\n\n        if (!props || !props.areaClass) {\n            win.document.body.classList.add(defaultProps.areaClass);\n        } else {\n            win.document.body.classList.remove(defaultProps.areaClass);\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.removeEventListener(\"scroll\", this._onScroll, true);\n\n        if (this._fullScreenEventName) {\n            win.document.removeEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n\n        this._allOutlineElements.forEach((outlineElements) =>\n            this._removeDOM(outlineElements.container)\n        );\n        this._allOutlineElements = [];\n\n        delete this._outlinedElement;\n        delete this._curPos;\n        delete this._curOutlineElements;\n        delete this._fullScreenElement;\n    }\n\n    private _onFullScreenChanged = (e: Event): void => {\n        if (!this._fullScreenElementName || !e.target) {\n            return;\n        }\n\n        const target = (e.target as Document).body || (e.target as HTMLElement);\n        const outlineElements = this._getDOM(target);\n\n        if (target.ownerDocument && outlineElements) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsElement: HTMLElement | null = (target.ownerDocument as any)[\n                this._fullScreenElementName\n            ];\n\n            if (fsElement) {\n                fsElement.appendChild(outlineElements.container);\n                this._fullScreenElement = fsElement;\n            } else {\n                target.ownerDocument.body.appendChild(\n                    outlineElements.container\n                );\n                this._fullScreenElement = undefined;\n            }\n        }\n    };\n\n    private _onKeyboardNavigationStateChanged = (): void => {\n        this._onFocus(this._tabster.focusedElement.getFocusedElement());\n    };\n\n    private _shouldShowCustomOutline(element: HTMLElement): boolean {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n\n        if (\n            tabsterOnElement &&\n            tabsterOnElement.outline &&\n            tabsterOnElement.outline.isIgnored\n        ) {\n            return false;\n        }\n\n        for (let i: HTMLElement | null = element; i; i = i.parentElement) {\n            if (i.classList && i.classList.contains(_props.areaClass)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (!this._updateElement(e) && this._isVisible) {\n            this._setVisibility(false);\n        }\n    };\n\n    private _updateElement(e: HTMLElement | undefined): boolean {\n        this._outlinedElement = undefined;\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._curPos = undefined;\n\n        if (!this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            return false;\n        }\n\n        if (e) {\n            // TODO: It's hard (and not necessary) to come up with every possible\n            // condition when there should be no outline, it's better to add an\n            // API to customize the ignores.\n            if (e.tagName === \"INPUT\") {\n                const inputType = (e as HTMLInputElement).type;\n                const outlinedInputTypes = {\n                    button: true,\n                    checkbox: true,\n                    file: true,\n                    image: true,\n                    radio: true,\n                    range: true,\n                    reset: true,\n                    submit: true,\n                };\n\n                if (!(inputType in outlinedInputTypes)) {\n                    return false;\n                }\n            } else if (\n                e.tagName === \"TEXTAREA\" ||\n                e.contentEditable === \"true\" ||\n                e.tagName === \"IFRAME\"\n            ) {\n                return false;\n            }\n\n            if (!this._shouldShowCustomOutline(e)) {\n                return false;\n            }\n\n            if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n                this._outlinedElement = e;\n                this._updateOutline();\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    private _onScroll = (e: UIEvent): void => {\n        if (\n            !this._outlinedElement ||\n            !OutlineAPI._isParentChild(\n                e.target as HTMLElement,\n                this._outlinedElement\n            )\n        ) {\n            return;\n        }\n\n        this._curPos = undefined;\n\n        this._setOutlinePosition();\n    };\n\n    private _updateOutline(): void {\n        this._setOutlinePosition();\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        this._updateTimer = this._win().setTimeout(() => {\n            this._updateTimer = undefined;\n            this._updateOutline();\n        }, 30);\n    }\n\n    private _setVisibility(visible: boolean): void {\n        this._isVisible = visible;\n\n        if (this._curOutlineElements) {\n            if (visible) {\n                this._curOutlineElements.container.classList.add(\n                    `${_props.outlineClass}_visible`\n                );\n            } else {\n                this._curOutlineElements.container.classList.remove(\n                    `${_props.outlineClass}_visible`\n                );\n                this._curPos = undefined;\n            }\n        }\n    }\n\n    private _setOutlinePosition(): void {\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        let boundingRect = getBoundingRect(this._win, this._outlinedElement);\n\n        const position = new OutlinePosition(\n            boundingRect.left,\n            boundingRect.top,\n            boundingRect.right,\n            boundingRect.bottom\n        );\n\n        if (this._curPos && position.equalsTo(this._curPos)) {\n            return;\n        }\n\n        const outlineElements = this._getDOM(this._outlinedElement);\n        const win =\n            this._outlinedElement.ownerDocument &&\n            this._outlinedElement.ownerDocument.defaultView;\n\n        if (!outlineElements || !win) {\n            return;\n        }\n\n        if (this._curOutlineElements !== outlineElements) {\n            this._setVisibility(false);\n            this._curOutlineElements = outlineElements;\n        }\n\n        this._curPos = position;\n\n        const p = position.clone();\n        let hasAbsolutePositionedParent = false;\n        let hasFixedPositionedParent = false;\n\n        const container = outlineElements.container;\n        const scrollingElement =\n            container &&\n            container.ownerDocument &&\n            (container.ownerDocument.scrollingElement as HTMLElement);\n\n        if (!scrollingElement) {\n            return;\n        }\n\n        for (\n            let parent = this._outlinedElement.parentElement;\n            parent;\n            parent = parent.parentElement\n        ) {\n            // The element might be partially visible within its scrollable parent,\n            // reduce the bounding rect if this is the case.\n\n            if (parent === this._fullScreenElement) {\n                break;\n            }\n\n            boundingRect = getBoundingRect(this._win, parent);\n\n            const win =\n                parent.ownerDocument && parent.ownerDocument.defaultView;\n\n            if (!win) {\n                return;\n            }\n\n            const computedStyle = win.getComputedStyle(parent);\n            const position = computedStyle.position;\n\n            if (position === \"absolute\") {\n                hasAbsolutePositionedParent = true;\n            } else if (position === \"fixed\" || position === \"sticky\") {\n                hasFixedPositionedParent = true;\n            }\n\n            if (computedStyle.overflow === \"visible\") {\n                continue;\n            }\n\n            if (\n                (!hasAbsolutePositionedParent && !hasFixedPositionedParent) ||\n                computedStyle.overflow === \"hidden\"\n            ) {\n                if (boundingRect.left > p.left) {\n                    p.left = boundingRect.left;\n                }\n                if (boundingRect.top > p.top) {\n                    p.top = boundingRect.top;\n                }\n                if (boundingRect.right < p.right) {\n                    p.right = boundingRect.right;\n                }\n                if (boundingRect.bottom < p.bottom) {\n                    p.bottom = boundingRect.bottom;\n                }\n            }\n        }\n\n        const allRect = getBoundingRect(this._win, scrollingElement);\n        const allWidth = allRect.left + allRect.right;\n        const allHeight = allRect.top + allRect.bottom;\n        const ow = _props.outlineWidth;\n\n        p.left = p.left > ow ? p.left - ow : 0;\n        p.top = p.top > ow ? p.top - ow : 0;\n        p.right = p.right < allWidth - ow ? p.right + ow : allWidth;\n        p.bottom = p.bottom < allHeight - ow ? p.bottom + ow : allHeight;\n\n        const width = p.right - p.left;\n        const height = p.bottom - p.top;\n\n        if (width > ow * 2 && height > ow * 2) {\n            const leftBorderNode = outlineElements.left;\n            const topBorderNode = outlineElements.top;\n            const rightBorderNode = outlineElements.right;\n            const bottomBorderNode = outlineElements.bottom;\n            const sx =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageXOffset;\n            const sy =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageYOffset;\n\n            container.style.position = hasFixedPositionedParent\n                ? \"fixed\"\n                : \"absolute\";\n\n            container.style.background = _props.outlineColor;\n\n            leftBorderNode.style.width =\n                rightBorderNode.style.width =\n                topBorderNode.style.height =\n                bottomBorderNode.style.height =\n                    _props.outlineWidth + \"px\";\n\n            leftBorderNode.style.left =\n                topBorderNode.style.left =\n                bottomBorderNode.style.left =\n                    p.left + sx + \"px\";\n            rightBorderNode.style.left = p.left + sx + width - ow + \"px\";\n\n            leftBorderNode.style.top =\n                rightBorderNode.style.top =\n                topBorderNode.style.top =\n                    p.top + sy + \"px\";\n            bottomBorderNode.style.top = p.top + sy + height - ow + \"px\";\n\n            leftBorderNode.style.height = rightBorderNode.style.height =\n                height + \"px\";\n\n            topBorderNode.style.width = bottomBorderNode.style.width =\n                width + \"px\";\n\n            this._setVisibility(true);\n        } else {\n            this._setVisibility(false);\n        }\n    }\n\n    private _getDOM(\n        contextElement: HTMLElement\n    ): Types.OutlineElements | undefined {\n        const doc = contextElement.ownerDocument;\n        const win = (doc && doc.defaultView) as WindowWithOutlineStyle;\n\n        if (!doc || !win || !win.__tabsterOutline) {\n            return undefined;\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(doc, _props);\n        }\n\n        if (!win.__tabsterOutline.elements) {\n            const outlineElements: Types.OutlineElements = {\n                container: doc.createElement(\"div\"),\n                left: doc.createElement(\"div\"),\n                top: doc.createElement(\"div\"),\n                right: doc.createElement(\"div\"),\n                bottom: doc.createElement(\"div\"),\n            };\n\n            outlineElements.container.className = _props.outlineClass;\n            outlineElements.left.className = `${_props.outlineClass}__left`;\n            outlineElements.top.className = `${_props.outlineClass}__top`;\n            outlineElements.right.className = `${_props.outlineClass}__right`;\n            outlineElements.bottom.className = `${_props.outlineClass}__bottom`;\n\n            outlineElements.container.appendChild(outlineElements.left);\n            outlineElements.container.appendChild(outlineElements.top);\n            outlineElements.container.appendChild(outlineElements.right);\n            outlineElements.container.appendChild(outlineElements.bottom);\n\n            doc.body.appendChild(outlineElements.container);\n\n            win.__tabsterOutline.elements = outlineElements;\n\n            // TODO: Make a garbage collector to remove the references\n            // to the outlines which are nowhere in the DOM anymore.\n            this._allOutlineElements.push(outlineElements);\n        }\n\n        return win.__tabsterOutline.elements;\n    }\n\n    private _removeDOM(contextElement: HTMLElement): void {\n        const win = (contextElement.ownerDocument &&\n            contextElement.ownerDocument.defaultView) as WindowWithOutlineStyle;\n        const outline = win && win.__tabsterOutline;\n\n        if (!outline) {\n            return;\n        }\n\n        if (outline.style && outline.style.parentNode) {\n            outline.style.parentNode.removeChild(outline.style);\n\n            delete outline.style;\n        }\n\n        const outlineElements = outline && outline.elements;\n\n        if (outlineElements) {\n            if (outlineElements.container.parentNode) {\n                outlineElements.container.parentNode.removeChild(\n                    outlineElements.container\n                );\n            }\n\n            delete outline.elements;\n        }\n    }\n\n    private static _isParentChild(\n        parent: HTMLElement,\n        child: HTMLElement\n    ): boolean {\n        return (\n            child === parent ||\n            // tslint:disable-next-line:no-bitwise\n            !!(\n                parent.compareDocumentPosition(child) &\n                document.DOCUMENT_POSITION_CONTAINED_BY\n            )\n        );\n    }\n}\n\nfunction appendStyles(\n    document: HTMLDocument,\n    props: Types.OutlineProps\n): HTMLStyleElement {\n    const style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    style.appendChild(document.createTextNode(getOutlineStyles(props)));\n    document.head.appendChild(style);\n    return style;\n}\n\nfunction getOutlineStyles(props: Types.OutlineProps): string {\n    return `\n.${props.areaClass} *, .${props.areaClass} *:focus {\noutline: none !important;\n}\n\n.${props.outlineClass} {\ndisplay: none;\nposition: absolute;\nwidth: 0;\nheight: 0;\nleft: 0;\ntop: 0;\nz-index: ${props.zIndex};\n}\n\n.${props.outlineClass}.${props.outlineClass}_visible {\ndisplay: block;\n}\n\n.${props.outlineClass}__left,\n.${props.outlineClass}__top,\n.${props.outlineClass}__right,\n.${props.outlineClass}__bottom {\nposition: absolute;\nbackground: inherit;\n}`;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\n/**\n * Allows default or user focus behaviour on the DOM subtree\n * i.e. Tabster will not control focus events within an uncontrolled area\n */\nexport class UncontrolledAPI implements Types.UncontrolledAPI {\n    constructor() {\n        /**/\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CrossOriginAPI } from \"./CrossOrigin\";\nimport { DeloserAPI } from \"./Deloser\";\nimport { FocusableAPI } from \"./Focusable\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { GroupperAPI } from \"./Groupper\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport { ModalizerAPI } from \"./Modalizer\";\nimport { MoverAPI } from \"./Mover\";\nimport { observeMutations } from \"./MutationEvent\";\nimport { ObservedElementAPI } from \"./State/ObservedElement\";\nimport { OutlineAPI } from \"./Outline\";\nimport { RootAPI, WindowWithTabsterInstance } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { UncontrolledAPI } from \"./Uncontrolled\";\nimport {\n    cleanupFakeWeakRefs,\n    clearElementCache,\n    createElementTreeWalker,\n    createWeakMap,\n    disposeInstanceContext,\n    startFakeWeakRefsCleanup,\n    stopFakeWeakRefsCleanupAndClearStorage,\n    DummyInputObserver,\n} from \"./Utils\";\n\nexport { Types };\nexport * from \"./AttributeHelpers\";\n\nclass Tabster implements Types.Tabster {\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    core: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this.keyboardNavigation = tabster.keyboardNavigation;\n        this.focusedElement = tabster.focusedElement;\n        this.focusable = tabster.focusable;\n        this.root = tabster.root;\n        this.uncontrolled = tabster.uncontrolled;\n        this.core = tabster;\n    }\n}\n\n/**\n * Extends Window to include an internal Tabster instance.\n */\nclass TabsterCore implements Types.TabsterCore {\n    private _storage: WeakMap<HTMLElement, Types.TabsterElementStorage>;\n    private _unobserve: (() => void) | undefined;\n    private _win: WindowWithTabsterInstance | undefined;\n    private _forgetMemorizedTimer: number | undefined;\n    private _forgetMemorizedElements: HTMLElement[] = [];\n    private _wrappers: Set<Tabster> = new Set<Tabster>();\n    private _initTimer: number | undefined;\n    private _initQueue: (() => void)[] = [];\n\n    _version: string = __VERSION__;\n    _noop = false;\n    controlTab: boolean;\n    rootDummyInputs: boolean;\n\n    // Core APIs\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    internal: Types.InternalAPI;\n    _dummyObserver: Types.DummyInputObserver;\n\n    // Extended APIs\n    groupper?: Types.GroupperAPI;\n    mover?: Types.MoverAPI;\n    outline?: Types.OutlineAPI;\n    deloser?: Types.DeloserAPI;\n    modalizer?: Types.ModalizerAPI;\n    observedElement?: Types.ObservedElementAPI;\n    crossOrigin?: Types.CrossOriginAPI;\n\n    constructor(win: Window, props?: Types.TabsterCoreProps) {\n        this._storage = createWeakMap(win);\n        this._win = win;\n\n        const getWindow = this.getWindow;\n\n        this.keyboardNavigation = new KeyboardNavigationState(getWindow);\n        this.focusedElement = new FocusedElementState(this, getWindow);\n        this.focusable = new FocusableAPI(this);\n        this.root = new RootAPI(this, props?.autoRoot);\n        this.uncontrolled = new UncontrolledAPI();\n        this.controlTab = props?.controlTab ?? true;\n        this.rootDummyInputs = !!props?.rootDummyInputs;\n\n        this._dummyObserver = new DummyInputObserver(getWindow);\n\n        this.internal = {\n            stopObserver: (): void => {\n                if (this._unobserve) {\n                    this._unobserve();\n                    delete this._unobserve;\n                }\n            },\n\n            resumeObserver: (syncState: boolean): void => {\n                if (!this._unobserve) {\n                    const doc = getWindow().document;\n                    this._unobserve = observeMutations(\n                        doc,\n                        this,\n                        updateTabsterByAttribute,\n                        syncState\n                    );\n                }\n            },\n        };\n\n        startFakeWeakRefsCleanup(getWindow);\n\n        // Gives a tick to the host app to initialize other tabster\n        // APIs before tabster starts observing attributes.\n        this.queueInit(() => {\n            this.internal.resumeObserver(true);\n        });\n    }\n\n    createTabster(noRefCount?: boolean): Types.Tabster {\n        const wrapper = new Tabster(this);\n\n        if (!noRefCount) {\n            this._wrappers.add(wrapper);\n        }\n\n        return wrapper;\n    }\n\n    disposeTabster(wrapper: Types.Tabster, allInstances?: boolean) {\n        if (allInstances) {\n            this._wrappers.clear();\n        } else {\n            this._wrappers.delete(wrapper);\n        }\n\n        if (this._wrappers.size === 0) {\n            this.dispose();\n        }\n    }\n\n    dispose(): void {\n        this.internal.stopObserver();\n\n        const win = this._win;\n\n        win?.clearTimeout(this._initTimer);\n        delete this._initTimer;\n        this._initQueue = [];\n\n        this._forgetMemorizedElements = [];\n\n        if (win && this._forgetMemorizedTimer) {\n            win.clearTimeout(this._forgetMemorizedTimer);\n            delete this._forgetMemorizedTimer;\n        }\n\n        this.outline?.dispose();\n        this.crossOrigin?.dispose();\n        this.deloser?.dispose();\n        this.groupper?.dispose();\n        this.mover?.dispose();\n        this.modalizer?.dispose();\n        this.observedElement?.dispose();\n\n        this.keyboardNavigation.dispose();\n        this.focusable.dispose();\n        this.focusedElement.dispose();\n        this.root.dispose();\n\n        this._dummyObserver.dispose();\n\n        stopFakeWeakRefsCleanupAndClearStorage(this.getWindow);\n        clearElementCache(this.getWindow);\n\n        this._storage = new WeakMap();\n        this._wrappers.clear();\n\n        if (win) {\n            disposeInstanceContext(win);\n            delete win.__tabsterInstance;\n            delete this._win;\n        }\n    }\n\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): Types.TabsterElementStorageEntry | undefined {\n        const storage = this._storage;\n        let entry = storage.get(element);\n\n        if (entry) {\n            if (addremove === false && Object.keys(entry).length === 0) {\n                storage.delete(element);\n            }\n        } else if (addremove === true) {\n            entry = {};\n            storage.set(element, entry);\n        }\n\n        return entry;\n    }\n\n    getWindow = () => {\n        if (!this._win) {\n            throw new Error(\"Using disposed Tabster.\");\n        }\n\n        return this._win;\n    };\n\n    forceCleanup(): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._forgetMemorizedElements.push(this._win.document.body);\n\n        if (this._forgetMemorizedTimer) {\n            return;\n        }\n\n        this._forgetMemorizedTimer = this._win.setTimeout(() => {\n            delete this._forgetMemorizedTimer;\n\n            for (\n                let el: HTMLElement | undefined =\n                    this._forgetMemorizedElements.shift();\n                el;\n                el = this._forgetMemorizedElements.shift()\n            ) {\n                clearElementCache(this.getWindow, el);\n                FocusedElementState.forgetMemorized(this.focusedElement, el);\n            }\n        }, 0);\n\n        cleanupFakeWeakRefs(this.getWindow, true);\n    }\n\n    queueInit(callback: () => void): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._initQueue.push(callback);\n\n        if (!this._initTimer) {\n            this._initTimer = this._win?.setTimeout(() => {\n                delete this._initTimer;\n                this.drainInitQueue();\n            }, 0);\n        }\n    }\n\n    drainInitQueue(): void {\n        if (!this._win) {\n            return;\n        }\n\n        const queue = this._initQueue;\n        // Resetting the queue before calling the callbacks to avoid recursion.\n        this._initQueue = [];\n        queue.forEach((callback) => callback());\n    }\n}\n\nexport function forceCleanup(tabster: Types.Tabster): void {\n    // The only legit case for calling this method is when you've completely removed\n    // the application DOM and not going to add the new one for a while.\n    const tabsterCore = tabster.core;\n    tabsterCore.forceCleanup();\n}\n\n/**\n * Creates an instance of Tabster, returns the current window instance if it already exists.\n */\nexport function createTabster(\n    win: Window,\n    props?: Types.TabsterCoreProps\n): Types.Tabster {\n    let tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    if (tabster) {\n        return tabster.createTabster();\n    }\n\n    tabster = new TabsterCore(win, props);\n    (win as WindowWithTabsterInstance).__tabsterInstance = tabster;\n    return tabster.createTabster();\n}\n\n/**\n * Returns an instance of Tabster if it was created before or null.\n */\nexport function getTabster(win: Window): Types.Tabster | null {\n    const tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    return tabster ? tabster.createTabster(true) : null;\n}\n\n/**\n * Creates a new groupper instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getGroupper(tabster: Types.Tabster): Types.GroupperAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.groupper) {\n        tabsterCore.groupper = new GroupperAPI(\n            tabsterCore,\n            tabsterCore.getWindow\n        );\n    }\n\n    return tabsterCore.groupper;\n}\n\n/**\n * Creates a new mover instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getMover(tabster: Types.Tabster): Types.MoverAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.mover) {\n        tabsterCore.mover = new MoverAPI(tabsterCore, tabsterCore.getWindow);\n    }\n\n    return tabsterCore.mover;\n}\n\nexport function getOutline(tabster: Types.Tabster): Types.OutlineAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.outline) {\n        tabsterCore.outline = new OutlineAPI(tabsterCore);\n    }\n\n    return tabsterCore.outline;\n}\n\n/**\n * Creates a new new deloser instance or returns an existing one\n * @param tabster Tabster instance\n * @param props Deloser props\n */\nexport function getDeloser(\n    tabster: Types.Tabster,\n    props?: { autoDeloser: Types.DeloserProps }\n): Types.DeloserAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.deloser) {\n        tabsterCore.deloser = new DeloserAPI(tabsterCore, props);\n    }\n\n    return tabsterCore.deloser;\n}\n\n/**\n * Creates a new modalizer instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getModalizer(tabster: Types.Tabster): Types.ModalizerAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.modalizer) {\n        tabsterCore.modalizer = new ModalizerAPI(tabsterCore);\n    }\n\n    return tabsterCore.modalizer;\n}\n\nexport function getObservedElement(\n    tabster: Types.Tabster\n): Types.ObservedElementAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.observedElement) {\n        tabsterCore.observedElement = new ObservedElementAPI(tabsterCore);\n    }\n\n    return tabsterCore.observedElement;\n}\n\nexport function getCrossOrigin(tabster: Types.Tabster): Types.CrossOriginAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.crossOrigin) {\n        getDeloser(tabster);\n        getModalizer(tabster);\n        getMover(tabster);\n        getGroupper(tabster);\n        getOutline(tabster);\n        getObservedElement(tabster);\n        tabsterCore.crossOrigin = new CrossOriginAPI(tabsterCore);\n    }\n\n    return tabsterCore.crossOrigin;\n}\n\nexport function getInternal(tabster: Types.Tabster): Types.InternalAPI {\n    const tabsterCore = tabster.core;\n    return tabsterCore.internal;\n}\n\nexport function disposeTabster(\n    tabster: Types.Tabster,\n    allInstances?: boolean\n): void {\n    tabster.core.disposeTabster(tabster, allInstances);\n}\n\n/**\n * Returns an instance of Tabster if it already exists on the window .\n * @param win window instance that could contain an Tabster instance.\n */\nexport function getCurrentTabster(win: Window): Types.TabsterCore | undefined {\n    return (win as WindowWithTabsterInstance).__tabsterInstance;\n}\n\n/**\n * Allows to make Tabster non operational. Intended for performance debugging (and other\n * kinds of debugging), you can switch Tabster off without changing the application code\n * that consumes it.\n * @param tabster a reference created by createTabster().\n * @param noop true if you want to make Tabster noop, false if you want to turn it back.\n */\nexport function makeNoOp(tabster: Types.Tabster, noop: boolean): void {\n    const core = tabster.core;\n\n    if (core._noop !== noop) {\n        core._noop = noop;\n\n        const processNode = (element: HTMLElement): number => {\n            if (!element.getAttribute) {\n                return NodeFilter.FILTER_SKIP;\n            }\n\n            if (\n                getTabsterOnElement(core, element) ||\n                element.hasAttribute(Types.TabsterAttributeName)\n            ) {\n                updateTabsterByAttribute(core, element);\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        };\n\n        const doc = core.getWindow().document;\n        const body = doc.body;\n\n        processNode(body);\n\n        const walker = createElementTreeWalker(doc, body, processNode);\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n}\n\nexport function isNoOp(tabster: Types.TabsterCore): boolean {\n    return (tabster as TabsterCore)._noop;\n}\n"],"names":["TabsterAttributeName","TabsterDummyInputAttributeName","DeloserEventName","ModalizerActiveEventName","ModalizerInactiveEventName","ModalizerFocusInEventName","ModalizerFocusOutEventName","ModalizerBeforeFocusOutEventName","MoverEventName","FocusInEventName","FocusOutEventName","ObservedElementAccesibilities","Any","Accessible","Focusable","RestoreFocusOrders","History","DeloserDefault","RootDefault","DeloserFirst","RootFirst","Visibilities","Invisible","PartiallyVisible","Visible","MoverDirections","Both","Vertical","Horizontal","Grid","GroupperTabbabilities","Unlimited","Limited","LimitedTrapFocus","SysDummyInputsPositions","Auto","Inside","Outside","getTabsterOnElement","tabster","element","storageEntry","updateTabsterByAttribute","dispose","newAttrValue","_noop","undefined","getAttribute","Types","entry","newAttr","attr","string","newValue","JSON","parse","Error","object","e","__DEV__","console","error","tabsterOnElement","oldTabsterProps","newTabsterProps","key","Object","keys","root","onRoot","part","observedElement","onObservedElementUpdate","sys","deloser","setProps","createDeloser","createRoot","modalizer","createModalizer","focusable","groupper","createGroupper","mover","createMover","observed","uncontrolled","outline","length","createEventTarget","getWindow","global","EventTarget","TypeError","document","createElement","_isBrokenIE11","_DOMRect","DOMRect","constructor","x","y","width","height","left","top","right","bottom","_uidCounter","createTreeWalker","NodeFilter","SHOW_ELEMENT","_updateDummyInputsTimeout","getInstanceContext","win","ctx","__tabsterInstanceContext","elementByUId","basics","Promise","WeakRef","containerBoundingRectCache","lastContainerBoundingRectCacheId","fakeWeakRefs","fakeWeakRefsStarted","disposeInstanceContext","containerBoundingRectCacheTimer","clearTimeout","fakeWeakRefsTimer","createWeakMap","WeakMap","FakeWeakRef","target","_target","deref","cleanup","fwr","forceRemove","documentContains","ownerDocument","WeakHTMLElement","data","context","ref","push","_ref","_data","get","getData","cleanupFakeWeakRefs","filter","startFakeWeakRefsCleanup","getWeakRef","setTimeout","stopFakeWeakRefsCleanupAndClearStorage","createElementTreeWalker","doc","acceptNode","nodeType","Node","ELEMENT_NODE","getBoundingRect","cacheId","__tabsterCacheId","cached","rect","scrollingElement","documentElement","clientWidth","clientHeight","r","getBoundingClientRect","Math","max","min","window","cId","isElementVerticallyVisibleInContainer","tolerance","container","getScrollableContainer","containerRect","elementRect","intersectionTolerance","topIntersection","bottomIntersection","totalIntersection","scrollIntoView","alignToTop","scrollTop","el","parentElement","scrollWidth","scrollHeight","makeFocusIgnored","__shouldIgnoreFocus","shouldIgnoreFocus","getUId","wnd","rnd","Uint32Array","crypto","getRandomValues","msCrypto","i","random","srnd","toString","Date","now","join","getElementUId","uid","__tabsterElementUID","getWindowUId","__tabsterCrossOriginWindowUID","clearElementCache","parent","wel","contains","body","matchesSelector","selector","matches","msMatchesSelector","webkitMatchesSelector","call","getPromise","_lastTabsterPartId","TabsterPart","props","_tabster","_element","_props","id","getElement","getProps","DummyInput","isOutside","input","onFocusIn","relatedTarget","DummyInputManager","getLastPhantomFrom","_isBackward","useDefaultAction","onFocusOut","tabIndex","setAttribute","style","position","opacity","zIndex","setProperty","isFirst","_isPhantom","isPhantom","addEventListener","_focusIn","_focusOut","__tabsterDummyContainer","_disposeTimer","_clearDisposeTimeout","removeEventListener","removeChild","setTopLeft","isIn","current","previous","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DummyInputManagerPriorities","Root","Modalizer","Mover","Groupper","priority","outsideByDefault","callForDefaultAction","_instance","DummyInputManagerCore","moveOut","backwards","moveOutWithDefaultAction","_setHandlers","_onFocusIn","_onFocusOut","getHandler","setTabbable","tabbable","ret","_lastPhantomFrom","moveWithPhantomDummy","moveOutside","isBackward","dummy","insertBefore","nextElementSibling","beforeBefore","previousElementSibling","nativeFocus","setDummyInputDebugValue","wrappers","what","map","w","DummyInputObserver","Set","WeakSet","Map","_changedParents","has","add","_updateDummyInputsTimer","_win","callback","_dummies","dummyParent","set","domChanged","_domChanged","remove","dummyInputElements","delete","size","_updateTimer","clear","updatePositions","compute","_updateQueue","_lastUpdateQueueTime","_scheduledUpdatePositions","scrollTopLeftCache","setTopLeftCallbacks","manager","dummyInput","_onFocus","first","_firstDummy","last","_lastDummy","firstInput","lastInput","toFocus","isFocusable","_wrappers","wrapper","_getCurrent","_addTimer","_getWindow","dif","dil","_isOutside","elementParent","nextSibling","lastElementChild","appendChild","firstElementChild","_addTransformOffsets","_dummyObserver","_computeTransformOffsets","from","transformElements","_transformElements","newTransformElements","scrollLeft","scrollTopLeft","transform","getComputedStyle","_callForDefaultAction","instance","__tabsterDummy","forcedDummyPosition","dummyInputsPosition","tagName","dummyElement","_addDummyInputs","force","sort","a","b","getLastChild","lastChild","getAdjacentElement","prev","cur","adjacent","triggerEvent","name","details","event","createEvent","initEvent","dispatchEvent","defaultPrevented","augmentAttribute","value","aug","origVal","removeAttribute","origValue","getTabsterAttribute","plain","stringify","mergeTabsterProps","newProps","setTabsterAttribute","update","_setInformativeStyle","weakElement","removeProperty","RootDummyManager","setFocused","_setFocused","keyboardNavigation","setNavigatingWithKeyboard","focusedElement","getFirstOrLastTabbable","ignoreAccessibility","blur","_onDummyInputFocus","onDispose","hasFocused","fromAdjacent","_setFocusedTimer","_isFocused","eventTarget","_setTabbableTimer","RootAPI","getTabsterContext","rootDummyInputs","_dummyManager","_onDispose","_sys","controlTab","addDummyInputs","subscribe","_add","_remove","dummyManager","autoRoot","_autoRootUnwait","_autoRoot","_autoRootWaiting","_autoRootCreate","_roots","queueInit","forEach","rootId","rootById","newRoot","_onRootDispose","_forceDummy","roots","getRootByUId","__tabsterInstance","options","drainInitQueue","checkRtl","isExcludedFromMover","isGroupperFirst","modalizerInGroupper","isRtl","curElement","ignoreKeydown","dir","toLowerCase","excludeFromMover","curModalizer","curGroupper","curMover","isActive","tabbability","userId","activeId","assign","rootAPI","shouldIgnoreKeydown","getRoot","removed","_containerHistoryLength","DeloserItemBase","DeloserItem","_deloser","belongsTo","unshift","focusAvailable","available","findAvailable","focus","resetFocus","resolve","DeloserHistoryByRootBase","rootUId","getLength","_history","removeDeloser","c","hasDeloser","some","d","DeloserHistoryByRoot","unshiftToDeloser","item","splice","skip","resetQueue","DeloserHistory","process","DeloserAPI","getDeloser","historyByRoot","make","createInstance","hbr","h","snapshotIndex","buildElementSelector","withClass","withIndex","escapeRegExp","escapeReplaceValue","replace","className","split","cls","trim","index","buildSelector","isBody","Deloser","_isActive","_snapshotIndex","focusFirst","focusDefault","preserveExisting","we","setActive","active","getActions","clearHistory","setSnapshot","pop","isVisible","restoreFocusOrder","rootElement","findDefault","_findFirst","availableInHistory","_findInHistory","availableDefault","availableFirst","customFocusLostHandler","slice","noSelectorCheck","els","querySelectorAll","isNavigatingWithKeyboard","findFirst","ignoreUncontrolled","useActiveModalizer","_restoreFocusTimer","_scheduleRestoreFocus","_activate","_deactivate","autoDeloser","_autoDeloser","_autoDeloserInstance","unsubscribe","_curDeloser","_onDeloserDispose","getFocusedElement","pause","_isPaused","resume","restore","curDeloser","_inDeloser","_isRestoringFocus","restoreFocus","lastFocused","getLastFocusedElement","offsetParent","deloserAPI","autoDeloserProps","getHistory","forceRestoreFocus","Subscribable","_callbacks","_val","callbacks","indexOf","subscribeFirst","setVal","val","_callCallbacks","getVal","trigger","_transactionTimeout","_pingTimeout","_targetIdUp","CrossOriginTransactionTypes","Bootstrap","FocusElement","State","GetElement","RestoreFocusInDeloser","Ping","CrossOriginDeloserItem","trasactions","_transactions","deloserUId","reset","beginTransaction","RestoreFocusInDeloserTransaction","then","CrossOriginDeloserHistoryByRoot","transactions","CrossOriginTransaction","getOwner","knownTargets","timeout","sentTo","targetId","sendUp","owner","ownerId","beginData","_knownTargets","_sentTo","_promise","reject","_resolve","_reject","getTargets","send","begin","selfResponse","targets","transaction","type","isResponse","timestamp","sentto","_isSelfResponding","endData","_sentCount","end","_send","_inProgress","_isDone","onResponse","inProgressId","BootstrapTransaction","shouldForward","makeResponse","FocusElementTransaction","shouldSelfRespond","GetElementTransaction","findElement","forwardResult","CrossOriginStates","Focused","Blurred","Observed","DeadWindow","KeyboardNavigation","Outline","StateTransaction","state","isSelfResponse","_makeFocusedResponse","_makeBlurredResponse","_makeObservedResponse","_makeDeadWindowResponse","_makeKeyboardNavigationResponse","_makeOutlineResponse","CrossOriginElement","ownerUId","observedName","observedDetails","focusOwner","focusOwnerTimestamp","history","historyItem","CrossOriginFocusedElementState","crossOrigin","isFocusedProgrammatically","CrossOriginObservedElementState","names","deadUId","removeTarget","ignoreKeyboardNavigationStateUpdate","origOutlineSetup","getElementById","getElementData","getDeloserUID","dataOut","accessibility","isWaitElementResolved","isForwardResolved","isResolved","waitElement","result","forwardRet","deloserByUId","PingTransaction","CrossOriginTransactions","_ownerUId","transactionId","knownTarget","t","Transaction","_getTransactionClass","forwardTransaction","_owner","response","_dead","source","postMessage","_onMessage","setup","isSetUp","setSendUp","_onPageHide","_ping","_isDefaultSendUp","_onBrowserMessage","_pingTimer","_deadPromise","timer","withReject","_beginTransaction","catch","finally","deadWindows","all","focused","noFocusedProgrammaticallyFlag","noAccessibleCheck","_focus","focusById","elementId","focusByObservedName","elementData","requestFocus","requestId","_lastRequestFocusId","CrossOriginAPI","_onKeyboardNavigationStateChanged","_onObserved","_ctx","_outlineSetup","_blurTimer","_init","deloserElement","_focusableSelector","FocusableAPI","includeProgrammaticallyFocusable","noVisibleCheck","isAccessible","defaultView","computedStyle","visibility","_isHidden","ignoreDisabled","ignoreAriaDisabled","_isDisabled","hasAttribute","attrVal","isAugmented","findLast","findNext","findPrev","acceptCondition","isDefault","findAll","_findElements","found","currentElement","modalizerId","onUncontrolled","onElement","elements","acceptElementState","modalizerUserId","cachedGrouppers","walker","node","_acceptElement","prepareForNextElement","shouldContinueIfNotFound","foundElement","fromCtx","currentNode","FILTER_ACCEPT","previousNode","nextNode","nextUncontrolled","FILTER_SKIP","FILTER_REJECT","lastToIgnore","currentCtx","fromMover","acceptElement","groupperElement","fromMoverElement","moverElement","Keys","Tab","Enter","Esc","Space","PageUp","PageDown","End","Home","Left","Up","Right","Down","FocusedElementState","KEYBORG_FOCUSIN","_onKeyDown","activeElement","_setFocusedElement","_onChanged","keyCode","ctrlKey","contentEditable","shiftKey","next","findNextTabbable","nextElement","moveFrom","preventDefault","stopImmediatePropagation","lastMoverOrGroupper","outOfDOMOrder","DOCUMENT_POSITION_PRECEDING","nextElementCtx","triggerFocusEvent","_lastVal","lastCtx","_lastResetElement","_nextVal","forgetMemorized","tabsterFocusable","_focusFirstOrLast","focusLast","prevTabIndex","prevAriaHidden","_setOrRemoveAttribute","lastResetElement","nextVal","_validateFocusedElement","actualContainer","isTabbingTimer","_isTabbingTimer","isTabbing","callFindNext","lastMoverOrGroupperElement","parentCtx","parentMoverOrGroupper","newCurrent","adjacentElement","adjacentCtx","adjacentFrom","GroupperDummyManager","makeTabbable","_first","currentIsDummy","_shouldTabInside","groupperFirstFocusable","getFirst","isTabbable","noIfFirstIsFocused","isParentActive","g","orContainer","setFirst","parentCtxGroupper","parentGroupper","parentGroupperElement","getIsActive","GroupperAPI","_onMouseDown","_grouppers","_updateCurrent","handleKeyPress","_current","groupperId","newGroupper","_onGroupperDispose","forgetCurrentGrouppers","includeTarget","checkTarget","newIds","isTarget","delegated","noGoUp","KeyboardNavigationState","_keyborg","createKeyborg","_onChange","disposeKeyborg","_wasFocusedCounter","_ariaHidden","internalId","wasFocused","ModalizerDummyManager","dummyContainer","activeElements","_activeElements","_wasFocused","makeActive","noIncrement","modalizerElement","isTrapped","eventName","allElements","ModalizerAPI","_parts","_modalizers","focusedSince","m","f","augmentedMap","_augMap","currentIsOthersAccessible","isOthersAccessible","isAlwaysAccessible","_restoreModalizerFocusTimer","_restoreModalizerFocus","_aug","_hiddenUpdateTimer","_onModalizerDispose","hiddenUpdate","_hiddenUpdate","elementFromModalizer","noFocusFirst","noFocusDefault","modalizerRoot","isNoFocusFirst","isNoFocusDefault","currentModalizer","parts","visibleElements","hiddenElements","alwaysAccessibleElements","mParts","allVisibleElements","newAugmented","newAugmentedMap","toggle","hide","walk","containsModalizer","outsideElement","_inputSelector","MoverDummyManager","getMemorized","memorized","_getMemorized","_onFocusDummyInput","_moverUpdateAdd","_moverUpdateAttr","_moverUpdateRemove","entries","newVisibility","fullyVisible","_fullyVisible","intersectionRatio","_visible","getState","visibilityTolerance","trackState","visibilityAware","_intersectionObserver","IntersectionObserver","_onIntersection","threshold","_observeState","memorizeCurrent","disconnect","_allElements","_unobserve","_setCurrentTimer","setCurrent","changed","_prevCurrent","weak","getCurrent","hasDefault","MutationObserver","updateQueue","observer","mutations","mutation","removedNodes","added","addedNodes","attributeName","requestUpdate","setElement","unobserve","observe","updateElement","addNewElements","getMoverGroupper","removeWalk","toe","childList","subtree","attributes","attributeFilter","isCurrent","getDistance","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","xDistance","yDistance","sqrt","MoverAPI","_movers","_ignoredInputTimer","_ignoredInputResolve","_isIgnoredInput","moverProps","direction","isBoth","isVertical","isHorizontal","isGrid","isCyclic","cyclic","focusedElementRect","focusedElementX1","focusedElementX2","ceil","floor","nextElementX1","nextElementX2","firstColumnX1","lastColumnX1","targetElement","lastDistance","lastIntersection","xIntersectionWidth","minWidth","intersection","distance","moverId","newMover","_onMoverDispose","selectionStart","selectionEnd","textLength","asyncRet","selection","getSelection","initialLength","modify","selStart","anchorNode","prevAnchorNode","focusNode","prevFocusNode","anchorOffset","prevAnchorOffset","focusOffset","prevFocusOffset","textContent","anchorFound","addOffsets","nodeText","firstChild","len","stop","observeMutations","syncState","onMutation","updateTabsterElements","processNode","_conditionCheckTimeout","ObservedElementAPI","_currentRequest","delta","_currentRequestTimestamp","settleTime","cancel","info","_observedById","observedNames","prevNames","_isObservedNamesUpdated","prevName","obn","_observedByName","_waitConditional","_waiting","_rejectWaiting","shouldResolve","conditionTimer","o","prefix","request","promise","currentRequestFocus","waitingElementKey","waitingAccessibleElementKey","waitingFocusableElementKey","waitingElement","waitingAccessibleElement","waitingFocusableElement","waiting","includes","resolveAccessible","resolveFocusable","defaultProps","areaClass","outlineClass","outlineColor","outlineWidth","OutlinePosition","equalsTo","other","clone","OutlineAPI","_onScroll","_fullScreenEventName","_onFullScreenChanged","_fullScreenElementName","outlineElements","_getDOM","fsElement","_fullScreenElement","_updateElement","_isVisible","_setVisibility","_outlinedElement","_isParentChild","_curPos","_setOutlinePosition","__tabsterOutline","appendStyles","classList","_allOutlineElements","_removeDOM","_curOutlineElements","_shouldShowCustomOutline","isIgnored","inputType","outlinedInputTypes","button","checkbox","file","image","radio","range","submit","_updateOutline","visible","boundingRect","p","hasAbsolutePositionedParent","hasFixedPositionedParent","overflow","allRect","allWidth","allHeight","ow","leftBorderNode","topBorderNode","rightBorderNode","bottomBorderNode","sx","pageXOffset","sy","pageYOffset","background","contextElement","parentNode","child","DOCUMENT_POSITION_CONTAINED_BY","createTextNode","getOutlineStyles","head","UncontrolledAPI","Tabster","core","TabsterCore","__VERSION__","_storage","internal","stopObserver","resumeObserver","createTabster","noRefCount","disposeTabster","allInstances","_initTimer","_initQueue","_forgetMemorizedElements","_forgetMemorizedTimer","addremove","storage","forceCleanup","shift","queue","tabsterCore","getCurrentTabster","getTabster","getGroupper","getMover","getOutline","getModalizer","getObservedElement","getCrossOrigin","getInternal","makeNoOp","noop","isNoOp"],"mappings":"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"}