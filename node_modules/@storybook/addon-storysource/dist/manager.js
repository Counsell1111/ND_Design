var __create=Object.create;var __defProp=Object.defineProperty;var __getOwnPropDesc=Object.getOwnPropertyDescriptor;var __getOwnPropNames=Object.getOwnPropertyNames;var __getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty;var __copyProps=(to,from,except,desc)=>{if(from&&typeof from=="object"||typeof from=="function")for(let key of __getOwnPropNames(from))!__hasOwnProp.call(to,key)&&key!==except&&__defProp(to,key,{get:()=>from[key],enumerable:!(desc=__getOwnPropDesc(from,key))||desc.enumerable});return to};var __toESM=(mod,isNodeMode,target)=>(target=mod!=null?__create(__getProtoOf(mod)):{},__copyProps(isNodeMode||!mod||!mod.__esModule?__defProp(target,"default",{value:mod,enumerable:!0}):target,mod));var import_react2=__toESM(require("react")),import_manager_api2=require("@storybook/manager-api");var import_react=__toESM(require("react")),import_manager_api=require("@storybook/manager-api"),import_theming=require("@storybook/theming"),import_router=require("@storybook/router"),import_components=require("@storybook/components"),import_react_syntax_highlighter=require("react-syntax-highlighter"),StyledStoryLink=(0,import_theming.styled)(import_router.Link)(({theme})=>({display:"block",textDecoration:"none",borderRadius:theme.appBorderRadius,color:"inherit","&:hover":{background:theme.background.hoverable}})),SelectedStoryHighlight=import_theming.styled.div(({theme})=>({background:theme.background.hoverable,borderRadius:theme.appBorderRadius})),StyledSyntaxHighlighter=(0,import_theming.styled)(import_components.SyntaxHighlighter)(({theme})=>({fontSize:theme.typography.size.s2-1})),areLocationsEqual=(a,b)=>a.startLoc.line===b.startLoc.line&&a.startLoc.col===b.startLoc.col&&a.endLoc.line===b.endLoc.line&&a.endLoc.col===b.endLoc.col,StoryPanel=({api})=>{let story=api.getCurrentStoryData(),selectedStoryRef=import_react.default.useRef(null),{source:loaderSource,locationsMap}=(0,import_manager_api.useParameter)("storySource",{}),{source:{originalSource:docsSource}={}}=(0,import_manager_api.useParameter)("docs",{}),source=loaderSource||docsSource||"loading source...",currentLocation=locationsMap?locationsMap[Object.keys(locationsMap).find(key=>{let sourceLoaderId=key.split("--");return story.id.endsWith(sourceLoaderId[sourceLoaderId.length-1])})]:void 0;import_react.default.useEffect(()=>{selectedStoryRef.current&&selectedStoryRef.current.scrollIntoView()},[selectedStoryRef.current]);let createPart=({rows,stylesheet,useInlineStyles})=>rows.map((node,i)=>(0,import_react_syntax_highlighter.createElement)({node,stylesheet,useInlineStyles,key:`code-segment${i}`})),createStoryPart=({rows,stylesheet,useInlineStyles,location,id,refId})=>{let first=location.startLoc.line-1,last=location.endLoc.line,storyRows=rows.slice(first,last),storySource=createPart({rows:storyRows,stylesheet,useInlineStyles}),storyKey=`${first}-${last}`;return currentLocation&&areLocationsEqual(location,currentLocation)?import_react.default.createElement(SelectedStoryHighlight,{key:storyKey,ref:selectedStoryRef},storySource):import_react.default.createElement(StyledStoryLink,{to:refId?`/story/${refId}_${id}`:`/story/${id}`,key:storyKey},storySource)},createParts=({rows,stylesheet,useInlineStyles})=>{let parts=[],lastRow=0;Object.keys(locationsMap).forEach(key=>{let location=locationsMap[key],first=location.startLoc.line-1,last=location.endLoc.line,{title,refId}=story,sourceIdParts=key.split("--"),id=api.storyId(title,sourceIdParts[sourceIdParts.length-1]),start=createPart({rows:rows.slice(lastRow,first),stylesheet,useInlineStyles}),storyPart=createStoryPart({rows,stylesheet,useInlineStyles,location,id,refId});parts.push(start),parts.push(storyPart),lastRow=last});let lastPart=createPart({rows:rows.slice(lastRow),stylesheet,useInlineStyles});return parts.push(lastPart),parts};return story?import_react.default.createElement(StyledSyntaxHighlighter,{language:"jsx",showLineNumbers:!0,renderer:({rows,stylesheet,useInlineStyles})=>{let myrows=rows.map(({properties,...rest})=>({...rest,properties:{className:[]}}));if(!locationsMap||!Object.keys(locationsMap).length)return createPart({rows:myrows,stylesheet,useInlineStyles});let parts=createParts({rows:myrows,stylesheet,useInlineStyles});return import_react.default.createElement("span",null,parts)},format:!1,copyable:!1,padded:!0},source):null};var ADDON_ID="storybook/source-loader",PANEL_ID=`${ADDON_ID}/panel`;import_manager_api2.addons.register(ADDON_ID,api=>{import_manager_api2.addons.addPanel(PANEL_ID,{title:"Code",id:"code",render:({active,key})=>active?import_react2.default.createElement(StoryPanel,{key,api}):null,paramKey:"storysource"})});
